(setq *rs-list* '((:time 0.0 :angle-vector #f(0.48801 -1.2433 -66.8043 146.318 -66.9973 1.02173 0.0 0.064207 0.626546 -66.7791 146.303 -66.9977 -0.885722 0.0 -1.00826 28.1965 -0.165936 6.54345 -13.0037 -8.30977 0.204316 -30.3366 -0.296881 -0.332436 -10.8338 15.0 -14.8917 8.04598 -0.54611 -30.9361 0.119144 0.263204 -10.8419 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976035 0.003904 -0.217579) (-0.004911 0.99998 -0.004086) (0.217559 0.005057 0.976034)) pos #f(-51.0343 0.253689 252.161)) :zmp #f(-0.039072 -0.008066 0.0) :wrench-list ((#f(0.018978 -0.000139 297.44) #f(0.018972 -0.000139 297.398) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.198879 11.6196 2.722256e-05) #f(-0.198879 11.6218 2.722255e-05) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.004 :angle-vector #f(0.491499 -1.23669 -66.8085 146.287 -66.9976 0.994269 0.0 0.076192 0.600749 -66.7849 146.272 -66.9979 -0.880577 0.0 -1.02306 28.3035 -0.167953 6.5658 -13.112 -8.3373 0.196563 -30.3869 -0.301101 -0.34152 -10.8468 15.0 -14.997 8.07606 -0.541957 -30.9799 0.12129 0.27107 -10.8527 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976271 0.003924 -0.216518) (-0.005007 0.999978 -0.004456) (0.216495 0.005435 0.976269)) pos #f(-51.4312 0.35295 252.176)) :zmp #f(-0.040919 -0.008071 0.0) :wrench-list ((#f(1.31695 0.000677 309.889) #f(1.31677 0.000677 309.845) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.207317 12.6781 0.000838) #f(-0.207317 12.6805 0.000838) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.008 :angle-vector #f(0.494729 -1.22992 -66.8127 146.255 -66.9978 0.966817 0.0 0.087923 0.575123 -66.7906 146.24 -66.9981 -0.875442 0.0 -1.03761 28.4094 -0.170428 6.58761 -13.2179 -8.36479 0.189463 -30.4364 -0.307096 -0.351174 -10.8604 15.0 -15.0997 8.10638 -0.537189 -31.0233 0.124629 0.2793 -10.8643 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976505 0.003939 -0.215457) (-0.005098 0.999975 -0.004824) (0.215433 0.005809 0.976501)) pos #f(-51.8259 0.451303 252.195)) :zmp #f(-0.042673 -0.008076 0.0) :wrench-list ((#f(2.62719 0.001786 322.339) #f(2.62685 0.001786 322.293) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.215763 13.7531 0.001654) #f(-0.215763 13.7556 0.001654) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.012 :angle-vector #f(0.497454 -1.22286 -66.8168 146.222 -66.998 0.939384 0.0 0.099152 0.54983 -66.7962 146.207 -66.9983 -0.870328 0.0 -1.05167 28.5133 -0.173793 6.6084 -13.3189 -8.39223 0.183633 -30.4848 -0.316525 -0.361921 -10.8752 15.0 -15.1973 8.13718 -0.531232 -31.0656 0.130278 0.288226 -10.8775 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976738 0.003948 -0.214398) (-0.00518 0.999973 -0.005185) (0.214372 0.006175 0.976733)) pos #f(-52.2143 0.547478 252.225)) :zmp #f(-0.044333 -0.008082 0.0) :wrench-list ((#f(3.94608 0.003262 334.759) #f(3.94556 0.003262 334.711) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.224238 14.8386 0.002469) #f(-0.224238 14.8412 0.002469) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.016 :angle-vector #f(0.499446 -1.21536 -66.8207 146.187 -66.998 0.911984 0.0 0.109652 0.525023 -66.8017 146.172 -66.9983 -0.865242 0.0 -1.06503 28.6144 -0.178441 6.62767 -13.4128 -8.41957 0.179648 -30.5312 -0.330919 -0.374242 -10.8917 15.0 -15.2875 8.16868 -0.523555 -31.1063 0.139266 0.298151 -10.8931 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97697 0.003946 -0.213341) (-0.005249 0.999971 -0.005539) (0.213313 0.006532 0.976962)) pos #f(-52.5925 0.640282 252.275)) :zmp #f(-0.045897 -0.00809 0.0) :wrench-list ((#f(5.2701 0.005169 347.116) #f(5.26941 0.005169 347.067) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.232758 15.929 0.003274) #f(-0.232758 15.9318 0.003274) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.02 :angle-vector #f(0.500496 -1.20731 -66.8244 146.152 -66.998 0.88463 0.0 0.119212 0.500842 -66.8069 146.137 -66.9983 -0.86019 0.0 -1.07747 28.7118 -0.184736 6.64496 -13.4975 -8.44677 0.178041 -30.5752 -0.351683 -0.388572 -10.9105 15.0 -15.3679 8.20107 -0.51367 -31.1451 0.152539 0.309347 -10.9117 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.9772 0.003931 -0.212285) (-0.005301 0.999969 -0.005883) (0.212255 0.006874 0.97719)) pos #f(-52.9569 0.728608 252.35)) :zmp #f(-0.047364 -0.008102 0.0) :wrench-list ((#f(6.59587 0.007569 359.382) #f(6.59502 0.007569 359.331) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.241339 17.019 0.004062) #f(-0.241339 17.022 0.004062) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.024 :angle-vector #f(0.500412 -1.1986 -66.8278 146.115 -66.9977 0.857335 0.0 0.127639 0.477414 -66.8117 146.1 -66.998 -0.855175 0.0 -1.0888 28.8046 -0.193009 6.65981 -13.5708 -8.47379 0.179306 -30.6162 -0.380097 -0.405298 -10.9319 15.0 -15.4364 8.23453 -0.501132 -31.1814 0.170957 0.322054 -10.934 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977429 0.003901 -0.21123) (-0.005334 0.999966 -0.006214) (0.211199 0.0072 0.977417)) pos #f(-53.3039 0.811425 252.46)) :zmp #f(-0.048736 -0.008119 0.0) :wrench-list ((#f(7.92019 0.010511 371.526) #f(7.91917 0.010511 371.474) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.24999 18.1039 0.004827) #f(-0.24999 18.107 0.004827) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.028 :angle-vector #f(0.499021 -1.18914 -66.8306 146.076 -66.9972 0.830116 0.0 0.134758 0.454858 -66.8161 146.061 -66.9975 -0.850201 0.0 -1.09882 28.8922 -0.203555 6.67181 -13.6307 -8.50059 0.183895 -30.6536 -0.417314 -0.424763 -10.9562 15.0 -15.4908 8.26924 -0.485541 -31.2148 0.195296 0.336482 -10.9604 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977656 0.003853 -0.210176) (-0.005345 0.999964 -0.00653) (0.210143 0.007508 0.977642)) pos #f(-53.6303 0.887787 252.61)) :zmp #f(-0.050016 -0.008139 0.0) :wrench-list ((#f(9.23994 0.01404 383.521) #f(9.23877 0.01404 383.466) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.258723 19.1791 0.005564) #f(-0.258723 19.1823 0.005564) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.032 :angle-vector #f(0.496166 -1.17882 -66.8329 146.035 -66.9963 0.802988 0.0 0.140413 0.433278 -66.8198 146.02 -66.9966 -0.845267 0.0 -1.10737 28.9738 -0.216639 6.68055 -13.6755 -8.52711 0.192217 -30.6869 -0.464358 -0.447263 -10.984 15.0 -15.5293 8.30534 -0.46654 -31.2449 0.226247 0.35281 -10.9915 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977882 0.003785 -0.209122) (-0.005331 0.999962 -0.006831) (0.209089 0.007794 0.977866)) pos #f(-53.9331 0.956826 252.807)) :zmp #f(-0.051205 -0.008165 0.0) :wrench-list ((#f(10.5522 0.018194 395.338) #f(10.5509 0.018194 395.281) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.267543 20.2403 0.006267) #f(-0.267543 20.2436 0.006267) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.036 :angle-vector #f(0.491711 -1.16757 -66.8344 145.992 -66.9949 0.775967 0.0 0.144464 0.412768 -66.8227 145.977 -66.9952 -0.84037 0.0 -1.11427 29.0487 -0.232491 6.68564 -13.7033 -8.5533 0.204642 -30.7157 -0.522131 -0.473051 -11.0154 15.0 -15.5499 8.34298 -0.443814 -31.2711 0.264415 0.371185 -11.0277 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978107 0.003696 -0.208068) (-0.005291 0.999961 -0.007113) (0.208033 0.008058 0.978089)) pos #f(-54.2091 1.01775 253.059)) :zmp #f(-0.052309 -0.008196 0.0) :wrench-list ((#f(11.8541 0.023002 406.951) #f(11.8526 0.023002 406.893) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.276455 21.2838 0.006932) #f(-0.276455 21.2872 0.006932) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.04 :angle-vector #f(0.485536 -1.15532 -66.8349 145.946 -66.9928 0.749072 0.0 0.146792 0.393409 -66.8247 145.931 -66.9932 -0.835508 0.0 -1.11938 29.1162 -0.25131 6.68671 -13.7124 -8.57911 0.221498 -30.7394 -0.591405 -0.502332 -11.0506 15.0 -15.5509 8.38227 -0.417092 -31.2932 0.31032 0.391723 -11.0693 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978332 0.003583 -0.207012) (-0.005223 0.999959 -0.007375) (0.206977 0.008297 0.978311)) pos #f(-54.4559 1.06987 253.372)) :zmp #f(-0.053329 -0.008233 0.0) :wrench-list ((#f(13.143 0.028487 418.336) #f(13.1414 0.028487 418.276) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.285459 22.3061 0.007556) #f(-0.285459 22.3095 0.007556) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.044 :angle-vector #f(0.477541 -1.14203 -66.8344 145.896 -66.99 0.72232 0.0 0.147292 0.375274 -66.8254 145.882 -66.9905 -0.830674 0.0 -1.12257 29.1759 -0.27326 6.68343 -13.7012 -8.60448 0.243072 -30.7576 -0.672826 -0.535265 -11.0899 15.0 -15.5306 8.42332 -0.386147 -31.3108 0.364398 0.414511 -11.1166 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978556 0.003446 -0.205953) (-0.005124 0.999958 -0.007617) (0.205918 0.008509 0.978532)) pos #f(-54.6707 1.11253 253.751)) :zmp #f(-0.05427 -0.008275 0.0) :wrench-list ((#f(14.4164 0.034664 429.468) #f(14.4147 0.034664 429.406) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.294554 23.304 0.008136) #f(-0.294554 23.3074 0.008136) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.048 :angle-vector #f(0.467642 -1.12763 -66.8325 145.843 -66.9862 0.69573 0.0 0.14588 0.35842 -66.8248 145.829 -66.9869 -0.825861 0.0 -1.1237 29.2271 -0.298472 6.67547 -13.6683 -8.62935 0.26961 -30.7699 -0.766916 -0.571964 -11.1334 15.0 -15.4875 8.46622 -0.350796 -31.3234 0.427 0.439604 -11.1698 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97878 0.003283 -0.204889) (-0.004995 0.999957 -0.007837) (0.204855 0.008694 0.978754)) pos #f(-54.8513 1.14521 254.203)) :zmp #f(-0.055137 -0.008322 0.0) :wrench-list ((#f(15.6718 0.041542 440.323) #f(15.67 0.041542 440.259) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.303736 24.2747 0.008668) #f(-0.303736 24.2782 0.008668) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.052 :angle-vector #f(0.455775 -1.11209 -66.829 145.786 -66.9814 0.669322 0.0 0.142489 0.342894 -66.8224 145.772 -66.9822 -0.82106 0.0 -1.12266 29.2693 -0.327046 6.66253 -13.6123 -8.65365 0.301315 -30.7758 -0.874067 -0.612498 -11.1812 15.0 -15.4201 8.51104 -0.310897 -31.3307 0.49839 0.467024 -11.2292 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979003 0.003094 -0.20382) (-0.004833 0.999956 -0.008034) (0.203786 0.00885 0.978975)) pos #f(-54.9955 1.16742 254.735)) :zmp #f(-0.055934 -0.008375 0.0) :wrench-list ((#f(16.9071 0.049122 450.879) #f(16.9052 0.049122 450.813) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.313 25.2159 0.009153) #f(-0.313 25.2193 0.009153) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.056 :angle-vector #f(0.441893 -1.09539 -66.8237 145.724 -66.9753 0.643118 0.0 0.13707 0.328734 -66.8182 145.71 -66.9763 -0.816258 0.0 -1.11936 29.302 -0.359047 6.64432 -13.5319 -8.67731 0.338352 -30.775 -0.994547 -0.656889 -11.2334 15.0 -15.3271 8.55784 -0.266354 -31.3324 0.578749 0.496765 -11.2948 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979228 0.002879 -0.202743) (-0.004639 0.999956 -0.008207) (0.202711 0.008977 0.979197)) pos #f(-55.1014 1.17878 255.351)) :zmp #f(-0.056665 -0.008433 0.0) :wrench-list ((#f(18.12 0.057397 461.115) #f(18.118 0.057397 461.047) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.322335 26.1253 0.009588) #f(-0.322335 26.1287 0.009588) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.06 :angle-vector #f(0.425968 -1.07751 -66.8163 145.657 -66.9676 0.617138 0.0 0.129592 0.315962 -66.8117 145.643 -66.9689 -0.811443 0.0 -1.1137 29.3248 -0.394507 6.62057 -13.426 -8.70027 0.380843 -30.767 -1.1285 -0.705114 -11.2899 15.0 -15.2073 8.60668 -0.217112 -31.3282 0.668174 0.528788 -11.3666 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979453 0.002637 -0.201657) (-0.004412 0.999955 -0.008355) (0.201626 0.009073 0.979421)) pos #f(-55.167 1.17899 256.057)) :zmp #f(-0.057334 -0.008496 0.0) :wrench-list ((#f(19.3086 0.066353 471.011) #f(19.3065 0.066353 470.941) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.33173 27.0013 0.009973) #f(-0.33173 27.0047 0.009973) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.064 :angle-vector #f(0.407988 -1.05844 -66.8065 145.584 -66.9583 0.591406 0.0 0.120041 0.304591 -66.8027 145.57 -66.96 -0.8066 0.0 -1.10561 29.3372 -0.433427 6.59106 -13.2933 -8.72246 0.428868 -30.7516 -1.27593 -0.757105 -11.3507 15.0 -15.0596 8.65756 -0.163161 -31.3176 0.766674 0.563025 -11.4447 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979679 0.002368 -0.200559) (-0.004153 0.999955 -0.008478) (0.20053 0.009139 0.979645)) pos #f(-55.1909 1.16781 256.858)) :zmp #f(-0.057947 -0.008563 0.0) :wrench-list ((#f(20.4711 0.075971 480.546) #f(20.4689 0.075971 480.475) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.341171 27.8424 0.010309) #f(-0.341171 27.8457 0.010309) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.068 :angle-vector #f(0.387962 -1.0382 -66.7941 145.504 -66.947 0.565943 0.0 0.108422 0.294622 -66.7909 145.49 -66.9491 -0.80171 0.0 -1.09502 29.339 -0.475774 6.55555 -13.133 -8.74378 0.482466 -30.7285 -1.43674 -0.812746 -11.4156 15.0 -14.8828 8.71052 -0.104534 -31.3005 0.874174 0.599374 -11.529 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979907 0.002073 -0.199446) (-0.003861 0.999956 -0.008576) (0.19942 0.009174 0.979871)) pos #f(-55.1717 1.14509 257.759)) :zmp #f(-0.058508 -0.008635 0.0) :wrench-list ((#f(21.6057 0.086222 489.704) #f(21.6034 0.086222 489.63) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.35064 28.6477 0.010598) #f(-0.35064 28.6509 0.010598) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.072 :angle-vector #f(0.365915 -1.01679 -66.7786 145.417 -66.9336 0.540775 0.0 0.094759 0.286045 -66.7759 145.403 -66.9362 -0.796756 0.0 -1.08188 29.3297 -0.52148 6.51384 -12.9442 -8.76417 0.541638 -30.6972 -1.61067 -0.871877 -11.4846 15.0 -14.6761 8.76554 -0.041308 -31.2766 0.990516 0.637705 -11.6193 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980136 0.001752 -0.198317) (-0.003537 0.999956 -0.008649) (0.198294 0.009178 0.9801)) pos #f(-55.108 1.11075 258.766)) :zmp #f(-0.059021 -0.008712 0.0) :wrench-list ((#f(22.7108 0.097077 498.466) #f(22.7085 0.097077 498.391) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.360121 29.4161 0.010839) #f(-0.360121 29.4191 0.010839) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.076 :angle-vector #f(0.341891 -0.994247 -66.7598 145.322 -66.9176 0.515925 0.0 0.079091 0.278837 -66.7573 145.308 -66.9208 -0.791715 0.0 -1.06615 29.3091 -0.570446 6.46576 -12.726 -8.78354 0.606339 -30.6575 -1.79738 -0.934293 -11.5574 15.0 -14.4387 8.8226 0.026398 -31.2455 1.11545 0.677855 -11.7154 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980369 0.001406 -0.197169) (-0.003183 0.999957 -0.008696) (0.197148 0.009152 0.980331)) pos #f(-54.9989 1.06482 259.882)) :zmp #f(-0.05949 -0.008792 0.0) :wrench-list ((#f(23.7848 0.108502 506.817) #f(23.7825 0.108502 506.739) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.369594 30.1467 0.011034) #f(-0.369594 30.1496 0.011034) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.08 :angle-vector #f(0.315953 -0.970605 -66.7373 145.218 -66.899 0.49142 0.0 0.061477 0.272964 -66.7348 145.204 -66.9029 -0.786565 0.0 -1.04781 29.277 -0.622541 6.41113 -12.4778 -8.80181 0.676487 -30.6092 -1.99637 -0.999742 -11.6339 15.0 -14.1699 8.88168 0.098421 -31.207 1.24866 0.719631 -11.817 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980604 0.001037 -0.195998) (-0.002799 0.999958 -0.008717) (0.19598 0.009097 0.980566)) pos #f(-54.8435 1.00736 261.112)) :zmp #f(-0.059919 -0.008877 0.0) :wrench-list ((#f(24.8263 0.120464 514.739) #f(24.824 0.120464 514.659) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.379043 30.8389 0.011185) #f(-0.379043 30.8415 0.011185) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.084 :angle-vector #f(0.288179 -0.945912 -66.7107 145.104 -66.8773 0.467286 0.0 0.041995 0.268382 -66.7079 145.09 -66.882 -0.781282 0.0 -1.02684 29.2331 -0.677598 6.34983 -12.199 -8.81888 0.751956 -30.5521 -2.20701 -1.06793 -11.7136 15.0 -13.869 8.94272 0.174555 -31.161 1.38972 0.762809 -11.9239 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980843 0.000645 -0.194801) (-0.002388 0.999959 -0.008713) (0.194788 0.009012 0.980804)) pos #f(-54.6411 0.938555 262.461)) :zmp #f(-0.060311 -0.008965 0.0) :wrench-list ((#f(25.8339 0.132927 522.22) #f(25.8315 0.132927 522.138) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.388447 31.4918 0.011294) #f(-0.388447 31.4941 0.011294) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.088 :angle-vector #f(0.25867 -0.920225 -66.6796 144.98 -66.8522 0.443551 0.0 0.020738 0.265033 -66.6763 144.965 -66.8579 -0.775837 0.0 -1.00324 29.1773 -0.735418 6.28173 -11.8891 -8.83467 0.832579 -30.4858 -2.42857 -1.1385 -11.7962 15.0 -13.5356 9.00565 0.254548 -31.1071 1.53813 0.807134 -12.0356 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981085 0.000232 -0.193576) (-0.00195 0.99996 -0.008685) (0.193566 0.008898 0.981047)) pos #f(-54.3913 0.858638 263.932)) :zmp #f(-0.060668 -0.009057 0.0) :wrench-list ((#f(26.8062 0.145854 529.244) #f(26.8038 0.145854 529.16) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.397787 32.1048 0.011361) #f(-0.397787 32.1069 0.011361) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.092 :angle-vector #f(0.22754 -0.893614 -66.6436 144.844 -66.8235 0.420241 0.0 -0.002181 0.262848 -66.6394 144.829 -66.8303 -0.770204 0.0 -0.977016 29.1095 -0.795772 6.20672 -11.5477 -8.84908 0.91815 -30.4103 -2.66017 -1.21108 -11.8815 15.0 -13.1693 9.0704 0.338109 -31.0452 1.69331 0.852319 -12.1517 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981333 -0.000199 -0.192318) (-0.001489 0.999962 -0.008633) (0.192312 0.008758 0.981295)) pos #f(-54.0937 0.767935 265.529)) :zmp #f(-0.060994 -0.009152 0.0) :wrench-list ((#f(27.742 0.159204 535.799) #f(27.7396 0.159204 535.713) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.407045 32.6773 0.011389) #f(-0.407045 32.6791 0.011389) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.096 :angle-vector #f(0.194925 -0.866158 -66.6023 144.695 -66.7908 0.397387 0.0 -0.026631 0.261747 -66.5969 144.68 -66.7989 -0.76435 0.0 -0.948192 29.0295 -0.858393 6.12474 -11.1746 -8.862 1.00842 -30.3253 -2.90081 -1.28523 -11.9688 15.0 -12.7697 9.13687 0.4249 -30.975 1.85459 0.898048 -12.2716 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981585 -0.000648 -0.191023) (-0.001006 0.999963 -0.008558) (0.191022 0.008593 0.981548)) pos #f(-53.7483 0.666847 267.256)) :zmp #f(-0.061291 -0.009251 0.0) :wrench-list ((#f(28.6401 0.172937 541.873) #f(28.6377 0.172937 541.785) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.416199 33.2088 0.01138) #f(-0.416199 33.2102 0.01138) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.1 :angle-vector #f(0.160976 -0.837947 -66.5552 144.534 -66.7538 0.375017 0.0 -0.052464 0.261639 -66.5482 144.517 -66.7632 -0.758244 0.0 -0.916803 28.9374 -0.922985 6.03572 -10.7694 -8.87335 1.1031 -30.2306 -3.14938 -1.36046 -12.0578 15.0 -12.3368 9.20495 0.514542 -30.8964 2.02122 0.943973 -12.3948 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981844 -0.00111 -0.189689) (-0.000504 0.999964 -0.008461) (0.189692 0.008403 0.981808)) pos #f(-53.3551 0.555853 269.116)) :zmp #f(-0.061562 -0.009353 0.0) :wrench-list ((#f(29.4993 0.18701 547.454) #f(29.4969 0.18701 547.365) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.42523 33.6988 0.011336) #f(-0.42523 33.6999 0.011336) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.104 :angle-vector #f(0.125865 -0.80908 -66.5018 144.357 -66.712 0.353163 0.0 -0.079514 0.262419 -66.4928 144.34 -66.723 -0.751851 0.0 -0.882895 28.833 -0.989217 5.93962 -10.3322 -8.88301 1.20185 -30.1262 -3.40462 -1.43626 -12.1479 15.0 -11.8704 9.27451 0.606611 -30.8093 2.19235 0.989713 -12.5206 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982108 -0.001584 -0.18831) (1.276944e-05 0.999965 -0.008343) (0.188317 0.008191 0.982074)) pos #f(-52.9143 0.435513 271.112)) :zmp #f(-0.061807 -0.009458 0.0) :wrench-list ((#f(30.3186 0.201377 552.533) #f(30.3163 0.201377 552.442) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.434116 34.1471 0.011258) #f(-0.434116 34.1478 0.011258) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.108 :angle-vector #f(0.089781 -0.779668 -66.4417 144.165 -66.665 0.331856 0.0 -0.107597 0.263974 -66.4302 144.147 -66.6779 -0.745135 0.0 -0.846527 28.7165 -1.05673 5.83643 -9.86294 -8.89087 1.30432 -30.0119 -3.66516 -1.51205 -12.2386 15.0 -11.3705 9.3454 0.70064 -30.7135 2.36706 1.03486 -12.6484 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.98238 -0.002066 -0.186883) (0.000542 0.999966 -0.008205) (0.186894 0.00796 0.982348)) pos #f(-52.4265 0.306463 273.247)) :zmp #f(-0.062029 -0.009567 0.0) :wrench-list ((#f(31.0971 0.215991 557.1) #f(31.0948 0.215991 557.007) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.442836 34.5533 0.011149) #f(-0.442836 34.5536 0.011149) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.112 :angle-vector #f(0.05293 -0.749834 -66.3743 143.956 -66.6126 0.311127 0.0 -0.13651 0.266176 -66.3598 143.936 -66.6275 -0.738057 0.0 -0.807771 28.588 -1.12511 5.72614 -9.3617 -8.89684 1.41007 -29.8877 -3.92948 -1.58721 -12.3291 15.0 -10.8373 9.41748 0.796119 -30.6088 2.54434 1.07897 -12.7773 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982659 -0.002553 -0.185403) (0.001079 0.999967 -0.00805) (0.185417 0.00771 0.98263)) pos #f(-51.8922 0.16942 275.524)) :zmp #f(-0.06223 -0.009678 0.0) :wrench-list ((#f(31.8339 0.230806 561.146) #f(31.8316 0.230806 561.052) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.451369 34.9171 0.011011) #f(-0.451369 34.917 0.011011) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.116 :angle-vector #f(0.015537 -0.719709 -66.2992 143.729 -66.5542 0.29101 0.0 -0.166032 0.268888 -66.2812 143.708 -66.5714 -0.730578 0.0 -0.76671 28.4474 -1.19395 5.60879 -8.82871 -8.90078 1.51866 -29.7535 -4.19597 -1.66108 -12.4188 15.0 -10.2711 9.49055 0.892494 -30.4952 2.7231 1.12157 -12.9066 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982947 -0.003042 -0.183865) (0.001621 0.999968 -0.007878) (0.183883 0.007446 0.98292)) pos #f(-51.3122 0.025175 277.945)) :zmp #f(-0.062411 -0.009793 0.0) :wrench-list ((#f(32.5281 0.245769 564.665) #f(32.5258 0.245769 564.568) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.459693 35.2385 0.010848) #f(-0.459693 35.2379 0.010848) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.12 :angle-vector #f(-0.022154 -0.689434 -66.2157 143.483 -66.4895 0.271538 0.0 -0.195926 0.271959 -66.1936 143.46 -66.5092 -0.722654 0.0 -0.723441 28.2951 -1.26278 5.4844 -8.26426 -8.90259 1.6296 -29.6091 -4.46287 -1.73295 -12.507 15.0 -9.6721 9.56445 0.989169 -30.3725 2.90216 1.16217 -13.0353 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983243 -0.003529 -0.182264) (0.002164 0.999968 -0.007692) (0.182285 0.007168 0.98322)) pos #f(-50.6875 -0.125399 280.512)) :zmp #f(-0.062574 -0.00991 0.0) :wrench-list ((#f(33.1789 0.26083 567.649) #f(33.1767 0.26083 567.55) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.467785 35.5173 0.01066) #f(-0.467785 35.5163 0.01066) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.124 :angle-vector #f(-0.059882 -0.659164 -66.1233 143.217 -66.418 0.252747 0.0 -0.225936 0.275228 -66.0966 143.191 -66.4404 -0.714243 0.0 -0.678071 28.1311 -1.3311 5.35305 -7.66876 -8.90215 1.74234 -29.4547 -4.72829 -1.80206 -12.5929 15.0 -9.04084 9.63895 1.0855 -30.2406 3.08025 1.20022 -13.1626 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983549 -0.00401 -0.180595) (0.002702 0.999968 -0.007493) (0.18062 0.006882 0.983529)) pos #f(-50.0194 -0.281354 283.228)) :zmp #f(-0.06272 -0.010031 0.0) :wrench-list ((#f(33.7858 0.275934 570.092) #f(33.7836 0.275934 569.992) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.475622 35.7535 0.010451) #f(-0.475622 35.7521 0.010451) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.128 :angle-vector #f(-0.097367 -0.629061 -66.0214 142.928 -66.3392 0.23467 0.0 -0.255788 0.278522 -65.9894 142.9 -66.3646 -0.705298 0.0 -0.630721 27.9557 -1.39838 5.21482 -7.04271 -8.89932 1.8563 -29.2902 -4.99022 -1.86762 -12.6756 15.0 -8.37786 9.71385 1.18081 -30.0996 3.25602 1.23516 -13.2873 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983866 -0.004481 -0.178854) (0.00323 0.999968 -0.007284) (0.17888 0.006588 0.983849)) pos #f(-49.3091 -0.441663 286.094)) :zmp #f(-0.06285 -0.010154 0.0) :wrench-list ((#f(34.348 0.291025 571.99) #f(34.3459 0.291025 571.888) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.483182 35.9471 0.010224) #f(-0.483182 35.9454 0.010224) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.132 :angle-vector #f(-0.134313 -0.5993 -65.9094 142.617 -66.2526 0.217346 0.0 -0.285189 0.281657 -65.8714 142.586 -66.2814 -0.695771 0.0 -0.581523 27.7692 -1.46406 5.06981 -6.3867 -8.89399 1.97088 -29.1156 -5.24653 -1.92878 -12.7544 15.0 -7.68381 9.78889 1.27437 -29.9493 3.42804 1.26639 -13.4084 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984193 -0.004936 -0.177033) (0.003744 0.999968 -0.007066) (0.177062 0.006292 0.98418)) pos #f(-48.5581 -0.605223 289.112)) :zmp #f(-0.062966 -0.01028 0.0) :wrench-list ((#f(34.8652 0.306048 573.338) #f(34.8631 0.306048 573.235) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.490441 36.0984 0.009981) #f(-0.490441 36.0963 0.009981) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.136 :angle-vector #f(-0.170404 -0.570064 -65.7867 142.281 -66.1578 0.20081 0.0 -0.31383 0.284437 -65.742 142.247 -66.1902 -0.685613 0.0 -0.530624 27.5719 -1.52755 4.91815 -5.70145 -8.88603 2.0854 -28.9309 -5.49496 -1.98465 -12.8282 15.0 -6.95946 9.86384 1.36541 -29.7896 3.59479 1.29329 -13.5248 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984531 -0.005371 -0.175128) (0.004238 0.999968 -0.006844) (0.175159 0.005996 0.984522)) pos #f(-47.7682 -0.770854 292.283)) :zmp #f(-0.063068 -0.010409 0.0) :wrench-list ((#f(35.3367 0.320947 574.134) #f(35.3347 0.320947 574.029) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.497376 36.2075 0.009725) #f(-0.497376 36.205 0.009725) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.14 :angle-vector #f(-0.205305 -0.541549 -65.6527 141.919 -66.0543 0.1851 0.0 -0.341382 0.286653 -65.6004 141.881 -66.0907 -0.674772 0.0 -0.47818 27.3642 -1.58822 4.75997 -4.98774 -8.87531 2.19917 -28.7363 -5.73311 -2.03429 -12.8962 15.0 -6.20567 9.93843 1.45311 -29.6207 3.75467 1.31521 -13.6352 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984882 -0.005782 -0.173133) (0.004707 0.999967 -0.006619) (0.173165 0.005704 0.984876)) pos #f(-46.9413 -0.937301 295.609)) :zmp #f(-0.063158 -0.01054 0.0) :wrench-list ((#f(35.7623 0.335669 574.376) #f(35.7603 0.335669 574.27) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.503965 36.2747 0.009459) #f(-0.503965 36.2719 0.009459) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.144 :angle-vector #f(-0.238665 -0.513961 -65.5067 141.53 -65.9415 0.170256 0.0 -0.3675 0.288087 -65.446 141.487 -65.9822 -0.663194 0.0 -0.424362 27.1463 -1.6454 4.59546 -4.24647 -8.86168 2.31143 -28.5317 -5.95848 -2.07671 -12.9572 15.0 -5.42344 10.0124 1.53661 -29.4424 3.90598 1.33144 -13.7385 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.985245 -0.006162 -0.171041) (0.005144 0.999966 -0.006393) (0.171074 0.005419 0.985243)) pos #f(-46.0795 -1.10323 299.089)) :zmp #f(-0.063237 -0.010675 0.0) :wrench-list ((#f(36.1416 0.35016 574.063) #f(36.1397 0.35016 573.956) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.510188 36.3002 0.009185) #f(-0.510188 36.2971 0.009185) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.148 :angle-vector #f(-0.270114 -0.487516 -65.3479 141.111 -65.8189 0.156316 0.0 -0.391819 0.288508 -65.2781 141.065 -65.8643 -0.650823 0.0 -0.36935 26.9188 -1.69842 4.42479 -3.47865 -8.84501 2.42142 -28.3173 -6.16842 -2.11089 -13.0103 15.0 -4.61382 10.0854 1.61503 -29.2547 4.04695 1.34127 -13.8333 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.985621 -0.006505 -0.168846) (0.005543 0.999966 -0.006171) (0.16888 0.005147 0.985623)) pos #f(-45.1849 -1.26724 302.724)) :zmp #f(-0.063305 -0.010812 0.0) :wrench-list ((#f(36.4744 0.36437 573.195) #f(36.4726 0.36437 573.087) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.516023 36.2844 0.008905) #f(-0.516023 36.2811 0.008905) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.152 :angle-vector #f(-0.299263 -0.462439 -65.1759 140.663 -65.686 0.143321 0.0 -0.413959 0.287672 -65.0958 140.611 -65.7365 -0.637603 0.0 -0.31334 26.6822 -1.74653 4.24816 -2.68536 -8.82517 2.5283 -28.0933 -6.36016 -2.13576 -13.0542 15.0 -3.77802 10.1571 1.6874 -29.0578 4.17573 1.34395 -13.9181 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.986011 -0.006807 -0.166542) (0.005897 0.999965 -0.005956) (0.166577 0.00489 0.986016)) pos #f(-44.26 -1.42784 306.515)) :zmp #f(-0.063363 -0.010951 0.0) :wrench-list ((#f(36.7606 0.378249 571.775) #f(36.7588 0.378249 571.666) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.521452 36.2278 0.008622) #f(-0.521452 36.2243 0.008622) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.156 :angle-vector #f(-0.325708 -0.438968 -64.9897 140.182 -65.5421 0.131312 0.0 -0.433519 0.285326 -64.8985 140.124 -65.5982 -0.623474 0.0 -0.256538 26.4368 -1.78897 4.06581 -1.8678 -8.80199 2.63121 -27.8597 -6.53081 -2.15018 -13.0879 15.0 -2.91732 10.2272 1.75275 -28.8516 4.29036 1.3387 -13.9916 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.986415 -0.00706 -0.164122) (0.0062 0.999964 -0.00575) (0.164156 0.004654 0.986423)) pos #f(-43.3073 -1.58349 310.462)) :zmp #f(-0.063412 -0.011094 0.0) :wrench-list ((#f(37.0001 0.39175 569.805) #f(36.9983 0.39175 569.695) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.526454 36.1309 0.008338) #f(-0.526454 36.1272 0.008338) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.16 :angle-vector #f(-0.349022 -0.417352 -64.7887 139.667 -65.3867 0.120331 0.0 -0.450082 0.281205 -64.6853 139.603 -65.4487 -0.608375 0.0 -0.199164 26.1834 -1.82497 3.87798 -1.02726 -8.77534 2.72923 -27.6167 -6.67735 -2.15301 -13.1102 15.0 -2.03312 10.2954 1.81004 -28.6361 4.38882 1.32471 -14.0522 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.986833 -0.007258 -0.161578) (0.006445 0.999964 -0.005557) (0.161613 0.004443 0.986844)) pos #f(-42.3298 -1.73255 314.565)) :zmp #f(-0.063453 -0.011239 0.0) :wrench-list ((#f(37.1928 0.404824 567.288) #f(37.1911 0.404824 567.177) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.531011 35.9942 0.008054) #f(-0.531011 35.9904 0.008054) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.164 :angle-vector #f(-0.368764 -0.397847 -64.5721 139.117 -65.2192 0.11042 0.0 -0.463212 0.27503 -64.4555 139.046 -65.2877 -0.592242 0.0 -0.141447 25.9224 -1.85368 3.68494 -0.165144 -8.74507 2.82143 -27.3646 -6.79664 -2.14301 -13.1197 15.0 -1.12691 10.3613 1.85821 -28.4115 4.46899 1.30112 -14.0983 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987266 -0.007394 -0.158905) (0.006623 0.999964 -0.005382) (0.158939 0.004261 0.987279)) pos #f(-41.3302 -1.87333 318.822)) :zmp #f(-0.063485 -0.011386 0.0) :wrench-list ((#f(37.3389 0.417428 564.229) #f(37.3373 0.417428 564.117) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.535106 35.8184 0.007772) #f(-0.535106 35.8146 0.007772) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.168 :angle-vector #f(-0.384474 -0.380723 -64.3392 138.529 -65.039 0.101623 0.0 -0.472455 0.266514 -64.2081 138.451 -65.1144 -0.575011 0.0 -0.083633 25.6545 -1.87425 3.48697 0.717065 -8.71102 2.9068 -27.1035 -6.88539 -2.11895 -13.1152 15.0 -0.200319 10.4246 1.89612 -28.1778 4.52867 1.26707 -14.1284 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987714 -0.007462 -0.156094) (0.006728 0.999964 -0.005227) (0.156127 0.004113 0.987728)) pos #f(-40.3117 -2.00405 323.233)) :zmp #f(-0.06351 -0.011537 0.0) :wrench-list ((#f(37.4386 0.429516 560.634) #f(37.437 0.429516 560.522) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.538722 35.604 0.007495) #f(-0.538722 35.6002 0.007495) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.172 :angle-vector #f(-0.395678 -0.366254 -64.0892 137.903 -64.8455 0.093984 0.0 -0.477346 0.25536 -63.9425 137.817 -64.9284 -0.556615 0.0 -0.025974 25.3804 -1.88581 3.28439 1.61779 -8.67304 2.98434 -26.8337 -6.94025 -2.07953 -13.0953 15.0 0.744977 10.4848 1.92265 -27.9351 4.56562 1.22167 -14.1408 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.988177 -0.007454 -0.153138) (0.006752 0.999964 -0.005097) (0.15317 0.004003 0.988192)) pos #f(-39.2776 -2.12291 327.798)) :zmp #f(-0.063528 -0.01169 0.0) :wrench-list ((#f(37.492 0.441047 556.511) #f(37.4905 0.441047 556.397) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.541842 35.352 0.007223) #f(-0.541842 35.3483 0.007223) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.176 :angle-vector #f(-0.401924 -0.354701 -63.8213 137.236 -64.638 0.087542 0.0 -0.477439 0.241287 -63.6577 137.141 -64.7289 -0.536994 0.0 0.031277 25.1007 -1.8875 3.07749 2.53546 -8.63098 3.05306 -26.5554 -6.95803 -2.02352 -13.0587 15.0 1.70728 10.5415 1.93668 -27.6836 4.57768 1.16406 -14.1337 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.988654 -0.007362 -0.150029) (0.006688 0.999965 -0.004997) (0.150061 0.003937 0.988669)) pos #f(-38.2309 -2.22817 332.513)) :zmp #f(-0.063539 -0.011845 0.0) :wrench-list ((#f(37.4995 0.45198 551.867) #f(37.4981 0.45198 551.752) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.544451 35.0631 0.006959) #f(-0.544451 35.0594 0.006959) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.18 :angle-vector #f(-0.40279 -0.346304 -63.5349 136.527 -64.4161 0.082332 0.0 -0.472318 0.22404 -63.3531 136.423 -64.5154 -0.516095 0.0 0.087873 24.816 -1.87857 2.86659 3.46852 -8.58472 3.11205 -26.2688 -6.93576 -1.94983 -13.0043 15.0 2.68493 10.5945 1.93722 -27.4233 4.56286 1.09349 -14.1059 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.989146 -0.007181 -0.146762) (0.006528 0.999967 -0.004928) (0.146793 0.003917 0.989159)) pos #f(-37.1748 -2.31824 337.379)) :zmp #f(-0.063544 -0.012003 0.0) :wrench-list ((#f(37.4615 0.462273 546.71) #f(37.4601 0.462273 546.596) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.546533 34.7381 0.006703) #f(-0.546533 34.7346 0.006703) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.184 :angle-vector #f(-0.397888 -0.341277 -63.2293 135.775 -64.1791 0.078383 0.0 -0.461602 0.203388 -63.028 135.66 -64.2876 -0.493871 0.0 0.143572 24.527 -1.8583 2.65199 4.41548 -8.53415 3.16046 -25.9742 -6.87076 -1.85743 -12.9311 15.0 3.67633 10.6434 1.92333 -27.1543 4.51935 1.00925 -14.0558 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.989651 -0.006904 -0.143331) (0.006267 0.999968 -0.004896) (0.143361 0.003947 0.989663)) pos #f(-36.112 -2.39165 342.392)) :zmp #f(-0.063543 -0.012164 0.0) :wrench-list ((#f(37.3783 0.47189 541.053) #f(37.377 0.47189 540.938) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.548076 34.378 0.006457) #f(-0.548076 34.3746 0.006457) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.188 :angle-vector #f(-0.386862 -0.339813 -62.9041 134.977 -63.9265 0.075719 0.0 -0.444941 0.179125 -62.6819 134.851 -64.0447 -0.470286 0.0 0.198139 24.2343 -1.82606 2.43401 5.37487 -8.47917 3.1975 -25.6718 -6.76057 -1.74543 -12.8379 15.0 4.67989 10.6879 1.89419 -26.8769 4.4455 0.910728 -13.9824 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990168 -0.006526 -0.139731) (0.005899 0.999971 -0.004902) (0.139759 0.004029 0.990177)) pos #f(-35.0452 -2.4471 347.549)) :zmp #f(-0.063536 -0.012327 0.0) :wrench-list ((#f(37.2507 0.480794 534.905) #f(37.2494 0.480794 534.79) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.549064 33.9837 0.006221) #f(-0.549064 33.9806 0.006221) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.192 :angle-vector #f(-0.36939 -0.342079 -62.5587 134.134 -63.658 0.074358 0.0 -0.422018 0.151071 -62.3142 133.996 -63.7865 -0.445309 0.0 0.251344 23.9384 -1.78127 2.21294 6.34526 -8.4197 3.22248 -25.362 -6.60301 -1.61302 -12.7241 15.0 5.69408 10.7279 1.84902 -26.5911 4.33986 0.797396 -13.8844 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990696 -0.006041 -0.135957) (0.005419 0.999973 -0.004949) (0.135983 0.004166 0.990702)) pos #f(-33.9768 -2.4834 352.848)) :zmp #f(-0.063524 -0.012493 0.0) :wrench-list ((#f(37.0791 0.488948 528.28) #f(37.0778 0.488948 528.165) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.549485 33.5564 0.005998) #f(-0.549485 33.5536 0.005998) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.196 :angle-vector #f(-0.345183 -0.348222 -62.1927 133.244 -63.3731 0.074312 0.0 -0.392549 0.119072 -61.9245 133.093 -63.5126 -0.418917 0.0 0.302964 23.6398 -1.72345 1.98909 7.32524 -8.35569 3.23474 -25.0449 -6.39614 -1.45953 -12.5888 15.0 6.71742 10.7629 1.78718 -26.2971 4.2011 0.66879 -13.7608 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991234 -0.005447 -0.132005) (0.004823 0.999976 -0.00504) (0.132029 0.004359 0.991236)) pos #f(-32.9093 -2.49951 358.286)) :zmp #f(-0.063507 -0.012661 0.0) :wrench-list ((#f(36.8643 0.496321 521.191) #f(36.8631 0.496321 521.076) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.549329 33.0972 0.005787) #f(-0.549329 33.0946 0.005787) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.2 :angle-vector #f(-0.313984 -0.358364 -61.8059 132.306 -63.0714 0.07559 0.0 -0.356282 0.082999 -61.5124 132.142 -63.2224 -0.391097 0.0 0.352782 23.3391 -1.65215 1.76276 8.31348 -8.28709 3.2337 -24.7209 -6.13829 -1.28435 -12.4314 15.0 7.74846 10.7929 1.70807 -25.995 4.02811 0.524527 -13.6109 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991779 -0.004737 -0.127873) (0.004109 0.999978 -0.005177) (0.127895 0.004609 0.991777)) pos #f(-31.8447 -2.49452 363.857)) :zmp #f(-0.063486 -0.012831 0.0) :wrench-list ((#f(36.607 0.502883 513.652) #f(36.6059 0.502883 513.537) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.548585 32.6071 0.005589) #f(-0.548585 32.6048 0.005589) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.204 :angle-vector #f(-0.27557 -0.372603 -61.3978 131.319 -62.7525 0.078193 0.0 -0.312998 0.042747 -61.0778 131.141 -62.9158 -0.36184 0.0 0.400584 23.0369 -1.56701 1.53425 9.30863 -8.21388 3.21886 -24.3903 -5.82803 -1.08702 -12.2513 15.0 8.78578 10.8177 1.61121 -25.6851 3.81992 0.364304 -13.4339 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99233 -0.003909 -0.123558) (0.003272 0.99998 -0.005361) (0.123576 0.004916 0.992323)) pos #f(-30.7851 -2.46767 369.56)) :zmp #f(-0.06346 -0.013003 0.0) :wrench-list ((#f(36.3081 0.508607 505.678) #f(36.307 0.508607 505.563) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.547245 32.0875 0.005405) #f(-0.547245 32.0855 0.005405) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.208 :angle-vector #f(-0.229751 -0.391016 -60.9682 130.284 -62.4162 0.082117 0.0 -0.26251 -0.001762 -60.6203 130.091 -62.5923 -0.331147 0.0 0.446165 22.7335 -1.46773 1.30386 10.3094 -8.13604 3.18978 -24.0532 -5.4642 -0.867173 -12.0481 15.0 9.82803 10.8372 1.49617 -25.3675 3.57576 0.187891 -13.2291 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.992883 -0.00296 -0.119058) (0.002311 0.999982 -0.005595) (0.119072 0.00528 0.992872)) pos #f(-29.7323 -2.41833 375.388)) :zmp #f(-0.063429 -0.013177 0.0) :wrench-list ((#f(35.9686 0.513473 497.285) #f(35.9675 0.513473 497.171) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.545304 31.5396 0.005236) #f(-0.545304 31.5378 0.005236) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.212 :angle-vector #f(-0.176368 -0.413656 -60.5171 129.198 -62.062 0.087354 0.0 -0.204665 -0.050582 -60.1397 128.99 -62.2517 -0.299028 0.0 0.489325 22.4295 -1.35409 1.07188 11.3146 -8.05359 3.14607 -23.71 -5.04589 -0.624533 -11.8215 15.0 10.8739 10.8512 1.36265 -25.0424 3.29499 -0.004862 -12.9962 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993436 -0.001888 -0.114373) (0.001224 0.999982 -0.005879) (0.114382 0.0057 0.993421)) pos #f(-28.6881 -2.34598 381.337)) :zmp #f(-0.063395 -0.013354 0.0) :wrench-list ((#f(35.5893 0.517459 488.49) #f(35.5882 0.517459 488.376) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.542757 30.9647 0.005081) #f(-0.542757 30.9633 0.005081) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.216 :angle-vector #f(-0.115298 -0.440552 -60.0443 128.064 -61.6899 0.093889 0.0 -0.139341 -0.10374 -59.6361 127.839 -61.8938 -0.265497 0.0 0.529869 22.1253 -1.22592 0.838615 12.323 -7.96653 3.08743 -23.361 -4.57243 -0.358946 -11.5712 15.0 11.922 10.8596 1.2104 -24.71 2.97718 -0.214026 -12.7347 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993986 -0.00069 -0.109501) (9.807815e-06 0.999981 -0.006213) (0.109504 0.006175 0.993967)) pos #f(-27.6539 -2.25027 387.402)) :zmp #f(-0.063356 -0.013533 0.0) :wrench-list ((#f(35.1714 0.520552 479.31) #f(35.1704 0.520552 479.197) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.539602 30.3642 0.00494) #f(-0.539602 30.3631 0.00494) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.22 :angle-vector #f(-0.046448 -0.471709 -59.5498 126.879 -61.2996 0.101702 0.0 -0.06645 -0.161239 -59.1094 126.637 -61.5184 -0.230578 0.0 0.567609 21.8213 -1.08313 0.604355 13.3333 -7.87493 3.01363 -23.0065 -4.04343 -0.070362 -11.2971 15.0 12.9712 10.8624 1.03926 -24.3705 2.62205 -0.439599 -12.4443 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99453 0.000635 -0.104445) (-0.001331 0.999977 -0.0066) (0.104438 0.006703 0.994509)) pos #f(-26.6311 -2.13095 393.578)) :zmp #f(-0.063314 -0.013713 0.0) :wrench-list ((#f(34.716 0.522739 469.764) #f(34.715 0.522739 469.652) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.535838 29.7396 0.004814) #f(-0.535838 29.7389 0.004814) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.224 :angle-vector #f(0.030239 -0.507112 -59.0336 125.644 -60.8909 0.110768 0.0 0.014065 -0.223057 -58.5598 125.384 -61.1252 -0.194304 0.0 0.602362 21.5179 -0.925695 0.369394 14.3445 -7.77882 2.92448 -22.6468 -3.45873 0.241165 -10.9993 15.0 14.0203 10.8595 0.849185 -24.0242 2.2295 -0.681497 -12.1251 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995065 0.002087 -0.099203) (-0.002799 0.999971 -0.007038) (0.099186 0.007281 0.995042)) pos #f(-25.6211 -1.98791 399.858)) :zmp #f(-0.063269 -0.013896 0.0) :wrench-list ((#f(34.2244 0.524011 459.872) #f(34.2235 0.524011 459.76) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.531465 29.0924 0.004703) #f(-0.531465 29.0919 0.004703) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.228 :angle-vector #f(0.11479 -0.54672 -58.4958 124.359 -60.4636 0.121057 0.0 0.102226 -0.289146 -57.9872 124.081 -60.7142 -0.156712 0.0 0.633952 21.2155 -0.753659 0.134024 15.3555 -7.67828 2.81988 -22.2822 -2.81845 0.575473 -10.6777 15.0 15.0681 10.851 0.64018 -23.6712 1.79959 -0.939562 -11.7769 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995586 0.003668 -0.093779) (-0.004393 0.999962 -0.007529) (0.093748 0.007907 0.995565)) pos #f(-24.625 -1.82116 406.237)) :zmp #f(-0.063221 -0.014081 0.0) :wrench-list ((#f(33.6979 0.524363 449.653) #f(33.697 0.524363 449.542) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.526488 28.4241 0.004605) #f(-0.526488 28.424 0.004605) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.232 :angle-vector #f(0.207197 -0.59047 -57.9366 123.024 -60.0177 0.132533 0.0 0.198025 -0.359432 -57.392 122.727 -60.2852 -0.117851 0.0 0.662207 20.9144 -0.567133 -0.101467 16.3652 -7.57341 2.6998 -21.913 -2.12295 0.932294 -10.3325 15.0 16.1135 10.837 0.412355 -23.3118 1.33257 -1.21356 -11.3999 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99609 0.005376 -0.088175) (-0.006111 0.999949 -0.00807) (0.088127 0.008578 0.996072)) pos #f(-23.6437 -1.63083 412.707)) :zmp #f(-0.06317 -0.014268 0.0) :wrench-list ((#f(33.1379 0.523793 439.128) #f(33.1369 0.523793 439.018) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.520911 27.7364 0.00452) #f(-0.520911 27.7365 0.00452) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.236 :angle-vector #f(0.307419 -0.638274 -57.3563 121.64 -59.5531 0.145153 0.0 0.301419 -0.433817 -56.7744 121.324 -59.8381 -0.077773 0.0 0.686963 20.615 -0.366295 -0.336787 17.3725 -7.4643 2.56426 -21.5395 -1.37285 1.31126 -9.96416 15.0 17.1553 10.8173 0.165902 -22.9462 0.828841 -1.50317 -10.9945 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996574 0.007211 -0.082394) (-0.007951 0.999931 -0.008663) (0.082326 0.009288 0.996562)) pos #f(-22.678 -1.41718 419.263)) :zmp #f(-0.063118 -0.014456 0.0) :wrench-list ((#f(32.5457 0.522303 428.319) #f(32.5448 0.522303 428.211) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.51474 27.0309 0.004449) #f(-0.51474 27.0312 0.004449) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.24 :angle-vector #f(0.415384 -0.690024 -56.755 120.207 -59.0697 0.158872 0.0 0.412335 -0.512177 -56.1348 119.871 -59.3729 -0.036543 0.0 0.708061 20.3177 -0.151392 -0.571652 18.3766 -7.35109 2.41336 -21.162 -0.569019 1.71187 -9.57295 15.0 18.1926 10.7922 -0.098901 -22.5748 0.288988 -1.808 -10.5609 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997032 0.009172 -0.07644) (-0.009911 0.999908 -0.009305) (0.076347 0.010035 0.997031)) pos #f(-21.7288 -1.18058 425.898)) :zmp #f(-0.063063 -0.014647 0.0) :wrench-list ((#f(31.923 0.519899 417.249) #f(31.9221 0.519899 417.142) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.507984 26.3093 0.004389) #f(-0.507984 26.3099 0.004389) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.244 :angle-vector #f(0.530985 -0.745585 -56.1332 118.726 -58.5675 0.173635 0.0 0.530665 -0.594362 -55.4736 118.37 -58.8897 0.005772 0.0 0.725346 20.0226 0.07726 -0.805773 19.3763 -7.23391 2.24726 -20.781 0.287413 2.13356 -9.15941 15.0 19.2244 10.7618 -0.38169 -22.1977 -0.286239 -2.1276 -10.0996 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997461 0.011256 -0.070317) (-0.011988 0.999878 -0.009995) (0.070196 0.010813 0.997475)) pos #f(-20.7966 -0.921531 432.603)) :zmp #f(-0.063007 -0.01484 0.0) :wrench-list ((#f(31.2713 0.516588 405.941) #f(31.2704 0.516588 405.836) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.500652 25.5734 0.00434) #f(-0.500652 25.5742 0.00434) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.248 :angle-vector #f(0.654083 -0.804803 -55.4913 117.198 -58.0466 0.189387 0.0 0.65627 -0.680198 -54.7912 116.821 -58.3884 0.049092 0.0 0.738672 19.73 0.31928 -1.03887 20.3708 -7.11291 2.0662 -20.3966 1.19506 2.57563 -8.72415 15.0 20.2497 10.7261 -0.682016 -21.8152 -0.895917 -2.4614 -9.6114 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997857 0.013461 -0.064031) (-0.014177 0.999842 -0.010733) (0.063877 0.011617 0.99789)) pos #f(-19.8819 -0.640628 439.372)) :zmp #f(-0.06295 -0.015034 0.0) :wrench-list ((#f(30.5924 0.512383 394.42) #f(30.5915 0.512383 394.317) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.492756 24.8251 0.004301) #f(-0.492756 24.8261 0.004301) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.252 :angle-vector #f(0.784506 -0.867496 -54.8298 115.623 -57.5071 0.206063 0.0 0.788977 -0.769485 -54.0884 115.225 -57.869 0.093333 0.0 0.747898 19.4403 0.574216 -1.27065 21.3593 -6.98828 1.87047 -20.0094 2.15229 3.03728 -8.26787 15.0 21.2676 10.6854 -0.999343 -21.4276 -1.53895 -2.80879 -9.09693 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998216 0.015784 -0.057589) (-0.016474 0.999798 -0.011514) (0.057395 0.012443 0.998274)) pos #f(-18.985 -0.338592 446.198)) :zmp #f(-0.062893 -0.01523 0.0) :wrench-list ((#f(29.888 0.507299 382.711) #f(29.8871 0.507299 382.61) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.484311 24.0662 0.00427) #f(-0.484311 24.0674 0.00427) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.256 :angle-vector #f(0.922048 -0.933464 -54.1493 114.002 -56.949 0.223595 0.0 0.928582 -0.861997 -53.3657 113.583 -57.3318 0.138402 0.0 0.752886 19.1536 0.84155 -1.50084 22.3408 -6.86019 1.66045 -19.6195 3.1572 3.51759 -7.7914 15.0 22.2772 10.6399 -1.33305 -21.0353 -2.21408 -3.16906 -8.5571 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998533 0.018222 -0.050996) (-0.018874 0.999746 -0.012339) (0.050758 0.013283 0.998623)) pos #f(-18.1063 -0.016252 453.072)) :zmp #f(-0.062837 -0.015428 0.0) :wrench-list ((#f(29.1599 0.501356 370.84) #f(29.159 0.501356 370.74) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.475331 23.2986 0.004246) #f(-0.475331 23.3 0.004246) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.26 :angle-vector #f(1.06647 -1.00248 -53.4502 112.338 -56.3725 0.241909 0.0 1.07485 -0.957485 -52.6238 111.898 -56.7767 0.184198 0.0 0.753509 18.8702 1.12069 -1.72916 23.3146 -6.72887 1.43656 -19.2273 4.20764 4.01557 -7.29566 15.0 23.2777 10.5898 -1.68243 -20.6385 -2.91986 -3.54144 -7.99292 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998804 0.020769 -0.04426) (-0.021373 0.999684 -0.013203) (0.043972 0.014133 0.998933)) pos #f(-17.2458 0.325451 459.987)) :zmp #f(-0.062782 -0.015627 0.0) :wrench-list ((#f(28.41 0.494574 358.832) #f(28.4091 0.494574 358.734) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.465834 22.5244 0.004228) #f(-0.465834 22.5258 0.004228) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.264 :angle-vector #f(1.21751 -1.07429 -52.7334 110.63 -55.7777 0.260924 0.0 1.2275 -1.05567 -51.8635 110.169 -56.204 0.230613 0.0 0.74964 18.5902 1.41099 -1.95533 24.2799 -6.59452 1.1993 -18.8333 5.30121 4.53008 -6.78168 15.0 24.2683 10.5354 -2.04668 -20.2375 -3.65469 -3.92507 -7.40552 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999026 0.023422 -0.03739) (-0.023964 0.999613 -0.014103) (0.037045 0.014985 0.999201)) pos #f(-16.4037 0.685468 466.934)) :zmp #f(-0.062729 -0.015827 0.0) :wrench-list ((#f(27.6402 0.486979 346.713) #f(27.6393 0.486979 346.618) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.455839 21.7451 0.004215) #f(-0.455839 21.7467 0.004215) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.268 :angle-vector #f(1.37485 -1.14863 -51.9996 108.881 -55.165 0.280557 0.0 1.38624 -1.15626 -51.0856 108.398 -55.6138 0.27753 0.0 0.741164 18.3137 1.71173 -2.17907 25.2359 -6.45739 0.949254 -18.4378 6.43526 5.0599 -6.25059 15.0 25.2482 10.4769 -2.42494 -19.8326 -4.41679 -4.31903 -6.79614 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999195 0.026174 -0.030394) (-0.02664 0.999532 -0.015037) (0.029986 0.015835 0.999425)) pos #f(-15.5797 1.06264 473.906)) :zmp #f(-0.062679 -0.016028 0.0) :wrench-list ((#f(26.8522 0.478596 334.509) #f(26.8513 0.478596 334.415) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.445366 20.9628 0.004204) #f(-0.445366 20.9644 0.004204) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.272 :angle-vector #f(1.53815 -1.2252 -51.2496 107.091 -54.5344 0.300717 0.0 1.55074 -1.25891 -50.2912 106.588 -55.0065 0.324826 0.0 0.727966 18.041 2.0221 -2.40011 26.182 -6.31773 0.687047 -18.0411 7.60685 5.60371 -5.70364 15.0 26.2168 10.4146 -2.81623 -19.4242 -5.20421 -4.72229 -6.16618 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999308 0.02902 -0.023283) (-0.029396 0.99944 -0.016001) (0.022806 0.016674 0.999601)) pos #f(-14.7737 1.45571 480.894)) :zmp #f(-0.062632 -0.016231 0.0) :wrench-list ((#f(26.0479 0.469456 322.244) #f(26.047 0.469456 322.153) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.434438 20.179 0.004196) #f(-0.434438 20.1806 0.004196) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.276 :angle-vector #f(1.70706 -1.30368 -50.4842 105.264 -53.8863 0.321308 0.0 1.72061 -1.36329 -49.4811 104.74 -54.3821 0.37237 0.0 0.709941 17.7722 2.34126 -2.61817 27.1174 -6.17583 0.413385 -17.6435 8.81284 6.16006 -5.14216 15.0 27.1733 10.349 -3.2195 -19.0127 -6.01483 -5.13377 -5.51712 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99936 0.031952 -0.016067) (-0.032225 0.999336 -0.01699) (0.015513 0.017497 0.999727)) pos #f(-13.9855 1.86328 487.89)) :zmp #f(-0.062589 -0.016434 0.0) :wrench-list ((#f(25.2292 0.45959 309.944) #f(25.2283 0.45959 309.855) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.423079 19.3955 0.004188) #f(-0.423079 19.3971 0.004188) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.28 :angle-vector #f(1.88117 -1.38374 -49.7044 103.4 -53.2211 0.342228 0.0 1.89548 -1.469 -48.6565 102.856 -53.7411 0.420022 0.0 0.686989 17.5073 2.66827 -2.83297 28.0417 -6.03196 0.129039 -17.2456 10.0498 6.7274 -4.56759 15.0 28.1172 10.2803 -3.63362 -18.5982 -6.84636 -5.55231 -4.8506 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99935 0.034965 -0.008756) (-0.035118 0.999221 -0.018001) (0.00812 0.018296 0.9998)) pos #f(-13.2145 2.28388 494.886)) :zmp #f(-0.062551 -0.016638 0.0) :wrench-list ((#f(24.398 0.449034 297.633) #f(24.3971 0.449034 297.547) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.411316 18.6137 0.004179) #f(-0.411316 18.6153 0.004179) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.284 :angle-vector #f(2.06003 -1.46499 -48.9112 101.502 -52.539 0.363371 0.0 2.07489 -1.57566 -47.8185 100.938 -53.0838 0.467636 0.0 0.659014 17.2464 3.00215 -3.04425 28.954 -5.88643 -0.165153 -16.8476 11.314 7.30409 -3.98151 15.0 29.0478 10.2091 -4.05737 -18.1813 -7.69634 -5.97666 -4.16837 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999275 0.038049 -0.001363) (-0.038068 0.999094 -0.019028) (0.000638 0.019066 0.999818)) pos #f(-12.4603 2.71591 501.875)) :zmp #f(-0.062518 -0.016843 0.0) :wrench-list ((#f(23.556 0.437824 285.336) #f(23.5552 0.437824 285.252) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.399175 17.8354 0.004169) #f(-0.399175 17.8369 0.004169) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.288 :angle-vector #f(2.24318 -1.54707 -48.1057 99.5721 -51.8404 0.384626 0.0 2.25838 -1.68283 -46.9682 98.9889 -52.4105 0.515056 0.0 0.625928 16.9897 3.34183 -3.25174 29.8541 -5.73957 -0.468285 -16.45 12.6016 7.88837 -3.38555 15.0 29.9646 10.1356 -4.48942 -17.7623 -8.56213 -6.4055 -3.4723 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999132 0.041197 0.006099) (-0.041067 0.998955 -0.020068) (-0.006919 0.0198 0.99978)) pos #f(-11.7222 3.15765 508.846)) :zmp #f(-0.062492 -0.017048 0.0) :wrench-list ((#f(22.7053 0.426002 273.077) #f(22.7044 0.426002 272.995) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.386687 17.0619 0.004156) #f(-0.386687 17.0633 0.004156) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.292 :angle-vector #f(2.43013 -1.62954 -47.2889 97.612 -51.1258 0.405873 0.0 2.44547 -1.79006 -46.1071 97.0103 -51.7215 0.562121 0.0 0.587648 16.737 3.68617 -3.45516 30.7412 -5.59172 -0.779383 -16.0532 13.9083 8.47837 -2.78148 15.0 30.8671 10.0604 -4.9284 -17.3416 -9.44093 -6.83744 -2.76439 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998921 0.044399 0.013617) (-0.044106 0.998804 -0.021114) (-0.014538 0.02049 0.999684)) pos #f(-10.9995 3.60727 515.794)) :zmp #f(-0.062472 -0.017253 0.0) :wrench-list ((#f(21.8475 0.413609 260.88) #f(21.8466 0.413609 260.801) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.373882 16.2947 0.004139) #f(-0.373882 16.296 0.004139) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.296 :angle-vector #f(2.62033 -1.71199 -46.4622 95.6242 -50.3957 0.426991 0.0 2.6356 -1.89686 -45.2365 95.0051 -51.0175 0.608661 0.0 0.544097 16.4885 4.03399 -3.65425 31.6149 -5.44323 -1.09741 -15.6574 15.2297 9.07212 -2.17118 15.0 31.7548 9.98402 -5.37282 -16.9194 -10.3298 -7.27101 -2.04677 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99864 0.047647 0.021178) (-0.047177 0.998641 -0.022161) (-0.022205 0.021131 0.99953)) pos #f(-10.2913 4.06282 522.709)) :zmp #f(-0.06246 -0.017458 0.0) :wrench-list ((#f(20.9846 0.400691 248.768) #f(20.9837 0.400691 248.692) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.360794 15.5351 0.004118) #f(-0.360794 15.5363 0.004118) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.3 :angle-vector #f(2.81321 -1.79395 -45.6267 93.6115 -49.6504 0.44785 0.0 2.82823 -2.00275 -44.3577 92.9758 -50.2987 0.654498 0.0 0.495204 16.2441 4.38401 -3.84875 32.4748 -5.29447 -1.42125 -15.2633 16.5612 9.66754 -1.5566 15.0 32.6273 9.90687 -5.82111 -16.4964 -11.2255 -7.70464 -1.32168 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998288 0.05093 0.028766) (-0.05027 0.998466 -0.023203) (-0.029904 0.021717 0.999317)) pos #f(-9.59655 4.52223 529.584)) :zmp #f(-0.062455 -0.017664 0.0) :wrench-list ((#f(20.1185 0.387296 236.766) #f(20.1176 0.387296 236.693) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.347458 14.7845 0.004091) #f(-0.347458 14.7856 0.004091) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.304 :angle-vector #f(3.00818 -1.87494 -44.7838 91.5765 -48.8906 0.468317 0.0 3.02276 -2.10718 -43.4722 90.9254 -49.5657 0.699447 0.0 0.440903 16.0038 4.7349 -4.03838 33.3205 -5.14583 -1.74973 -14.871 17.8977 10.2625 -0.93984 15.0 33.4843 9.82955 -6.27162 -16.0727 -12.1248 -8.13671 -0.591499 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997866 0.054237 0.036367) (-0.053376 0.99828 -0.024234) (-0.037619 0.022241 0.999045)) pos #f(-8.91419 4.98329 536.411)) :zmp #f(-0.062459 -0.017869 0.0) :wrench-list ((#f(19.251 0.373474 224.897) #f(19.2501 0.373474 224.827) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.33391 14.0442 0.004058) #f(-0.33391 14.0451 0.004058) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.308 :angle-vector #f(3.2046 -1.95446 -43.9349 89.5219 -48.1168 0.488254 0.0 3.21855 -2.2096 -42.5817 88.8568 -48.819 0.743315 0.0 0.381135 15.7676 5.08525 -4.22288 34.1515 -4.99773 -2.08162 -14.4812 19.234 10.8546 -0.323064 15.0 34.3253 9.75262 -6.72262 -15.649 -13.0241 -8.56552 0.14128 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997374 0.057558 0.043963) (-0.056486 0.998084 -0.025248) (-0.045332 0.022698 0.998714)) pos #f(-8.24292 5.44366 543.182)) :zmp #f(-0.062471 -0.018074 0.0) :wrench-list ((#f(18.384 0.35928 213.183) #f(18.3831 0.35928 213.116) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.320189 13.3152 0.004017) #f(-0.320189 13.3159 0.004017) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.312 :angle-vector #f(3.40181 -2.03197 -43.0814 87.4509 -47.3295 0.507514 0.0 3.41494 -2.30943 -41.6879 86.7731 -48.0593 0.785901 0.0 0.315846 15.5353 5.4336 -4.402 34.9677 -4.85058 -2.41559 -14.0941 20.5647 11.4415 0.291436 15.0 35.1501 9.67668 -7.17227 -15.2255 -13.9199 -8.98928 0.874035 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996814 0.060882 0.051539) (-0.05959 0.997878 -0.026238) (-0.053027 0.023083 0.998326)) pos #f(-7.58133 5.90089 549.891)) :zmp #f(-0.06249 -0.018279 0.0) :wrench-list ((#f(17.5194 0.344769 201.649) #f(17.5185 0.344769 201.585) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.306334 12.5989 0.003968) #f(-0.306334 12.5994 0.003968) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.316 :angle-vector #f(3.5991 -2.10693 -42.2248 85.3663 -46.5296 0.525948 0.0 3.61125 -2.40607 -40.7922 84.6775 -47.287 0.826997 0.0 0.244989 15.3069 5.77841 -4.57547 35.7686 -4.70483 -2.75027 -13.7103 21.8841 12.0207 0.901269 15.0 35.9585 9.60237 -7.61867 -14.8027 -14.8083 -9.40613 1.60402 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996187 0.064195 0.059077) (-0.062678 0.997663 -0.027196) (-0.060684 0.02339 0.997883)) pos #f(-6.92786 6.35235 556.531)) :zmp #f(-0.062518 -0.018482 0.0) :wrench-list ((#f(16.659 0.329998 190.316) #f(16.6582 0.329998 190.254) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.292387 11.8962 0.00391) #f(-0.292387 11.8965 0.00391) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.32 :angle-vector #f(3.79574 -2.17877 -41.3667 83.2715 -45.7175 0.5434 0.0 3.80674 -2.49889 -39.8967 82.5734 -46.5028 0.866387 0.0 0.168521 15.0823 6.11807 -4.74304 36.554 -4.56092 -3.08422 -13.33 23.1862 12.5896 1.50394 15.0 36.7501 9.53034 -8.05982 -14.3811 -15.6853 -9.81412 2.32837 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995498 0.067487 0.066558) (-0.065739 0.997441 -0.028117) (-0.068285 0.023615 0.997386)) pos #f(-6.28081 6.79529 563.093)) :zmp #f(-0.062554 -0.018685 0.0) :wrench-list ((#f(15.8048 0.315029 179.206) #f(15.8039 0.315029 179.148) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.278391 11.2081 0.003843) #f(-0.278391 11.2082 0.003843) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.324 :angle-vector #f(3.99097 -2.24688 -40.5088 81.1697 -44.894 0.559709 0.0 4.00066 -2.58723 -39.0031 80.4644 -45.7073 0.903846 0.0 0.086407 14.8613 6.4509 -4.90444 37.3237 -4.41933 -3.41593 -12.9539 24.4647 13.1455 2.09685 15.0 37.5249 9.46128 -8.49365 -13.961 -16.5466 -10.2113 3.04408 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.994748 0.070744 0.073965) (-0.068764 0.997212 -0.028991) (-0.07581 0.023753 0.996839)) pos #f(-5.6383 7.22679 569.572)) :zmp #f(-0.062596 -0.018888 0.0) :wrench-list ((#f(14.9585 0.299919 168.341) #f(14.9577 0.299919 168.286) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.264389 10.5357 0.003766) #f(-0.264389 10.5357 0.003766) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.328 :angle-vector #f(4.18399 -2.31064 -39.6528 79.0646 -44.0598 0.574709 0.0 4.19221 -2.67041 -38.1134 78.3541 -44.9014 0.939144 0.0 -0.001383 14.6438 6.77517 -5.05941 38.0774 -4.28056 -3.7438 -12.5823 25.7131 13.6856 2.67729 15.0 38.2827 9.39592 -8.91797 -13.543 -17.3881 -10.5954 3.74805 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993944 0.073953 0.081278) (-0.071741 0.996978 -0.029812) (-0.083237 0.0238 0.996246)) pos #f(-4.99828 7.64378 575.961)) :zmp #f(-0.062644 -0.019088 0.0) :wrench-list ((#f(14.1219 0.284727 157.739) #f(14.1211 0.284727 157.687) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.25042 9.87992 0.003678) #f(-0.25042 9.87969 0.003678) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.332 :angle-vector #f(4.37397 -2.36942 -38.8005 76.9597 -43.2158 0.588228 0.0 4.38057 -2.74772 -37.2296 76.2463 -44.0856 0.972041 0.0 -0.094874 14.4296 7.08907 -5.20772 38.8151 -4.1451 -4.06621 -12.2156 26.9248 14.2068 3.24245 15.0 39.0234 9.33498 -9.33055 -13.1276 -18.2051 -10.9645 4.43702 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99309 0.0771 0.088477) (-0.07466 0.99674 -0.030571) (-0.090545 0.023754 0.995609)) pos #f(-4.35853 8.04305 582.255)) :zmp #f(-0.062698 -0.019287 0.0) :wrench-list ((#f(13.297 0.269507 147.42) #f(13.2962 0.269507 147.37) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.236527 9.24157 0.00358) #f(-0.236527 9.24119 0.00358) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.336 :angle-vector #f(4.56004 -2.42254 -37.9536 74.8587 -42.3627 0.600089 0.0 4.56488 -2.81843 -36.3536 74.145 -43.2607 1.00229 0.0 -0.194085 14.2185 7.3907 -5.34909 39.5367 -4.01348 -4.38142 -11.8544 28.0927 14.7063 3.78941 15.0 39.747 9.27925 -9.72904 -12.7152 -18.993 -11.3161 5.10763 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.992192 0.080172 0.095541) (-0.07751 0.996501 -0.03126) (-0.097713 0.023611 0.994935)) pos #f(-3.71666 8.4212 588.446)) :zmp #f(-0.062757 -0.019485 0.0) :wrench-list ((#f(12.4852 0.254316 137.398) #f(12.4845 0.254316 137.352) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.222748 8.62151 0.003472) #f(-0.222748 8.62098 0.003472) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.34 :angle-vector #f(4.74132 -2.46934 -37.1141 72.7656 -41.5013 0.610112 0.0 4.74427 -2.88181 -35.4877 72.0541 -42.4277 1.02964 0.0 -0.299023 14.0103 7.6782 -5.48329 40.2419 -3.88623 -4.68772 -11.499 29.2098 15.1809 4.31525 15.0 40.4533 9.22951 -10.1111 -12.3062 -19.747 -11.6481 5.75649 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991256 0.083155 0.10245) (-0.080281 0.996263 -0.031872) (-0.104717 0.023368 0.994227)) pos #f(-3.07015 8.77477 594.53)) :zmp #f(-0.06282 -0.019679 0.0) :wrench-list ((#f(11.6885 0.239209 127.691) #f(11.6878 0.239209 127.647) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.209124 8.02051 0.003354) #f(-0.209124 8.01985 0.003354) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.344 :angle-vector #f(4.91698 -2.50916 -36.2838 70.684 -40.6325 0.618127 0.0 4.91792 -2.93714 -34.6339 69.9776 -41.5871 1.05387 0.0 -0.409681 13.8047 7.94973 -5.61008 40.9309 -3.76385 -4.98343 -11.1499 30.2693 15.6277 4.81714 15.0 41.1425 9.18649 -10.4744 -11.9012 -20.4627 -11.9584 6.38033 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990291 0.086035 0.109185) (-0.082961 0.996026 -0.032397) (-0.111538 0.023024 0.993493)) pos #f(-2.41652 9.1004 600.501)) :zmp #f(-0.062886 -0.019871 0.0) :wrench-list ((#f(10.9085 0.224236 118.312) #f(10.9078 0.224236 118.271) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.195693 7.4393 0.003226) #f(-0.195693 7.43852 0.003226) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.348 :angle-vector #f(5.08622 -2.5414 -35.4644 68.6176 -39.7573 0.623968 0.0 5.08503 -2.98378 -33.7941 67.9193 -40.7399 1.07473 0.0 -0.526035 13.6016 8.20362 -5.72927 41.6034 -3.64683 -5.26699 -10.8075 31.2649 16.0439 5.29244 15.0 41.8145 9.1509 -10.8169 -11.5006 -21.1357 -12.2448 6.97607 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.989304 0.0888 0.115726) (-0.085542 0.995794 -0.032829) (-0.118154 0.022578 0.992739)) pos #f(-1.75338 9.39489 606.355)) :zmp #f(-0.062955 -0.020059 0.0) :wrench-list ((#f(10.1467 0.209452 109.273) #f(10.1461 0.209452 109.235) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.182492 6.87855 0.003088) #f(-0.182492 6.87768 0.003088) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.352 :angle-vector #f(5.24828 -2.5655 -34.6577 66.5699 -38.8763 0.627481 0.0 5.24485 -3.02109 -32.9702 65.8829 -39.8869 1.09203 0.0 -0.648039 13.4008 8.43826 -5.84066 42.2594 -3.53562 -5.53693 -10.4723 32.1906 16.4271 5.73867 15.0 42.4692 9.12336 -11.1365 -11.1049 -21.7621 -12.5055 7.54082 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.988302 0.091439 0.122056) (-0.088016 0.995567 -0.033161) (-0.124547 0.02203 0.991969)) pos #f(-1.07838 9.65519 612.088)) :zmp #f(-0.063025 -0.020242 0.0) :wrench-list ((#f(9.40493 0.194905 100.587) #f(9.40428 0.194905 100.552) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.169561 6.33889 0.002943) #f(-0.169561 6.33794 0.002943) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.356 :angle-vector #f(5.40246 -2.5809 -33.8651 64.5444 -37.9906 0.628517 0.0 5.39668 -3.04849 -32.1639 63.8719 -39.029 1.10557 0.0 -0.775633 13.2021 8.65219 -5.9441 42.8989 -3.43067 -5.79186 -10.1445 33.0409 16.7748 6.1535 15.0 43.1067 9.10449 -11.4315 -10.7146 -22.3382 -12.7387 8.07187 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987294 0.093941 0.128159) (-0.090373 0.995348 -0.033387) (-0.130699 0.02138 0.991192)) pos #f(-0.389267 9.8784 617.696)) :zmp #f(-0.063095 -0.020421 0.0) :wrench-list ((#f(8.68465 0.180647 92.2641) #f(8.68404 0.180647 92.2312) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.156934 5.82088 0.002789) #f(-0.156934 5.81989 0.002789) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.36 :angle-vector #f(5.54808 -2.58712 -33.0884 62.5442 -37.1009 0.626938 0.0 5.53986 -3.06545 -31.3771 61.8896 -38.1669 1.11517 0.0 -0.908736 13.0054 8.84403 -6.03943 43.5217 -3.33236 -6.03052 -9.82456 33.8107 17.0848 6.53477 15.0 43.727 9.09483 -11.7 -10.3299 -22.8605 -12.9428 8.56667 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.986289 0.096296 0.13402) (-0.092608 0.995139 -0.033501) (-0.136594 0.02063 0.990412)) pos #f(0.316159 10.0618 623.177)) :zmp #f(-0.063164 -0.020593 0.0) :wrench-list ((#f(7.98745 0.166724 84.3122) #f(7.98687 0.166724 84.2819) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.144647 5.32506 0.00263) #f(-0.144647 5.32404 0.00263) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.364 :angle-vector #f(5.68452 -2.58369 -32.3289 60.5726 -36.2083 0.622612 0.0 5.67378 -3.07148 -30.6113 59.9395 -37.3015 1.12066 0.0 -1.04725 12.8104 9.01252 -6.12655 44.1279 -3.2411 -6.2517 -9.51283 34.4951 17.355 6.8805 15.0 44.33 9.09488 -11.9404 -9.95145 -23.3259 -13.1164 9.02287 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.985294 0.098496 0.139623) (-0.094713 0.994941 -0.033498) (-0.142216 0.019781 0.989638)) pos #f(1.04002 10.2028 628.527)) :zmp #f(-0.063231 -0.020758 0.0) :wrench-list ((#f(7.31483 0.153185 76.7392) #f(7.3143 0.153185 76.7114) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.132738 4.8519 0.002465) #f(-0.132738 4.85086 0.002465) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.368 :angle-vector #f(5.81119 -2.57019 -31.5881 58.6327 -35.3136 0.615417 0.0 5.79786 -3.06611 -29.8681 58.0247 -36.4337 1.12188 0.0 -1.19106 12.617 9.15651 -6.20534 44.7174 -3.15724 -6.45431 -9.20962 35.09 17.5837 7.18886 15.0 44.9159 9.10509 -12.1513 -9.57955 -23.7314 -13.258 9.43831 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984317 0.100532 0.144958) (-0.096683 0.994756 -0.033373) (-0.147552 0.018834 0.988875)) pos #f(1.78434 10.2991 633.743)) :zmp #f(-0.063293 -0.020915 0.0) :wrench-list ((#f(6.66831 0.140076 69.5514) #f(6.66782 0.140076 69.526) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.121239 4.40181 0.002297) #f(-0.121239 4.40078 0.002297) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.372 :angle-vector #f(5.92757 -2.54622 -30.8673 56.7274 -34.4177 0.605239 0.0 5.91157 -3.04893 -29.1489 56.1481 -35.5645 1.1187 0.0 -1.34003 12.4251 9.27496 -6.27574 45.2901 -3.08111 -6.63735 -8.91524 35.5912 17.769 7.45817 15.0 45.4844 9.12587 -12.3313 -9.21462 -24.0744 -13.3665 9.81099 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983368 0.102397 0.15001) (-0.098513 0.994584 -0.033122) (-0.152589 0.017793 0.98813)) pos #f(2.55109 10.3484 638.824)) :zmp #f(-0.063349 -0.021064 0.0) :wrench-list ((#f(6.04934 0.127441 62.7536) #f(6.04889 0.127441 62.7306) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.110185 3.97518 0.002127) #f(-0.110185 3.97417 0.002127) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.376 :angle-vector #f(6.03316 -2.51143 -30.1679 54.8596 -33.5217 0.591972 0.0 6.01443 -3.01957 -28.4552 54.3128 -34.6946 1.111 0.0 -1.49401 12.2345 9.36694 -6.33768 45.846 -3.01302 -6.79991 -8.62998 35.9953 17.9095 7.68695 15.0 46.0358 9.15757 -12.4792 -8.85704 -24.3524 -13.4407 10.1391 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982452 0.104085 0.15477) (-0.100196 0.994429 -0.032741) (-0.157315 0.016659 0.987408)) pos #f(3.34213 10.3487 643.767)) :zmp #f(-0.063399 -0.021203 0.0) :wrench-list ((#f(5.45934 0.115325 56.3494) #f(5.45893 0.115325 56.3286) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.099609 3.57232 0.001956) #f(-0.099609 3.57135 0.001956) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.38 :angle-vector #f(6.1275 -2.4655 -29.4911 53.0321 -32.6263 0.575517 0.0 6.10599 -2.97769 -27.7883 52.5215 -33.825 1.09865 0.0 -1.65283 12.0452 9.43163 -6.39112 46.385 -2.95325 -6.94118 -8.3541 36.2992 18.0039 7.87384 15.0 46.5699 9.20051 -12.5939 -8.5072 -24.5634 -13.4797 10.421 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981579 0.10559 0.159227) (-0.101729 0.99429 -0.032227) (-0.161721 0.015435 0.986716)) pos #f(4.15924 10.2982 648.571)) :zmp #f(-0.06344 -0.021332 0.0) :wrench-list ((#f(4.89969 0.103769 50.341) #f(4.89933 0.103769 50.3223) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.089543 3.19349 0.001787) #f(-0.089543 3.19257 0.001787) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.384 :angle-vector #f(6.2102 -2.40815 -28.8379 51.2474 -31.7326 0.555785 0.0 6.18585 -2.92302 -27.1493 50.7769 -32.9566 1.08156 0.0 -1.8163 11.8569 9.46831 -6.43606 46.9072 -2.90207 -7.06044 -8.08787 36.5 18.051 8.01767 15.0 47.0868 9.25495 -12.6745 -8.16546 -24.7056 -13.4827 10.6552 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980755 0.106906 0.163373) (-0.103108 0.994169 -0.031577) (-0.165796 0.014124 0.986059)) pos #f(5.00408 10.1953 653.232)) :zmp #f(-0.063471 -0.021451 0.0) :wrench-list ((#f(4.37158 0.092812 44.7289) #f(4.37127 0.092812 44.7122) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.080017 2.83887 0.001622) #f(-0.080017 2.83801 0.001622) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.388 :angle-vector #f(6.28087 -2.33914 -28.2095 49.508 -30.8415 0.532695 0.0 6.25365 -2.85531 -26.5394 49.0816 -32.0903 1.05965 0.0 -1.98421 11.6697 9.47639 -6.4725 47.4124 -2.8597 -7.15707 -7.83151 36.5954 18.0498 8.11744 15.0 47.5865 9.32109 -12.72 -7.83217 -24.7773 -13.4489 10.8406 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979987 0.108029 0.167199) (-0.104328 0.994066 -0.030789) (-0.169533 0.012729 0.985442)) pos #f(5.87822 10.0386 657.749)) :zmp #f(-0.063489 -0.02156 0.0) :wrench-list ((#f(3.87595 0.082484 39.5119) #f(3.87569 0.082484 39.497) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.071052 2.5085 0.001462) #f(-0.071052 2.5077 0.001462) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.392 :angle-vector #f(6.33922 -2.25825 -27.607 47.8164 -29.9541 0.506173 0.0 6.30909 -2.77433 -25.9598 47.4378 -31.2271 1.03284 0.0 -2.15634 11.4833 9.45536 -6.50046 47.9007 -2.82636 -7.23054 -7.58524 36.5835 17.9995 8.1723 15.0 48.0689 9.3991 -12.7299 -7.50768 -24.7772 -13.378 10.9759 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97928 0.108956 0.1707) (-0.105386 0.993983 -0.02986) (-0.172926 0.011252 0.984871)) pos #f(6.78308 9.8269 662.121)) :zmp #f(-0.063492 -0.021659 0.0) :wrench-list ((#f(3.41349 0.072812 34.6868) #f(3.41328 0.072812 34.6737) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.062669 2.20229 0.001309) #f(-0.062669 2.20156 0.001309) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.396 :angle-vector #f(6.38495 -2.16531 -27.0312 46.1749 -29.0712 0.476155 0.0 6.35189 -2.67994 -25.4113 45.848 -30.368 1.00108 0.0 -2.33245 11.2977 9.40485 -6.52 48.3721 -2.80224 -7.28041 -7.34927 36.4628 17.8994 8.18156 15.0 48.5343 9.4891 -12.7035 -7.19232 -24.7042 -13.2693 11.0603 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978642 0.109682 0.173868) (-0.10628 0.993919 -0.028789) (-0.175969 0.009695 0.984348)) pos #f(7.72 9.55924 666.345)) :zmp #f(-0.063477 -0.021747 0.0) :wrench-list ((#f(2.98462 0.063814 30.2488) #f(2.98446 0.063814 30.2373) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.05488 1.92006 0.001163) #f(-0.05488 1.9194 0.001163) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.4 :angle-vector #f(6.41783 -2.06019 -26.4831 44.5856 -28.194 0.442583 0.0 6.38183 -2.57201 -24.895 44.3143 -29.5138 0.964333 0.0 -2.51227 11.1129 9.32459 -6.53119 48.8264 -2.78749 -7.30634 -7.12377 36.232 17.7492 8.1447 15.0 48.9824 9.59116 -12.6405 -6.88641 -24.5577 -13.1226 11.0931 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978075 0.110207 0.1767) (-0.107006 0.993876 -0.027574) (-0.178657 0.008062 0.983878)) pos #f(8.69015 9.23488 670.42)) :zmp #f(-0.063437 -0.021825 0.0) :wrench-list ((#f(2.5895 0.055502 26.1912) #f(2.5894 0.055502 26.1812) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.047692 1.66147 0.001027) #f(-0.047692 1.66089 0.001027) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.404 :angle-vector #f(6.43768 -1.94278 -25.9634 43.0506 -27.3233 0.405411 0.0 6.39873 -2.45046 -24.4115 42.8387 -28.6656 0.922562 0.0 -2.69553 10.9287 9.2144 -6.53411 49.2638 -2.78224 -7.30809 -6.9089 35.8905 17.5484 8.06137 15.0 49.4134 9.7053 -12.5404 -6.59026 -24.337 -12.9378 11.0737 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977586 0.110527 0.179192) (-0.107561 0.993853 -0.026216) (-0.180988 0.006354 0.983465)) pos #f(9.6946 8.85333 674.342)) :zmp #f(-0.063367 -0.021892 0.0) :wrench-list ((#f(2.22805 0.047883 22.5055) #f(2.22801 0.047883 22.4969) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.041111 1.4261 0.0009) #f(-0.041111 1.42558 0.0009) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.408 :angle-vector #f(6.44434 -1.81302 -25.473 41.5719 -26.4602 0.364597 0.0 6.40244 -2.31525 -23.9617 41.4231 -27.8243 0.875754 0.0 -2.88194 10.745 9.07423 -6.52889 49.6842 -2.78661 -7.2855 -6.70481 35.4379 17.2971 7.93137 15.0 49.8274 9.83148 -12.4031 -6.30417 -24.0419 -12.7149 11.0018 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977177 0.110642 0.18134) (-0.107944 0.99385 -0.024713) (-0.182959 0.004574 0.98311)) pos #f(10.7342 8.41432 678.111)) :zmp #f(-0.063258 -0.021949 0.0) :wrench-list ((#f(1.89992 0.040957 19.1813) #f(1.89993 0.040957 19.174) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.035132 1.21336 0.000783) #f(-0.035132 1.21292 0.000783) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.412 :angle-vector #f(6.43772 -1.67089 -25.0126 40.1513 -25.6058 0.32011 0.0 6.39288 -2.16637 -23.5463 40.0694 -26.991 0.823908 0.0 -3.07116 10.5619 8.90414 -6.51565 50.0877 -2.80068 -7.23851 -6.51163 34.8742 16.9953 7.75468 15.0 50.2242 9.96963 -12.2287 -6.02844 -23.6725 -12.4539 10.8772 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976851 0.110551 0.183143) (-0.108152 0.993867 -0.023066) (-0.18457 0.002724 0.982816)) pos #f(11.8098 7.91782 681.725)) :zmp #f(-0.063097 -0.021997 0.0) :wrench-list ((#f(1.6045 0.034718 16.2066) #f(1.60458 0.034718 16.2004) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.02975 1.02258 0.000677) #f(-0.02975 1.0222 0.000677) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.416 :angle-vector #f(6.41775 -1.51638 -24.5826 38.7905 -24.761 0.271926 0.0 6.36998 -2.00388 -23.1657 38.7792 -26.1667 0.767038 0.0 -3.26288 10.3793 8.70428 -6.49455 50.4741 -2.82451 -7.16716 -6.32947 34.1999 16.6432 7.53143 15.0 50.6039 10.1196 -12.017 -5.76334 -23.229 -12.1551 10.6998 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97661 0.110253 0.1846) (-0.108184 0.993903 -0.021274) (-0.18582 0.000806 0.982584)) pos #f(12.922 7.36404 685.179)) :zmp #f(-0.062868 -0.022036 0.0) :wrench-list ((#f(1.34094 0.029154 13.5674) #f(1.34108 0.029154 13.5622) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.024952 0.85295 0.000582) #f(-0.024952 0.852626 0.000582) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.42 :angle-vector #f(6.38442 -1.34954 -24.1839 37.4911 -23.9269 0.220031 0.0 6.33374 -1.82786 -22.8206 37.5539 -25.3523 0.705171 0.0 -3.45674 10.1972 8.47495 -6.46576 50.8435 -2.85814 -7.07158 -6.1584 33.4158 16.2413 7.26192 15.0 50.9667 10.2813 -11.7684 -5.50914 -22.7119 -11.8189 10.4699 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976456 0.109748 0.18571) (-0.108038 0.993959 -0.019339) (-0.186711 -0.00118 0.982414)) pos #f(14.0711 6.75341 688.473)) :zmp #f(-0.062547 -0.022071 0.0) :wrench-list ((#f(1.10811 0.024246 11.248) #f(1.10832 0.024246 11.2436) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.02072 0.703531 0.000498) #f(-0.02072 0.703261 0.000498) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.424 :angle-vector #f(6.33775 -1.17046 -23.8167 36.2548 -23.1046 0.164416 0.0 6.28419 -1.63843 -22.5112 36.3952 -24.5489 0.638346 0.0 -3.65237 10.0154 8.2165 -6.4295 51.196 -2.90158 -6.95199 -5.99852 32.5232 15.7901 6.94661 15.0 51.3124 10.4545 -11.4832 -5.26609 -22.1222 -11.4457 10.1878 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97639 0.109039 0.186476) (-0.107712 0.994032 -0.017261) (-0.187245 -0.003232 0.982308)) pos #f(15.2575 6.08662 691.604)) :zmp #f(-0.062105 -0.022106 0.0) :wrench-list ((#f(0.904642 0.019968 9.23073) #f(0.904924 0.019968 9.22717) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.017033 0.573274 0.000424) #f(-0.017033 0.573052 0.000424) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.428 :angle-vector #f(6.27782 -0.979256 -23.4815 35.0828 -22.2952 0.105083 0.0 6.22142 -1.43577 -22.2381 35.3041 -23.7576 0.566619 0.0 -3.84939 9.83408 7.92945 -6.38596 51.5316 -2.95481 -6.80871 -5.84986 31.5238 15.2904 6.58612 15.0 51.6412 10.6388 -11.1619 -5.03446 -21.4608 -11.0364 9.85408 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976411 0.108125 0.186898) (-0.107207 0.994123 -0.015043) (-0.187426 -0.005349 0.982264)) pos #f(16.4814 5.36458 694.568)) :zmp #f(-0.061497 -0.022151 0.0) :wrench-list ((#f(0.7289 0.016291 7.49631) #f(0.72926 0.016291 7.49341) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.013861 0.461002 0.000359) #f(-0.013861 0.460823 0.00036) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.432 :angle-vector #f(6.20473 -0.776071 -23.1788 33.9764 -21.4996 0.042042 0.0 6.14554 -1.22008 -22.0014 34.282 -22.9794 0.490059 0.0 -4.04739 9.65314 7.61438 -6.3354 51.8502 -3.01779 -6.64216 -5.71248 30.4196 14.7432 6.18126 15.0 51.9531 10.834 -10.8051 -4.81446 -20.7291 -10.5915 9.46945 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976518 0.10701 0.186979) (-0.106522 0.994229 -0.012686) (-0.187258 -0.007529 0.982282)) pos #f(17.7426 4.58843 697.363)) :zmp #f(-0.060665 -0.02222 0.0) :wrench-list ((#f(0.578994 0.013175 6.02353) #f(0.57944 0.013175 6.02119) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.011174 0.365421 0.000305) #f(-0.011174 0.365277 0.000305) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.436 :angle-vector #f(6.11865 -0.561098 -22.9087 32.9369 -20.7191 -0.024689 0.0 6.05672 -0.991607 -21.8013 33.3297 -22.2154 0.408747 0.0 -4.24594 9.47259 7.27202 -6.27808 52.1519 -3.09047 -6.45285 -5.58637 29.213 14.1496 5.73296 15.0 52.2481 11.0397 -10.4134 -4.60633 -19.9287 -10.1121 9.03481 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97671 0.105695 0.186724) (-0.105655 0.994351 -0.010192) (-0.186746 -0.009773 0.98236)) pos #f(19.041 3.75953 699.987)) :zmp #f(-0.059529 -0.022338 0.0) :wrench-list ((#f(0.452776 0.010578 4.7894) #f(0.453316 0.010578 4.78753) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.008933 0.285109 0.000258) #f(-0.008933 0.284996 0.000258) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.44 :angle-vector #f(6.01977 -0.334564 -22.6715 31.9652 -19.9547 -0.095086 0.0 5.95516 -0.750654 -21.6379 32.4483 -21.4666 0.32278 0.0 -4.4446 9.29245 6.90318 -6.21428 52.4367 -3.17274 -6.24136 -5.47155 27.9068 13.5109 5.24235 15.0 52.5263 11.2555 -9.98782 -4.41027 -19.0616 -9.5992 8.55125 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976985 0.104183 0.186137) (-0.104608 0.994485 -0.007565) (-0.185898 -0.01208 0.982495)) pos #f(20.3762 2.87945 702.435)) :zmp #f(-0.057978 -0.022539 0.0) :wrench-list ((#f(0.347846 0.008449 3.76914) #f(0.348489 0.008449 3.76766) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.007095 0.218528 0.000219) #f(-0.007095 0.21844 0.000219) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.444 :angle-vector #f(5.90834 -0.096729 -22.4675 31.0623 -19.2074 -0.169112 0.0 5.84112 -0.49755 -21.5113 31.6385 -20.7342 0.232269 0.0 -4.64293 9.11274 6.50879 -6.1443 52.7047 -3.26451 -6.00841 -5.368 26.5044 12.8286 4.71071 15.0 52.7877 11.481 -9.52927 -4.22651 -18.1298 -9.05394 8.02004 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977338 0.102479 0.185223) (-0.103381 0.99463 -0.004808) (-0.184721 -0.01445 0.982685)) pos #f(21.7477 1.94998 704.706)) :zmp #f(-0.055863 -0.022882 0.0) :wrench-list ((#f(0.261658 0.006735 2.9371) #f(0.262413 0.006735 2.93592) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.005614 0.164075 0.000185) #f(-0.005614 0.164007 0.000186) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.448 :angle-vector #f(5.78465 0.152108 -22.2966 30.2292 -18.4785 -0.246727 0.0 5.71489 -0.232673 -21.4213 30.901 -20.0192 0.137337 0.0 -4.84042 8.93348 6.08989 -6.06847 52.9559 -3.36562 -5.75478 -5.27567 25.0094 12.1043 4.13949 15.0 53.0324 11.7156 -9.03889 -4.05521 -17.1358 -8.47765 7.44263 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977768 0.100586 0.18399) (-0.101975 0.994785 -0.001923) (-0.183224 -0.016882 0.982926)) pos #f(23.1549 0.973104 706.795)) :zmp #f(-0.052988 -0.023453 0.0) :wrench-list ((#f(0.191775 0.005385 2.26878) #f(0.192654 0.005385 2.26785) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.004446 0.120219 0.000157) #f(-0.004446 0.120168 0.000157) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.452 :angle-vector #f(5.64902 0.411613 -22.1589 29.4664 -17.7691 -0.327879 0.0 5.57682 0.043562 -21.3679 30.2362 -19.3227 0.038123 0.0 -5.0366 8.7547 5.64764 -5.98713 53.1903 -3.47592 -5.48135 -5.19452 23.4259 11.3398 3.53028 15.0 53.2604 11.9587 -8.51793 -3.89658 -16.0823 -7.87179 6.82065 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978269 0.09851 0.182445) (-0.100391 0.994947 0.001084) (-0.181416 -0.019376 0.983215)) pos #f(24.5968 -0.048996 708.701)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.456 :angle-vector #f(5.50183 0.681417 -22.0543 28.7746 -17.0802 -0.412509 0.0 5.42727 0.330695 -21.3507 29.6447 -18.6459 -0.065223 0.0 -5.23095 8.57647 5.18329 -5.90066 53.4081 -3.59522 -5.1891 -5.12447 21.7582 10.5372 2.88487 15.0 53.4717 12.2098 -7.96777 -3.75078 -14.9722 -7.23793 6.15589 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978836 0.096255 0.180596) (-0.098632 0.995115 0.004209) (-0.179309 -0.021933 0.983548)) pos #f(26.0726 -1.11395 710.419)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.46 :angle-vector #f(5.3435 0.961113 -21.9828 28.1543 -16.4131 -0.500549 0.0 5.26668 0.628225 -21.3696 29.1267 -17.9899 -0.172533 0.0 -5.42293 8.39882 4.6982 -5.80945 53.6091 -3.7233 -4.87911 -5.06544 20.0112 9.69859 2.20519 15.0 53.6665 12.4683 -7.38992 -3.61796 -13.8087 -6.57779 5.45037 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979465 0.093828 0.178453) (-0.0967 0.995286 0.007447) (-0.176913 -0.024551 0.98392)) pos #f(27.5811 -2.21923 711.946)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.464 :angle-vector #f(5.17449 1.25026 -21.9442 27.6059 -15.7688 -0.591925 0.0 5.09552 0.935612 -21.424 28.6823 -17.3559 -0.283628 0.0 -5.612 8.22183 4.19387 -5.7139 53.7936 -3.85993 -4.55255 -5.0173 18.1902 8.82638 1.49333 15.0 53.8448 12.7333 -6.78602 -3.49829 -12.5953 -5.89321 4.70625 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980148 0.091235 0.176026) (-0.094598 0.995457 0.010793) (-0.174242 -0.02723 0.984326)) pos #f(29.121 -3.36211 713.28)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.468 :angle-vector #f(4.99531 1.54837 -21.9383 27.1297 -15.1487 -0.686553 0.0 4.9143 1.25227 -21.5136 28.3117 -16.745 -0.398315 0.0 -5.79759 8.04556 3.67186 -5.61444 53.9616 -4.00484 -4.21066 -4.97994 16.3008 7.92309 0.751564 15.0 54.0066 13.0042 -6.15784 -3.39189 -11.3358 -5.18619 3.92588 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980881 0.088485 0.173328) (-0.092331 0.995627 0.014239) (-0.17131 -0.029971 0.984761)) pos #f(30.691 -4.53973 714.418)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.472 :angle-vector #f(4.80649 1.85494 -21.9647 26.7258 -14.5538 -0.78434 0.0 4.72357 1.57758 -21.6378 28.0146 -16.1584 -0.516386 0.0 -5.9791 7.87011 3.13389 -5.51154 54.1131 -4.15775 -3.85482 -4.95321 14.3491 6.99141 -0.017685 15.0 54.1521 13.2802 -5.50728 -3.2989 -10.0341 -4.45883 3.11179 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981656 0.085584 0.17037) (-0.089903 0.995792 0.017781) (-0.168131 -0.032771 0.98522)) pos #f(32.2896 -5.74905 715.357)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.476 :angle-vector #f(4.60863 2.16942 -22.023 26.3943 -13.9853 -0.885186 0.0 4.52393 1.91087 -21.796 27.7909 -15.5972 -0.63762 0.0 -6.15595 7.69555 2.58176 -5.40565 54.2482 -4.31834 -3.48647 -4.93695 12.3415 6.03423 -0.811826 15.0 54.2812 13.5604 -4.83637 -3.21943 -8.69466 -3.71338 2.26671 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982467 0.082543 0.167166) (-0.087318 0.99595 0.021409) (-0.164722 -0.035631 0.985696)) pos #f(33.9151 -6.9869 716.094)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.48 :angle-vector #f(4.40238 2.49121 -22.113 26.1351 -13.4445 -0.988982 0.0 4.31603 2.25143 -21.9875 27.6402 -15.0627 -0.761781 0.0 -6.3275 7.522 2.01738 -5.29729 54.367 -4.48628 -3.10716 -4.93097 10.2848 5.05461 -1.62811 15.0 54.3941 13.844 -4.14727 -3.1536 -7.3219 -2.95222 1.39353 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983307 0.07937 0.16373) (-0.084585 0.9961 0.025118) (-0.161098 -0.038548 0.986185)) pos #f(35.5657 -8.24997 716.628)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.484 :angle-vector #f(4.18839 2.81969 -22.2339 25.9482 -12.9325 -1.09561 0.0 4.10055 2.59851 -22.2114 27.562 -14.556 -0.888621 0.0 -6.49311 7.34955 1.44278 -5.18696 54.4695 -4.6612 -2.71852 -4.93508 8.18638 4.05579 -2.46361 15.0 54.4908 14.1299 -3.44227 -3.10149 -5.92066 -2.17787 0.495332 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984168 0.076077 0.160079) (-0.08171 0.996237 0.028898) (-0.157278 -0.041521 0.986681)) pos #f(37.2396 -9.53479 716.956)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.488 :angle-vector #f(3.9674 3.1542 -22.3854 25.833 -12.4506 -1.20495 0.0 3.87821 2.95133 -22.4669 27.5559 -14.0784 -1.01788 0.0 -6.65213 7.17833 0.860097 -5.07521 54.5559 -4.84272 -2.32228 -4.94906 6.05376 3.04116 -3.31525 15.0 54.5714 14.4173 -2.72379 -3.06319 -4.49603 -1.39298 -0.424633 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.985044 0.072674 0.156228) (-0.078701 0.99636 0.032741) (-0.15328 -0.044546 0.987178)) pos #f(38.9349 -10.8378 717.077)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.492 :angle-vector #f(3.74018 3.49405 -22.5667 25.7894 -12.0001 -1.31687 0.0 3.6498 3.30905 -22.7531 27.6209 -13.6311 -1.14927 0.0 -6.80388 7.00847 0.27157 -4.9626 54.6262 -5.03042 -1.92028 -4.97267 3.89503 2.01432 -4.17978 15.0 54.6359 14.705 -1.99438 -3.03877 -3.05337 -0.600326 -1.36292 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.985927 0.069173 0.152196) (-0.075568 0.996467 0.036636) (-0.149124 -0.047622 0.987671)) pos #f(40.6495 -12.1552 716.989)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.496 :angle-vector #f(3.50752 3.83851 -22.7771 25.8168 -11.582 -1.43121 0.0 3.41612 3.67079 -23.0689 27.7564 -13.2153 -1.28251 0.0 -6.94766 6.8401 -0.320445 -4.84969 54.6806 -5.22387 -1.51443 -5.00567 1.71864 0.979028 -5.05381 15.0 54.6846 14.992 -1.25673 -3.02831 -1.59828 0.197173 -2.31591 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.98681 0.065588 0.148001) (-0.072321 0.996556 0.040575) (-0.14483 -0.050744 0.988155)) pos #f(42.3811 -13.4832 716.693)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.5 :angle-vector #f(3.27028 4.1868 -23.0159 25.9145 -11.1978 -1.54784 0.0 3.17804 4.03564 -23.4132 27.9613 -12.8323 -1.4173 0.0 -7.08276 6.67337 -0.913483 -4.73711 54.7191 -5.42261 -1.10676 -5.04777 -0.466587 -0.060784 -5.93374 15.0 54.7174 15.2771 -0.513628 -3.03185 -0.136651 0.996468 -3.2798 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987687 0.061932 0.143663) (-0.068972 0.996624 0.044547) (-0.140419 -0.053907 0.988624)) pos #f(44.1276 -14.8177 716.188)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.504 :angle-vector #f(3.02935 4.53812 -23.2822 26.0818 -10.8486 -1.6666 0.0 2.93646 4.40264 -23.7848 28.2345 -12.4833 -1.55331 0.0 -7.20846 6.50843 -1.50498 -4.62546 54.7418 -5.62615 -0.699353 -5.09869 -2.65142 -1.10102 -6.81587 15.0 54.7344 15.5592 0.231979 -3.04943 1.32539 1.79439 -4.25063 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.988551 0.058219 0.139203) (-0.065532 0.996669 0.04854) (-0.135913 -0.057106 0.989074)) pos #f(45.8867 -16.1547 715.474)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.508 :angle-vector #f(2.78564 4.89166 -23.5753 26.318 -10.5357 -1.78732 0.0 2.69227 4.77084 -24.1826 28.5749 -12.1696 -1.69022 0.0 -7.32404 6.34544 -2.09238 -4.51537 54.7488 -5.83399 -0.294322 -5.15813 -4.82667 -2.13757 -7.69646 15.0 54.7357 15.8371 0.977161 -3.08108 2.78171 2.58776 -5.22441 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.989396 0.054465 0.134642) (-0.062017 0.996691 0.052543) (-0.131334 -0.060336 0.9895)) pos #f(47.6559 -17.49 714.553)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.512 :angle-vector #f(2.54 5.24663 -23.8941 26.6222 -10.2603 -1.90984 0.0 2.44637 5.1393 -24.6052 28.9813 -11.8922 -1.82772 0.0 -7.42883 6.18454 -2.67322 -4.40742 54.7403 -6.04566 0.106325 -5.22581 -6.98347 -3.1665 -8.57194 15.0 54.7213 16.1097 1.7191 -3.1268 4.22642 3.37355 -6.1973 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990218 0.050683 0.129999) (-0.058438 0.996688 0.056546) (-0.126703 -0.06359 0.9899)) pos #f(49.4331 -18.8198 713.425)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.516 :angle-vector #f(2.29327 5.60224 -24.2379 26.9935 -10.0232 -2.03399 0.0 2.19958 5.50711 -25.0516 29.4524 -11.6523 -1.96551 0.0 -7.52221 6.02588 -3.24516 -4.30215 54.7164 -6.26066 0.500675 -5.30146 -9.1134 -4.18405 -9.43888 15.0 54.6915 16.3759 2.45508 -3.1866 5.65391 4.14884 -7.16565 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991011 0.046888 0.125295) (-0.054809 0.99666 0.060537) (-0.122038 -0.06686 0.990271)) pos #f(51.216 -20.1401 712.093)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.52 :angle-vector #f(2.04627 5.95774 -24.6058 27.431 -9.82561 -2.15959 0.0 1.95271 5.87339 -25.5205 29.987 -11.4508 -2.10329 0.0 -7.6036 5.86959 -3.80598 -4.20008 54.677 -6.47854 0.886911 -5.38478 -11.2084 -5.18663 -10.294 15.0 54.6462 16.6347 3.18252 -3.26044 7.05883 4.91087 -8.12595 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991772 0.043093 0.120548) (-0.051144 0.996606 0.064507) (-0.117359 -0.070141 0.990609)) pos #f(53.0028 -21.4474 710.558)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.524 :angle-vector #f(1.79975 6.31239 -24.997 27.9336 -9.66823 -2.28648 0.0 1.70655 6.23729 -26.0107 30.5838 -11.2885 -2.24077 0.0 -7.67247 5.7158 -4.35357 -4.10169 54.6223 -6.69883 1.26332 -5.47553 -13.2609 -6.1708 -11.1343 15.0 54.5855 16.8851 3.89897 -3.34827 8.43607 5.657 -9.07483 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.992497 0.039311 0.115776) (-0.047455 0.996526 0.068444) (-0.112683 -0.073425 0.990914)) pos #f(54.7914 -22.7384 708.824)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.528 :angle-vector #f(1.55446 6.66547 -25.4105 28.5004 -9.55189 -2.41448 0.0 1.46183 6.59799 -26.5212 31.2415 -11.1662 -2.37766 0.0 -7.72835 5.56464 -4.88591 -4.00744 54.5524 -6.92107 1.62827 -5.57345 -15.2635 -7.13333 -11.9567 15.0 54.5094 17.1263 4.60208 -3.45004 9.78081 6.38475 -10.0091 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993185 0.035555 0.110995) (-0.043755 0.99642 0.07234) (-0.108026 -0.076704 0.991185)) pos #f(56.58 -24.0097 706.893)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.532 :angle-vector #f(1.31111 7.01627 -25.8455 29.1303 -9.47724 -2.54342 0.0 1.21926 6.95468 -27.0507 31.9588 -11.0845 -2.51369 0.0 -7.77079 5.41621 -5.40114 -3.91774 54.4673 -7.14481 1.98025 -5.67828 -17.2095 -8.07114 -12.7586 15.0 54.4181 17.3573 5.28963 -3.56565 11.0885 7.09175 -10.9258 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993833 0.031836 0.106221) (-0.040057 0.996289 0.076185) (-0.103402 -0.07997 0.99142)) pos #f(58.3668 -25.2582 704.77)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.536 :angle-vector #f(1.07037 7.36411 -26.3012 29.8223 -9.44488 -2.67311 0.0 0.979533 7.30661 -27.5982 32.7344 -11.0442 -2.6486 0.0 -7.79942 5.27063 -5.89749 -3.83296 54.3671 -7.36962 2.31782 -5.78979 -19.0925 -8.98134 -13.5372 15.0 54.3115 17.5774 5.95951 -3.69501 12.3548 7.77579 -11.822 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99444 0.028165 0.10147) (-0.036373 0.996133 0.079969) (-0.098826 -0.083216 0.991619)) pos #f(60.1502 -26.4808 702.457)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.54 :angle-vector #f(0.832885 7.70831 -26.7766 30.5751 -9.45529 -2.80337 0.0 0.743277 7.65304 -28.1626 33.5668 -11.0456 -2.78212 0.0 -7.81388 5.128 -6.3733 -3.75346 54.2519 -7.59507 2.63967 -5.90775 -20.9063 -9.86119 -14.2901 15.0 54.1898 17.7858 6.60976 -3.838 13.5758 8.43479 -12.695 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995005 0.024554 0.096756) (-0.032716 0.995955 0.083685) (-0.09431 -0.086433 0.991784)) pos #f(61.9286 -27.6749 699.96)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.544 :angle-vector #f(0.599265 8.04824 -27.2711 31.3876 -9.50889 -2.93402 0.0 0.511109 7.99325 -28.7428 34.4547 -11.0893 -2.91401 0.0 -7.8139 4.98841 -6.82703 -3.67954 54.1217 -7.82072 2.94455 -6.03192 -22.6453 -10.7082 -15.015 15.0 54.053 17.9818 7.2385 -3.99448 14.7476 9.06679 -13.5423 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995529 0.021014 0.092092) (-0.029096 0.995755 0.087324) (-0.089866 -0.089613 0.991914)) pos #f(63.7004 -28.8375 697.282)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.548 :angle-vector #f(0.370088 8.38325 -27.7835 32.2586 -9.60598 -3.06487 0.0 0.283605 8.32657 -29.3377 35.3966 -11.1754 -3.04402 0.0 -7.79921 4.85194 -7.25725 -3.6115 53.9765 -8.04618 3.23135 -6.16209 -24.3044 -11.5198 -15.7098 15.0 53.9011 18.1649 7.844 -4.16429 15.8667 9.67 -14.3615 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996011 0.017553 0.087491) (-0.025527 0.995535 0.090877) (-0.085505 -0.092748 0.992011)) pos #f(65.4643 -29.9661 694.429)) :zmp #f(0.0 0.0 0.0) :wrench-list ((#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:swing :swing :swing :swing)) (:time 0.552 :angle-vector #f(0.145901 8.71275 -28.3133 33.1867 -9.74679 -3.19573 0.0 0.061311 8.65233 -29.9463 36.3911 -11.3043 -3.17193 0.0 -7.76962 4.71869 -7.66266 -3.54956 53.8164 -8.27102 3.49901 -6.29805 -25.8786 -12.294 -16.3725 15.0 53.7342 18.3343 8.42465 -4.34726 16.93 10.2427 -15.1503 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996452 0.014181 0.082964) (-0.022019 0.995297 0.094337) (-0.081236 -0.095829 0.992077)) pos #f(67.2189 -31.0582 691.405)) :zmp #f(200.014 -0.010146 0.0) :wrench-list ((#f(-0.325414 0.004068 2.18345) #f(-0.322048 0.004068 2.18306) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.001844 -0.029988 1.883618e-05) #f(-0.001844 -0.02997 1.943400e-05) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.556 :angle-vector #f(-0.072782 9.03613 -28.8594 34.1707 -9.93143 -3.32641 0.0 -0.15526 8.96991 -30.5676 37.4367 -11.4761 -3.2975 0.0 -7.72498 4.58873 -8.04207 -3.49395 53.6414 -8.49486 3.7466 -6.43959 -27.3636 -13.0287 -17.0012 15.0 53.5522 18.4897 8.97894 -4.54319 17.9344 10.7835 -15.9068 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996853 0.010906 0.078522) (-0.018582 0.995043 0.097697) (-0.077067 -0.098849 0.992114)) pos #f(68.9628 -32.1115 688.216)) :zmp #f(200.016 -0.005745 0.0) :wrench-list ((#f(-0.424658 0.004156 2.82416) #f(-0.421487 0.004156 2.82388) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.001345 -0.045581 0.00011) #f(-0.001345 -0.045542 0.00011) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.56 :angle-vector #f(-0.28548 9.35281 -29.421 35.2093 -10.16 -3.45672 0.0 -0.36563 9.27872 -31.2005 38.5319 -11.6909 -3.42051 0.0 -7.66519 4.46212 -8.39438 -3.44485 53.4516 -8.71729 3.97329 -6.58653 -28.7552 -13.7221 -17.5943 15.0 53.3553 18.6305 9.5055 -4.75188 18.8773 11.2908 -16.629 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997215 0.007738 0.074175) (-0.015228 0.994775 0.100951) (-0.073007 -0.101799 0.992122)) pos #f(70.6948 -33.1237 684.867)) :zmp #f(200.018 -0.002519 0.0) :wrench-list ((#f(-0.547826 0.004291 3.62204) #f(-0.544873 0.004291 3.62188) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-0.000747 -0.064917 0.000223) #f(-0.000747 -0.064851 0.000223) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.564 :angle-vector #f(-0.491742 9.66225 -29.9973 36.3009 -10.4323 -3.58646 0.0 -0.569352 9.57819 -31.8439 39.6752 -11.9485 -3.54076 0.0 -7.59017 4.33892 -8.71864 -3.40239 53.2469 -8.93794 4.17832 -6.73868 -30.0499 -14.3723 -18.1503 15.0 53.1435 18.7563 10.0031 -4.97309 19.7562 11.7635 -17.3152 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997541 0.004682 0.069932) (-0.011965 0.994496 0.104091) (-0.06906 -0.104672 0.992106)) pos #f(72.4139 -34.0927 681.363)) :zmp #f(200.019 -0.000161 0.0) :wrench-list ((#f(-0.698521 0.004486 4.60057) #f(-0.695804 0.004486 4.60056) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(-4.045483e-05 -0.088505 0.00036) #f(-4.045483e-05 -0.088409 0.00036) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.568 :angle-vector #f(-0.691152 9.9639 -30.5874 37.4443 -10.7483 -3.71543 0.0 -0.766014 9.86777 -32.4971 40.865 -12.2489 -3.65803 0.0 -7.49993 4.21919 -9.014 -3.36669 53.0274 -9.15643 4.36105 -6.89585 -31.2445 -14.978 -18.6679 15.0 52.9167 18.8667 10.4705 -5.20658 20.5688 12.2005 -17.9638 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997831 0.001745 0.065802) (-0.008802 0.994208 0.107112) (-0.065234 -0.107459 0.992067)) pos #f(74.1188 -35.0165 677.712)) :zmp #f(200.02 0.001564 0.0) :wrench-list ((#f(-0.880498 0.004753 5.78441) #f(-0.878033 0.004753 5.78456) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.000784 -0.116865 0.000524) #f(0.000784 -0.116732 0.000524) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.572 :angle-vector #f(-0.883325 10.2572 -31.1905 38.6379 -11.1078 -3.84343 0.0 -0.955235 10.1469 -33.1589 42.0997 -12.5919 -3.77215 0.0 -7.39449 4.10297 -9.27971 -3.33782 52.7931 -9.3724 4.52094 -7.05787 -32.336 -15.5378 -19.1459 15.0 52.6751 18.9614 10.9068 -5.45208 21.3134 12.6007 -18.5734 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998089 -0.001065 0.06179) (-0.00575 0.993914 0.110008) (-0.061531 -0.110153 0.992008)) pos #f(75.8086 -35.8932 673.918)) :zmp #f(200.021 0.002834 0.0) :wrench-list ((#f(-1.09726 0.005102 7.19736) #f(-1.09506 0.005102 7.19771) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.001741 -0.150414 0.000718) #f(0.001741 -0.150236 0.000718) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.576 :angle-vector #f(-1.06791 10.5418 -31.8057 39.8801 -11.5104 -3.97027 0.0 -1.13667 10.4152 -33.8284 43.3777 -12.9771 -3.88291 0.0 -7.27395 3.99031 -9.51515 -3.31583 52.5441 -9.58548 4.65753 -7.22459 -33.3221 -16.0505 -19.5832 15.0 52.4186 19.0402 11.3111 -5.7093 21.9883 12.9632 -19.1427 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998315 -0.003744 0.057904) (-0.002814 0.993617 0.112773) (-0.057956 -0.112746 0.991932)) pos #f(77.4823 -36.721 669.987)) :zmp #f(200.021 0.003787 0.0) :wrench-list ((#f(-1.35189 0.005531 8.8616) #f(-1.34996 0.005531 8.86218) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.002851 -0.18942 0.000945) #f(0.002851 -0.189191 0.000945) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.58 :angle-vector #f(-1.24458 10.817 -32.4322 41.1695 -11.9557 -4.09572 0.0 -1.31 10.6722 -34.5046 44.6974 -13.4043 -3.99014 0.0 -7.13842 3.88124 -9.71982 -3.30073 52.2802 -9.79532 4.77047 -7.39584 -34.2007 -16.5152 -19.979 15.0 52.1472 19.1029 11.6825 -5.97795 22.5921 13.2875 -19.6707 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998513 -0.006287 0.054148) (-3.585292e-06 0.993319 0.115403) (-0.054512 -0.115232 0.991842)) pos #f(79.139 -37.4983 665.925)) :zmp #f(200.022 0.004522 0.0) :wrench-list ((#f(-1.64703 0.006033 10.7976) #f(-1.64538 0.006033 10.7985) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.004137 -0.234005 0.001209) #f(0.004137 -0.233717 0.00121) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.584 :angle-vector #f(-1.41305 11.0825 -33.0691 42.5043 -12.4432 -4.2196 0.0 -1.47494 10.9174 -35.1867 46.0571 -13.8727 -4.09367 0.0 -6.98808 3.77579 -9.89332 -3.29249 52.0015 -10.0016 4.85951 -7.57148 -34.9702 -16.931 -20.3325 15.0 51.8609 19.1493 12.0205 -6.2577 23.1236 13.5729 -20.1564 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998685 -0.00869 0.050528) (0.002676 0.993023 0.117894) (-0.0512 -0.117604 0.99174)) pos #f(80.7778 -38.2237 661.739)) :zmp #f(200.022 0.005111 0.0) :wrench-list ((#f(-1.9849 0.006594 13.0242) #f(-1.98354 0.006594 13.0253) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.005632 -0.28414 0.001515) #f(0.005632 -0.283785 0.001515) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.588 :angle-vector #f(-1.57307 11.3378 -33.7156 43.8831 -12.9723 -4.34168 0.0 -1.63126 11.1504 -35.8738 47.4552 -14.382 -4.19334 0.0 -6.82316 3.67397 -10.0354 -3.29106 51.708 -10.2039 4.92448 -7.75137 -35.6293 -17.2972 -20.6433 15.0 51.5598 19.1794 12.3245 -6.5482 23.582 13.819 -20.5991 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998833 -0.010948 0.047047) (0.005217 0.992731 0.120241) (-0.048021 -0.119855 0.991629)) pos #f(82.398 -38.8957 657.435)) :zmp #f(200.022 0.005606 0.0) :wrench-list ((#f(-2.36729 0.007191 15.5584) #f(-2.3662 0.007191 15.56) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.007371 -0.339647 0.001865) #f(0.007371 -0.339218 0.001866) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.592 :angle-vector #f(-1.7244 11.5824 -34.3708 45.304 -13.5423 -4.46175 0.0 -1.77872 11.3708 -36.5649 48.8898 -14.9314 -4.28899 0.0 -6.64393 3.57579 -10.1458 -3.29634 51.3997 -10.402 4.96532 -7.93536 -36.1773 -17.6135 -20.911 15.0 51.2439 19.193 12.5941 -6.84911 23.9668 14.0255 -20.9982 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998959 -0.013059 0.043707) (0.007617 0.992447 0.122441) (-0.044976 -0.12198 0.991513)) pos #f(83.999 -39.5132 653.018)) :zmp #f(200.022 0.006043 0.0) :wrench-list ((#f(-2.79554 0.007794 18.4158) #f(-2.79474 0.007794 18.4178) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.009396 -0.400201 0.002266) #f(0.009396 -0.399689 0.002266) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.596 :angle-vector #f(-1.86687 11.816 -35.0339 46.7653 -14.1524 -4.57961 0.0 -1.91716 11.5784 -37.2592 50.3594 -15.5202 -4.38048 0.0 -6.45071 3.48128 -10.2246 -3.30821 51.0765 -10.5956 4.98207 -8.12335 -36.6136 -17.8794 -21.1353 15.0 50.9131 19.1902 12.829 -7.16004 24.2777 14.1922 -21.3531 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999066 -0.01502 0.040511) (0.009869 0.992172 0.124489) (-0.042063 -0.123973 0.991394)) pos #f(85.5799 -40.075 648.494)) :zmp #f(200.022 0.006447 0.0) :wrench-list ((#f(-3.27058 0.008365 21.6101) #f(-3.27007 0.008365 21.6125) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.011754 -0.465327 0.002721) #f(0.011754 -0.464723 0.002721) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.6 :angle-vector #f(-2.0003 12.0382 -35.704 48.2653 -14.8018 -4.69503 0.0 -2.04642 11.7728 -37.9557 51.8622 -16.1475 -4.46765 0.0 -6.24385 3.39042 -10.2718 -3.32651 50.7384 -10.7842 4.97487 -8.31521 -36.9384 -18.0949 -21.3161 15.0 50.5674 19.1711 13.029 -7.48061 24.5144 14.3191 -21.6637 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999156 -0.01683 0.037458) (0.01197 0.991909 0.126384) (-0.039282 -0.125829 0.991274)) pos #f(87.1403 -40.5803 643.869)) :zmp #f(200.021 0.006837 0.0) :wrench-list ((#f(-3.79291 0.008859 25.1533) #f(-3.79268 0.008859 25.1563) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.014498 -0.534402 0.003236) #f(0.014498 -0.533698 0.003236) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.604 :angle-vector #f(-2.12457 12.2485 -36.3803 49.8021 -15.4894 -4.80779 0.0 -2.16638 11.9536 -38.6538 53.3962 -16.8124 -4.55039 0.0 -6.02377 3.3032 -10.2876 -3.35104 50.3854 -10.9677 4.94395 -8.51082 -37.1518 -18.2601 -21.4536 15.0 50.2068 19.1358 13.1941 -7.81039 24.6774 14.4064 -21.9298 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999232 -0.018487 0.034549) (0.013917 0.991661 0.128122) (-0.03663 -0.127543 0.991156)) pos #f(88.6797 -41.0282 639.15)) :zmp #f(200.021 0.007226 0.0) :wrench-list ((#f(-4.36258 0.009223 29.0558) #f(-4.36264 0.009223 29.0594) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.017685 -0.606652 0.003816) #f(0.017685 -0.60584 0.003817) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.608 :angle-vector #f(-2.23959 12.4467 -37.062 51.3739 -16.2143 -4.91767 0.0 -2.27696 12.1208 -39.3524 54.9598 -17.5139 -4.62857 0.0 -5.79093 3.21963 -10.2722 -3.38157 50.0174 -11.1458 4.88964 -8.7101 -37.2547 -18.3751 -21.548 15.0 49.8313 19.0844 13.3244 -8.14896 24.767 14.4542 -22.1514 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999295 -0.019991 0.031784) (0.015708 0.991429 0.129702) (-0.034104 -0.129111 0.991043)) pos #f(90.1975 -41.4181 634.342)) :zmp #f(200.02 0.007621 0.0) :wrench-list ((#f(-4.97923 0.009397 33.3263) #f(-4.97957 0.009397 33.3308) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.021381 -0.681156 0.004468) #f(0.021381 -0.680228 0.004468) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.612 :angle-vector #f(-2.3453 12.6324 -37.7483 52.9788 -16.9753 -5.02445 0.0 -2.37812 12.2739 -40.0509 56.5511 -18.2509 -4.70207 0.0 -5.54584 3.13966 -10.2261 -3.41786 49.6344 -11.318 4.81235 -8.91294 -37.2483 -18.4404 -21.5997 15.0 49.441 19.0173 13.42 -8.49586 24.784 14.4631 -22.3288 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999347 -0.021342 0.029159) (0.017342 0.991215 0.131121) (-0.031701 -0.130529 0.990937)) pos #f(91.6935 -41.7495 629.45)) :zmp #f(200.02 0.008031 0.0) :wrench-list ((#f(-5.64205 0.009312 37.9719) #f(-5.64267 0.009312 37.9772) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.025653 -0.756844 0.005197) #f(0.025653 -0.755793 0.005197) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.616 :angle-vector #f(-2.44165 12.8052 -38.4382 54.6149 -17.7711 -5.12791 0.0 -2.46982 12.4128 -40.7484 58.1683 -19.022 -4.77078 0.0 -5.28904 3.06328 -10.1499 -3.4596 49.2363 -11.4842 4.71263 -9.11926 -37.1342 -18.4564 -21.6093 15.0 49.0357 18.9347 13.4812 -8.85063 24.7294 14.4334 -22.4623 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99939 -0.02254 0.026673) (0.018818 0.991021 0.132377) (-0.029417 -0.131794 0.99084)) pos #f(93.1673 -42.0223 624.48)) :zmp #f(200.019 0.008459 0.0) :wrench-list ((#f(-6.34981 0.008893 42.9979) #f(-6.35072 0.008893 43.0043) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.030577 -0.832497 0.00601) #f(0.030577 -0.831315 0.00601) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.62 :angle-vector #f(-2.52866 12.965 -39.1309 56.28 -18.6004 -5.22781 0.0 -2.5521 12.5374 -41.4442 59.8093 -19.8262 -4.83462 0.0 -5.02113 2.99046 -10.0441 -3.50646 48.8232 -11.6441 4.59108 -9.32898 -36.9142 -18.4241 -21.5775 15.0 48.6154 18.8369 13.5085 -9.21278 24.6044 14.3659 -22.5524 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999426 -0.023587 0.024321) (0.020136 0.990848 0.13347) (-0.027247 -0.132904 0.990754)) pos #f(94.6186 -42.2361 619.437)) :zmp #f(200.019 0.008908 0.0) :wrench-list ((#f(-7.10085 0.008058 48.408) #f(-7.10204 0.008058 48.4155) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.036232 -0.906747 0.006914) #f(0.036232 -0.905428 0.006914) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.624 :angle-vector #f(-2.60636 13.1113 -39.8257 57.9723 -19.4618 -5.32392 0.0 -2.62499 12.6475 -42.1374 61.4724 -20.6619 -4.89347 0.0 -4.74276 2.92114 -9.9095 -3.55808 48.3948 -11.7975 4.44843 -9.54202 -36.5909 -18.3441 -21.5052 15.0 48.1801 18.7243 13.5025 -9.58181 24.4107 14.2614 -22.5999 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999456 -0.024484 0.0221) (0.021298 0.990698 0.134398) (-0.025185 -0.133855 0.990681)) pos #f(96.0474 -42.3911 614.328)) :zmp #f(200.018 0.009383 0.0) :wrench-list ((#f(-7.89308 0.006714 54.204) #f(-7.89456 0.006714 54.2129) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.042704 -0.978077 0.007915) #f(0.042704 -0.976615 0.007915) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.628 :angle-vector #f(-2.67481 13.2439 -40.5216 59.6897 -20.3538 -5.41601 0.0 -2.68858 12.7429 -42.8274 63.1556 -21.5277 -4.94727 0.0 -4.45462 2.85529 -9.74697 -3.61407 47.9511 -11.944 4.28549 -9.75833 -36.1668 -18.2178 -21.3936 15.0 47.7298 18.5973 13.4637 -9.95719 24.15 14.1208 -22.6054 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999481 -0.025235 0.020003) (0.022305 0.990572 0.135162) (-0.023225 -0.134646 0.990622)) pos #f(97.4534 -42.4875 609.156)) :zmp #f(200.017 0.009883 0.0) :wrench-list ((#f(-8.72397 0.004764 60.3864) #f(-8.72576 0.004764 60.3968) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.050084 -1.04483 0.009022) #f(0.050084 -1.04321 0.009022) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.632 :angle-vector #f(-2.73412 13.3627 -41.2178 61.43 -21.2748 -5.50384 0.0 -2.74299 12.8237 -43.5134 64.8569 -22.4221 -4.99593 0.0 -4.15746 2.79285 -9.55748 -3.67399 47.4921 -12.0834 4.10319 -9.97785 -35.6453 -18.0463 -21.2436 15.0 47.2644 18.4566 13.3931 -10.3384 23.8243 13.9452 -22.5702 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999504 -0.025841 0.018023) (0.02316 0.990471 0.13576) (-0.02136 -0.135275 0.990578)) pos #f(98.8368 -42.5256 603.927)) :zmp #f(200.016 0.010411 0.0) :wrench-list ((#f(-9.59071 0.002109 66.9538) #f(-9.59281 0.002109 66.9659) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.058464 -1.10527 0.010241) #f(0.058464 -1.1035 0.010241) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.636 :angle-vector #f(-2.7844 13.4673 -41.9135 63.191 -22.2231 -5.58719 0.0 -2.78835 12.8896 -44.1946 66.5744 -23.3433 -5.03938 0.0 -3.85205 2.73375 -9.34215 -3.73739 47.0177 -12.2155 3.90252 -10.2005 -35.03 -17.831 -21.0569 15.0 46.7839 18.3026 13.2915 -10.7248 23.436 13.7357 -22.4953 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999523 -0.026307 0.016155) (0.023866 0.990395 0.136193) (-0.019583 -0.135742 0.990551)) pos #f(100.197 -42.5059 598.646)) :zmp #f(200.016 0.010964 0.0) :wrench-list ((#f(-10.4904 -0.001343 73.9036) #f(-10.4928 -0.001343 73.9177) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.067923 -1.15778 0.011578) #f(0.067923 -1.15585 0.011578) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.64 :angle-vector #f(-2.82583 13.5575 -42.6079 64.9707 -23.1968 -5.66579 0.0 -2.82486 12.9407 -44.8704 68.3059 -24.2897 -5.07757 0.0 -3.53924 2.67793 -9.10217 -3.80377 46.5278 -12.3401 3.68461 -10.4263 -34.3246 -17.5736 -20.8348 15.0 46.2883 18.1359 13.1599 -11.1159 22.9877 13.4939 -22.382 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999542 -0.026637 0.014389) (0.024428 0.990344 0.136461) (-0.017885 -0.136047 0.990541)) pos #f(101.536 -42.4294 593.317)) :zmp #f(200.015 0.011538 0.0) :wrench-list ((#f(-11.4202 -0.00567 81.2319) #f(-11.423 -0.00567 81.2482) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.078531 -1.20083 0.013038) #f(0.078531 -1.19875 0.013038) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.644 :angle-vector #f(-2.8586 13.6333 -43.3001 66.7666 -24.1942 -5.73943 0.0 -2.85271 12.977 -45.5401 70.0496 -25.2593 -5.11044 0.0 -3.2199 2.62532 -8.83888 -3.87259 46.0223 -12.4569 3.45065 -10.6552 -33.5337 -17.2759 -20.5791 15.0 45.7774 17.9573 12.9996 -11.5111 22.4823 13.2211 -22.2319 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999559 -0.026836 0.012717) (0.02485 0.990319 0.136565) (-0.016259 -0.136188 0.99055)) pos #f(102.851 -42.2967 587.946)) :zmp #f(200.014 0.01213 0.0) :wrench-list ((#f(-12.3771 -0.010942 88.9333) #f(-12.3802 -0.010942 88.9521) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.090348 -1.23303 0.014624) #f(0.090348 -1.23079 0.014624) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.648 :angle-vector #f(-2.88293 13.6943 -43.9893 68.5767 -25.2133 -5.80784 0.0 -2.87217 12.9985 -46.2031 71.8032 -26.2504 -5.13795 0.0 -2.89496 2.57583 -8.5537 -3.94329 45.5011 -12.5657 3.20195 -10.8872 -32.6621 -16.9398 -20.2916 15.0 45.2512 17.7674 12.8117 -11.9098 21.9229 12.919 -22.0466 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999576 -0.026909 0.011128) (0.02514 0.99032 0.136506) (-0.014694 -0.136168 0.990577)) pos #f(104.145 -42.1091 582.536)) :zmp #f(200.013 0.012736 0.0) :wrench-list ((#f(-13.3582 -0.017217 97.0013) #f(-13.3617 -0.017217 97.0229) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.103419 -1.25309 0.016339) #f(0.103419 -1.25068 0.016339) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.652 :angle-vector #f(-2.89909 13.7404 -44.6747 70.3984 -26.252 -5.87078 0.0 -2.88351 13.0052 -46.8585 73.5647 -27.2608 -5.16006 0.0 -2.5654 2.52938 -8.24821 -4.01527 44.9641 -12.6663 2.93992 -11.1222 -31.7148 -16.5674 -19.9744 15.0 44.7097 17.5669 12.5977 -12.3112 21.3128 12.5893 -21.8279 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999593 -0.026862 0.009612) (0.025303 0.990347 0.136285) (-0.01318 -0.135986 0.990623)) pos #f(105.417 -41.8678 577.092)) :zmp #f(200.012 0.01335 0.0) :wrench-list ((#f(-14.3605 -0.024542 105.428) #f(-14.3644 -0.024542 105.453) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.11778 -1.25984 0.018183) #f(0.11778 -1.25726 0.018183) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.656 :angle-vector #f(-2.90737 13.7715 -45.3554 72.2296 -27.3081 -5.92801 0.0 -2.88704 12.9973 -47.506 75.332 -28.2885 -5.17675 0.0 -2.23223 2.48587 -7.92406 -4.0879 44.4112 -12.7585 2.66604 -11.3602 -30.6975 -16.161 -19.6296 15.0 44.1528 17.3569 12.3591 -12.7149 20.6558 12.234 -21.5778 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99961 -0.026702 0.008157) (0.025347 0.990398 0.135904) (-0.011707 -0.135645 0.990688)) pos #f(106.667 -41.5742 571.618)) :zmp #f(200.011 0.01397 0.0) :wrench-list ((#f(-15.3809 -0.032954 114.204) #f(-15.3853 -0.032954 114.232) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.133457 -1.25223 0.020155) #f(0.133457 -1.24948 0.020155) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.66 :angle-vector #f(-2.90809 13.7875 -46.0306 74.0677 -28.3795 -5.97927 0.0 -2.88311 12.9747 -48.1447 77.103 -29.3312 -5.18799 0.0 -1.89654 2.44519 -7.58304 -4.16052 43.8422 -12.8421 2.38193 -11.6013 -29.6162 -15.7232 -19.2595 15.0 43.5805 17.138 12.0975 -13.12 19.9557 11.8551 -21.2984 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999628 -0.026436 0.006749) (0.02528 0.990473 0.135366) (-0.010263 -0.135145 0.990773)) pos #f(107.897 -41.23 566.118)) :zmp #f(200.01 0.01459 0.0) :wrench-list ((#f(-16.4166 -0.042478 123.319) #f(-16.4214 -0.042478 123.35) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.150461 -1.22932 0.022255) #f(0.150461 -1.2264 0.022255) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.664 :angle-vector #f(-2.90161 13.7883 -46.6995 75.9103 -29.4637 -6.0243 0.0 -2.8721 12.9378 -48.7741 78.8754 -30.3867 -5.19377 0.0 -1.55942 2.40724 -7.22705 -4.23242 43.2571 -12.917 2.08927 -11.8454 -28.4771 -15.2565 -18.8666 15.0 42.9926 16.9113 11.8147 -13.526 19.2167 11.4547 -20.9921 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999646 -0.026071 0.005376) (0.02511 0.990572 0.134672) (-0.008837 -0.134489 0.990876)) pos #f(109.106 -40.837 560.596)) :zmp #f(200.009 0.015209 0.0) :wrench-list ((#f(-17.4643 -0.05313 132.76) #f(-17.4696 -0.05313 132.796) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.168793 -1.19028 0.024478) #f(0.168793 -1.18719 0.024478) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.668 :angle-vector #f(-2.88831 13.7738 -47.3612 77.7549 -30.5584 -6.06286 0.0 -2.85441 12.8866 -49.3936 80.6471 -31.4527 -5.19408 0.0 -1.22205 2.3719 -6.8581 -4.30287 42.6557 -12.9829 1.78985 -12.0926 -27.2872 -14.7639 -18.4536 15.0 42.3891 16.6777 11.5126 -13.9321 18.4433 11.0352 -20.6612 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999664 -0.025617 0.004023) (0.024848 0.990693 0.133825) (-0.007414 -0.13368 0.990997)) pos #f(110.296 -40.397 555.056)) :zmp #f(200.008 0.015822 0.0) :wrench-list ((#f(-18.521 -0.064913 142.515) #f(-18.5268 -0.064913 142.555) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.188446 -1.13441 0.02682) #f(0.188446 -1.13116 0.02682) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.672 :angle-vector #f(-2.86861 13.744 -48.0149 79.599 -31.6611 -6.09468 0.0 -2.83048 12.8213 -50.0026 82.4159 -32.5266 -5.18893 0.0 -0.885619 2.33906 -6.4783 -4.37112 42.0379 -13.0397 1.48554 -12.3428 -26.0535 -14.2482 -18.0232 15.0 41.7699 16.4383 11.1931 -14.3375 17.6402 10.599 -20.3084 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999682 -0.025081 0.002675) (0.024504 0.990836 0.132829) (-0.005982 -0.132721 0.991135)) pos #f(111.466 -39.9124 549.501)) :zmp #f(200.007 0.016426 0.0) :wrench-list ((#f(-19.5836 -0.077821 152.57) #f(-19.5899 -0.077821 152.613) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.209396 -1.06111 0.029276) #f(0.209396 -1.0577 0.029276) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.676 :angle-vector #f(-2.84292 13.6987 -48.6599 81.4402 -32.7693 -6.11953 0.0 -2.80076 12.7421 -50.6006 84.1795 -33.6061 -5.17834 0.0 -0.551305 2.30859 -6.08972 -4.43642 41.4036 -13.0872 1.17819 -12.5961 -24.7829 -13.7123 -17.5783 15.0 41.1349 16.1941 10.8583 -14.7416 16.8119 10.1485 -19.9362 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.9997 -0.024473 0.001317) (0.024087 0.990999 0.131685) (-0.004528 -0.131614 0.991291)) pos #f(112.619 -39.3851 543.935)) :zmp #f(200.006 0.01702 0.0) :wrench-list ((#f(-20.649 -0.091835 162.907) #f(-20.6559 -0.091835 162.955) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.231612 -0.96992 0.031838) #f(0.231612 -0.966342 0.031838) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.68 :angle-vector #f(-2.81166 13.6381 -49.2953 83.2759 -33.8806 -6.13718 0.0 -2.76567 12.6492 -51.1871 85.936 -34.6888 -5.16231 0.0 -0.220227 2.28037 -5.69437 -4.49807 40.7527 -13.1253 0.869543 -12.8526 -23.4824 -13.1592 -17.1213 15.0 40.4843 15.946 10.5099 -15.1438 15.9629 9.68606 -19.5472 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999717 -0.023802 -6.596366e-05) (0.023607 0.991181 0.130399) (-0.003038 -0.130363 0.991462)) pos #f(113.753 -38.8174 538.362)) :zmp #f(200.005 0.017601 0.0) :wrench-list ((#f(-21.7141 -0.106929 173.51) #f(-21.7214 -0.106929 173.564) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.255049 -0.860471 0.034498) #f(0.255049 -0.856731 0.034498) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.684 :angle-vector #f(-2.77521 13.562 -49.9205 85.104 -34.9928 -6.14743 0.0 -2.72563 12.543 -51.7616 87.6833 -35.7725 -5.14088 0.0 0.106544 2.25429 -5.29416 -4.55541 40.0853 -13.154 0.561299 -13.1121 -22.1584 -12.5916 -16.655 15.0 39.8179 15.6951 10.1499 -15.5433 15.0976 9.21385 -19.1436 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999733 -0.023074 -0.001486) (0.023073 0.99138 0.128972) (-0.001503 -0.128971 0.991647)) pos #f(114.871 -38.2114 532.784)) :zmp #f(200.004 0.018167 0.0) :wrench-list ((#f(-22.7755 -0.123062 184.361) #f(-22.7834 -0.123062 184.419) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.279653 -0.732521 0.037246) #f(0.279653 -0.728621 0.037246) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.688 :angle-vector #f(-2.73396 13.4706 -50.5347 86.9222 -36.1037 -6.15012 0.0 -2.68105 12.4235 -52.3235 89.4193 -36.8551 -5.11408 0.0 0.427989 2.23023 -4.89095 -4.60781 39.4013 -13.173 0.255062 -13.3746 -20.8171 -12.0121 -16.1817 15.0 39.1359 15.4423 9.78004 -15.9395 14.2199 8.73405 -18.728 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999747 -0.022299 -0.002956) (0.022494 0.991595 0.127408) (9.043562e-05 -0.127442 0.991846)) pos #f(115.973 -37.5692 527.205)) :zmp #f(200.003 0.018715 0.0) :wrench-list ((#f(-23.8301 -0.140186 195.439) #f(-23.8387 -0.140186 195.503) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.305356 -0.58594 0.040072) #f(0.305356 -0.581885 0.040072) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.692 :angle-vector #f(-2.6883 13.364 -51.1374 88.7284 -37.2111 -6.14508 0.0 -2.6323 12.2912 -52.8726 91.1424 -37.9344 -5.08196 0.0 0.743143 2.20809 -4.4865 -4.65469 38.7009 -13.1824 -0.047638 -13.6402 -19.4646 -11.4233 -15.7038 15.0 38.4383 15.1883 9.40199 -16.3319 13.334 8.24873 -18.3023 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999759 -0.021484 -0.004489) (0.021878 0.991826 0.125711) (0.001751 -0.125779 0.992057)) pos #f(117.058 -36.8929 521.628)) :zmp #f(200.002 0.019246 0.0) :wrench-list ((#f(-24.8748 -0.158238 206.723) #f(-24.8839 -0.158238 206.793) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.332082 -0.420713 0.042963) #f(0.332082 -0.416504 0.042963) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.696 :angle-vector #f(-2.63856 13.2421 -51.7278 90.5204 -38.313 -6.13218 0.0 -2.57979 12.1462 -53.4083 92.8506 -39.0086 -5.04456 0.0 1.05109 2.18777 -4.0825 -4.6955 37.9841 -13.1821 -0.345348 -13.9088 -18.1066 -10.8276 -15.2235 15.0 37.7254 14.9342 9.01741 -16.7198 12.4435 7.75986 -17.8689 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999768 -0.020636 -0.006094) (0.021232 0.99207 0.123884) (0.003489 -0.123985 0.992278)) pos #f(118.128 -36.1845 516.055)) :zmp #f(200.001 0.019756 0.0) :wrench-list ((#f(-25.9062 -0.177153 218.192) #f(-25.916 -0.177153 218.267) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.359747 -0.236893 0.045906) #f(0.359747 -0.232535 0.045906) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.7 :angle-vector #f(-2.58513 13.1052 -52.3054 92.2964 -39.4075 -6.11131 0.0 -2.52387 11.9888 -53.9303 94.5422 -40.0756 -5.00196 0.0 1.35097 2.16915 -3.68056 -4.72973 37.2511 -13.1721 -0.636694 -14.1804 -16.7487 -10.2273 -14.743 15.0 36.9972 14.6806 8.62788 -17.1028 11.552 7.26934 -17.4297 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999774 -0.019761 -0.007782) (0.020563 0.992325 0.121932) (0.005313 -0.122064 0.992508)) pos #f(119.184 -35.446 510.49)) :zmp #f(200.0 0.020246 0.0) :wrench-list ((#f(-26.9213 -0.196858 229.823) #f(-26.9317 -0.196858 229.905) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.388264 -0.03458 0.048889) #f(0.388264 -0.030076 0.048889) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.704 :angle-vector #f(-2.52832 12.9534 -52.8698 94.0544 -40.4928 -6.08238 0.0 -2.4649 11.8194 -54.4383 96.2155 -41.1337 -4.95421 0.0 1.64197 2.15214 -3.2822 -4.75691 36.5021 -13.1523 -0.920376 -14.4548 -15.396 -9.62475 -14.2643 15.0 36.2541 14.4283 8.23491 -17.4802 10.6631 6.77899 -16.9868 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999776 -0.018867 -0.009563) (0.019878 0.992592 0.119857) (0.00723 -0.12002 0.992745)) pos #f(120.225 -34.6795 504.934)) :zmp #f(199.999 0.020714 0.0) :wrench-list ((#f(-27.9171 -0.217279 241.595) #f(-27.9281 -0.217279 241.682) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.417545 0.186086 0.051898) #f(0.417545 0.190733 0.051898) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.708 :angle-vector #f(-2.46848 12.7868 -53.4203 95.7925 -41.567 -6.04532 0.0 -2.40322 11.6383 -54.9319 97.8691 -42.1812 -4.9014 0.0 1.92334 2.13664 -2.88888 -4.77662 35.7374 -13.1228 -1.19518 -14.732 -14.0536 -9.022 -13.7894 15.0 35.4964 14.178 7.83995 -17.8517 9.78004 6.29053 -16.5419 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999773 -0.01796 -0.011444) (0.019183 0.992868 0.117663) (0.00925 -0.117856 0.992988)) pos #f(121.253 -33.887 499.391)) :zmp #f(199.998 0.021162 0.0) :wrench-list ((#f(-28.8905 -0.238334 253.483) #f(-28.9021 -0.238334 253.577) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.4475 0.424923 0.054923) #f(0.4475 0.429708 0.054923) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.712 :angle-vector #f(-2.40592 12.6057 -53.9565 97.5092 -42.6285 -6.00007 0.0 -2.33918 11.4457 -55.4108 99.5012 -43.2163 -4.84361 0.0 2.19436 2.12256 -2.50197 -4.78845 34.9572 -13.0836 -1.45995 -15.012 -12.7261 -8.42113 -13.3201 15.0 34.7242 13.9305 7.44439 -18.2168 8.90588 5.80561 -16.0969 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999764 -0.017046 -0.013436) (0.018484 0.993152 0.115356) (0.011377 -0.115577 0.993233)) pos #f(122.267 -33.0704 493.863)) :zmp #f(199.997 0.021588 0.0) :wrench-list ((#f(-29.8388 -0.25994 265.466) #f(-29.851 -0.25994 265.566) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.478034 0.681708 0.057949) #f(0.478034 0.686627 0.057949) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.716 :angle-vector #f(-2.34095 12.4103 -54.478 99.2026 -43.6756 -5.94662 0.0 -2.27308 11.2421 -55.8749 101.111 -44.2376 -4.78094 0.0 2.45438 2.10981 -2.12277 -4.79206 34.1619 -13.0347 -1.71364 -15.2946 -11.418 -7.82407 -12.8581 15.0 33.938 13.6864 7.04954 -18.5749 8.0436 5.32578 -15.6536 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999749 -0.016131 -0.015543) (0.017785 0.993443 0.112938) (0.013619 -0.113186 0.99348)) pos #f(123.268 -32.2316 488.353)) :zmp #f(199.997 0.021992 0.0) :wrench-list ((#f(-30.7591 -0.282008 277.52) #f(-30.772 -0.282008 277.627) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.509052 0.956175 0.060965) #f(0.509052 0.961223 0.060965) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.72 :angle-vector #f(-2.27388 12.2008 -54.9844 100.871 -44.7069 -5.88496 0.0 -2.20525 11.0278 -56.3238 102.696 -45.2434 -4.71347 0.0 2.70281 2.09829 -1.75248 -4.78714 33.3519 -12.9763 -1.95525 -15.5797 -10.1336 -7.23268 -12.4051 15.0 33.1382 13.4463 6.65667 -18.9258 7.19598 4.85251 -15.2134 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999726 -0.015219 -0.017772) (0.017091 0.993739 0.110414) (0.015981 -0.110688 0.993727)) pos #f(124.256 -31.3725 482.861)) :zmp #f(199.996 0.022375 0.0) :wrench-list ((#f(-31.6488 -0.304446 289.623) #f(-31.6623 -0.304446 289.736) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.540456 1.24802 0.063957) #f(0.540456 1.25319 0.063957) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.724 :angle-vector #f(-2.20499 11.9775 -55.4753 102.514 -45.721 -5.81511 0.0 -2.13597 10.8031 -56.7574 104.256 -46.2326 -4.64134 0.0 2.93908 2.08793 -1.39225 -4.77339 32.5276 -12.9085 -2.18387 -15.8672 -8.87677 -6.64868 -11.9627 15.0 32.3251 13.2107 6.26696 -19.2691 6.36563 4.38721 -14.7779 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999695 -0.014317 -0.02013) (0.016406 0.994038 0.107789) (0.018467 -0.108086 0.99397)) pos #f(125.232 -30.4949 477.391)) :zmp #f(199.995 0.022737 0.0) :wrench-list ((#f(-32.5051 -0.327157 301.749) #f(-32.5193 -0.327157 301.869) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.572146 1.55689 0.066915) #f(0.572146 1.56218 0.066915) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.728 :angle-vector #f(-2.13455 11.7408 -55.9504 104.129 -46.7165 -5.7371 0.0 -2.06554 10.5685 -57.1754 105.789 -47.2036 -4.56464 0.0 3.16271 2.07864 -1.04313 -4.75059 31.6894 -12.8312 -2.39868 -16.157 -7.65125 -6.07374 -11.5322 15.0 31.4993 12.9803 5.88153 -19.6043 5.55502 3.93116 -14.3486 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999654 -0.013428 -0.022621) (0.015734 0.994341 0.105066) (0.021082 -0.105385 0.994208)) pos #f(126.196 -29.6007 471.945)) :zmp #f(199.994 0.023078 0.0) :wrench-list ((#f(-33.3257 -0.350041 313.876) #f(-33.3404 -0.350041 314.002) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.604017 1.88239 0.069825) #f(0.604017 1.8878 0.069825) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.732 :angle-vector #f(-2.06284 11.4909 -56.4094 105.714 -47.6921 -5.65099 0.0 -1.99422 10.3243 -57.5778 107.294 -48.1554 -4.48351 0.0 3.37324 2.07034 -0.706111 -4.71855 30.8379 -12.7448 -2.59891 -16.4489 -6.46047 -5.50938 -11.1149 15.0 30.6612 12.7556 5.50146 -19.9312 4.76641 3.4856 -13.9269 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999602 -0.012558 -0.025248) (0.015078 0.994644 0.10225) (0.023829 -0.10259 0.994438)) pos #f(127.149 -28.6917 466.524)) :zmp #f(199.993 0.023399 0.0) :wrench-list ((#f(-34.108 -0.372991 325.978) #f(-34.1233 -0.372991 326.112) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.635965 2.2241 0.072675) #f(0.635965 2.22962 0.072675) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.736 :angle-vector #f(-1.99011 11.2283 -56.8521 107.27 -48.6467 -5.55687 0.0 -1.92228 10.0709 -57.9644 108.77 -49.0867 -4.39809 0.0 3.57028 2.06296 -0.38208 -4.67708 29.9736 -12.6493 -2.7839 -16.7428 -5.30762 -4.95705 -10.7122 15.0 29.8115 12.5369 5.12773 -20.2495 4.00192 3.05165 -13.514 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999539 -0.01171 -0.028015) (0.01444 0.994948 0.099346) (0.02671 -0.099705 0.994658)) pos #f(128.09 -27.7695 461.13)) :zmp #f(199.992 0.023698 0.0) :wrench-list ((#f(-34.8496 -0.395899 338.033) #f(-34.8655 -0.395899 338.173) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.667883 2.58154 0.075453) #f(0.667883 2.58716 0.075453) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.74 :angle-vector #f(-1.91661 10.9533 -57.2783 108.794 -49.5791 -5.45484 0.0 -1.84997 9.80885 -58.3352 110.217 -49.9965 -4.30851 0.0 3.75349 2.05642 -0.071864 -4.62609 29.0971 -12.5448 -2.95304 -17.0386 -4.19562 -4.4181 -10.3252 15.0 28.9506 12.3248 4.76128 -20.5589 3.2635 2.63036 -13.111 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999462 -0.010888 -0.030925) (0.013823 0.995251 0.096359) (0.029729 -0.096734 0.994866)) pos #f(129.019 -26.8359 455.765)) :zmp #f(199.992 0.023977 0.0) :wrench-list ((#f(-35.5483 -0.418652 350.014) #f(-35.5647 -0.418652 350.161) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.699659 2.95419 0.078147) #f(0.699659 2.95992 0.078147) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.744 :angle-vector #f(-1.84257 10.6662 -57.6877 110.286 -50.4885 -5.34501 0.0 -1.77753 9.53847 -58.6901 111.632 -50.8838 -4.21492 0.0 3.92258 2.05065 0.223795 -4.56548 28.209 -12.4317 -3.10581 -17.336 -3.12716 -3.89376 -9.95485 15.0 28.0792 12.1196 4.40298 -20.8592 2.55293 2.22271 -12.7191 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999372 -0.010096 -0.033978) (0.013229 0.995551 0.093293) (0.032885 -0.093684 0.995059)) pos #f(129.938 -25.8925 450.431)) :zmp #f(199.991 0.024236 0.0) :wrench-list ((#f(-36.2018 -0.441132 361.898) #f(-36.2187 -0.441132 362.051) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.731182 3.3415 0.080744) #f(0.731182 3.34733 0.080744) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.748 :angle-vector #f(-1.76821 10.3677 -58.0804 111.745 -51.3739 -5.22755 0.0 -1.70518 9.26025 -59.0291 113.016 -51.7477 -4.11749 0.0 4.07731 2.04559 0.504233 -4.49521 27.3101 -12.3102 -3.24177 -17.6349 -2.10466 -3.38518 -9.60212 15.0 27.198 11.9216 4.05363 -21.1501 1.87182 1.82957 -12.3393 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999265 -0.009337 -0.037176) (0.012659 0.995847 0.090154) (0.03618 -0.090558 0.995234)) pos #f(130.846 -24.9409 445.129)) :zmp #f(199.99 0.024475 0.0) :wrench-list ((#f(-36.808 -0.463216 373.658) #f(-36.8255 -0.463216 373.818) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.762335 3.74287 0.083234) #f(0.762335 3.74879 0.083234) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.752 :angle-vector #f(-1.69375 10.058 -58.456 113.169 -52.2345 -5.10261 0.0 -1.63314 8.97464 -59.3521 114.367 -52.5875 -4.01638 0.0 4.21748 2.04118 0.768864 -4.41527 26.401 -12.1803 -3.36055 -17.9351 -1.13027 -2.8934 -9.26785 15.0 26.3077 11.7313 3.71397 -21.4315 1.22162 1.45175 -11.9725 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999142 -0.008614 -0.040519) (0.012114 0.996139 0.086947) (0.039613 -0.087363 0.995389)) pos #f(131.743 -23.9828 439.861)) :zmp #f(199.989 0.024694 0.0) :wrench-list ((#f(-37.3648 -0.484779 385.27) #f(-37.3828 -0.484779 385.436) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.793003 4.15766 0.085603) #f(0.793003 4.16367 0.085603) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.756 :angle-vector #f(-1.61939 9.73782 -58.8147 114.558 -53.0695 -4.97038 0.0 -1.56161 8.68213 -59.6592 115.685 -53.4023 -3.91177 0.0 4.34298 2.03734 1.01718 -4.3257 25.4825 -12.0425 -3.46186 -18.2363 -0.205902 -2.41936 -8.95277 15.0 25.409 11.5488 3.38467 -21.7033 0.603603 1.08995 -11.6195 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.999 -0.007929 -0.044005) (0.011595 0.996426 0.083676) (0.043184 -0.084103 0.995521)) pos #f(132.63 -23.0196 434.629)) :zmp #f(199.988 0.024892 0.0) :wrench-list ((#f(-37.8704 -0.505694 396.707) #f(-37.8888 -0.505694 396.88) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.823067 4.58519 0.08784) #f(0.823067 4.59128 0.08784) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.76 :angle-vector #f(-1.54533 9.40753 -59.1563 115.911 -53.8782 -4.83107 0.0 -1.49078 8.38321 -59.9504 116.969 -54.1916 -3.80384 0.0 4.45371 2.03403 1.24876 -4.22658 24.5554 -11.897 -3.54549 -18.5385 0.666792 -1.96392 -8.65749 15.0 24.5027 11.3745 3.06634 -21.9651 0.018888 0.744794 -11.2811 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998838 -0.007286 -0.047634) (0.011102 0.996705 0.080349) (0.046892 -0.080784 0.995628)) pos #f(133.507 -22.0528 429.433)) :zmp #f(199.988 0.02507 0.0) :wrench-list ((#f(-38.3229 -0.525837 407.946) #f(-38.3418 -0.525837 408.124) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.852413 5.02473 0.089934) #f(0.852413 5.03091 0.089934) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.764 :angle-vector #f(-1.47173 9.06771 -59.4809 117.227 -54.6602 -4.68492 0.0 -1.42084 8.07838 -60.226 118.219 -54.9547 -3.69278 0.0 4.54965 2.03119 1.46325 -4.118 23.6206 -11.7441 -3.61132 -18.8412 1.48642 -1.52779 -8.38255 15.0 23.5897 11.2085 2.75953 -22.2171 -0.531584 0.416837 -10.9579 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998656 -0.006685 -0.051403) (0.010635 0.996977 0.076969) (0.050733 -0.077412 0.995708)) pos #f(134.373 -21.0839 424.277)) :zmp #f(199.987 0.025229 0.0) :wrench-list ((#f(-38.7207 -0.545095 418.961) #f(-38.74 -0.545095 419.145) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.880935 5.47555 0.091876) #f(0.880935 5.4818 0.091876) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.768 :angle-vector #f(-1.39878 8.71894 -59.7886 118.507 -55.4149 -4.53218 0.0 -1.35194 7.76815 -60.4859 119.433 -55.6913 -3.57879 0.0 4.63081 2.02876 1.66037 -4.00012 22.679 -11.584 -3.65928 -19.1444 2.25184 -1.11165 -8.12838 15.0 22.6707 11.051 2.46472 -22.4591 -1.04703 0.106531 -10.6506 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99845 -0.006128 -0.055309) (0.010195 0.99724 0.073543) (0.054706 -0.073992 0.995757)) pos #f(135.228 -20.1142 419.16)) :zmp #f(199.986 0.025368 0.0) :wrench-list ((#f(-39.0625 -0.56336 429.729) #f(-39.0822 -0.56336 429.92) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.908534 5.93685 0.093655) #f(0.908534 5.94318 0.093655) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.772 :angle-vector #f(-1.32663 8.36181 -60.0793 119.748 -56.142 -4.37312 0.0 -1.28424 7.45307 -60.7303 120.613 -56.4009 -3.46208 0.0 4.69727 2.0267 1.83995 -3.87313 21.7315 -11.4173 -3.68939 -19.4478 2.96218 -0.71601 -7.89529 15.0 21.7468 10.9022 2.18233 -22.691 -1.52685 -0.185748 -10.3595 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.998222 -0.005618 -0.059348) (0.00978 0.997494 0.070076) (0.058806 -0.070532 0.995775)) pos #f(136.074 -19.1451 414.086)) :zmp #f(199.985 0.025489 0.0) :wrench-list ((#f(-39.3471 -0.580535 440.229) #f(-39.3671 -0.580535 440.425) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.935116 6.40781 0.095264) #f(0.935116 6.41421 0.095264) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.776 :angle-vector #f(-1.25543 7.99695 -60.3532 120.952 -56.8411 -4.20803 0.0 -1.2179 7.13366 -60.9594 121.756 -57.0832 -3.34286 0.0 4.74915 2.02496 2.00185 -3.73726 20.7791 -11.2441 -3.70176 -19.751 3.61681 -0.341332 -7.68352 15.0 20.8187 10.7621 1.91269 -22.9128 -1.9706 -0.459711 -10.0852 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997968 -0.005154 -0.063515) (0.00939 0.997737 0.066575) (0.063028 -0.067036 0.995758)) pos #f(136.909 -18.1778 409.055)) :zmp #f(199.985 0.02559 0.0) :wrench-list ((#f(-39.5736 -0.596529 450.437) #f(-39.5939 -0.596529 450.638) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.960594 6.88757 0.096696) #f(0.960594 6.89404 0.096696) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.78 :angle-vector #f(-1.18532 7.62501 -60.6105 122.117 -57.512 -4.03724 0.0 -1.15303 6.8105 -61.1734 122.863 -57.7381 -3.22137 0.0 4.78664 2.0235 2.14606 -3.59277 19.8228 -11.0649 -3.69656 -20.0539 4.21536 0.012047 -7.49318 15.0 19.8876 10.6308 1.65611 -23.1246 -2.37799 -0.715154 -9.8278 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997687 -0.004738 -0.067805) (0.009024 0.99797 0.063045) (0.067369 -0.063511 0.995705)) pos #f(137.734 -17.2138 404.069)) :zmp #f(199.984 0.025674 0.0) :wrench-list ((#f(-39.741 -0.611258 460.334) #f(-39.7615 -0.611258 460.54) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.984889 7.37524 0.097944) #f(0.984889 7.38178 0.097944) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.784 :angle-vector #f(-1.11643 7.24665 -60.8514 123.244 -58.1546 -3.86109 0.0 -1.08975 6.48416 -61.3725 123.935 -58.3653 -3.09782 0.0 4.80995 2.02227 2.27261 -3.43996 18.8638 -10.8801 -3.67404 -20.3562 4.75772 0.343884 -7.32431 15.0 18.9545 10.5083 1.41281 -23.3263 -2.74892 -0.951957 -9.58767 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99738 -0.004369 -0.072212) (0.00868 0.998191 0.059493) (0.071821 -0.059964 0.995613)) pos #f(138.549 -16.2541 399.13)) :zmp #f(199.983 0.025741 0.0) :wrench-list ((#f(-39.8488 -0.624648 469.898) #f(-39.8696 -0.624648 470.109) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.00793 7.86991 0.099003) #f(1.00793 7.87651 0.099003) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.788 :angle-vector #f(-1.04887 6.8626 -61.0761 124.331 -58.7687 -3.67992 0.0 -1.02819 6.15521 -61.557 124.969 -58.9648 -2.97247 0.0 4.81938 2.02125 2.38163 -3.27918 17.903 -10.6901 -3.63455 -20.6575 5.24402 0.654036 -7.1768 15.0 18.0203 10.3946 1.18293 -23.5181 -3.08345 -1.17008 -9.36491 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.997044 -0.004049 -0.076727) (0.008358 0.9984 0.055925) (0.076378 -0.056401 0.995482)) pos #f(139.354 -15.3001 394.241)) :zmp #f(199.983 0.02579 0.0) :wrench-list ((#f(-39.8966 -0.636631 479.111) #f(-39.9176 -0.636631 479.327) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.02964 8.37059 0.099869) #f(1.02964 8.37726 0.099869) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.792 :angle-vector #f(-0.982752 6.47356 -61.2848 125.38 -59.3546 -3.49414 0.0 -0.968424 5.82427 -61.7272 125.967 -59.5367 -2.84557 0.0 4.81526 2.0204 2.47332 -3.11081 16.9417 -10.4953 -3.57849 -20.9576 5.67468 0.94246 -7.0505 15.0 17.0862 10.2896 0.966576 -23.7 -3.38181 -1.36959 -9.15956 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996679 -0.003777 -0.081344) (0.008057 0.998596 0.052348) (0.081032 -0.052829 0.99531)) pos #f(140.147 -14.3527 389.402)) :zmp #f(199.982 0.025823 0.0) :wrench-list ((#f(-39.8842 -0.647149 487.954) #f(-39.9053 -0.647149 488.174) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.04997 8.87631 0.100538) #f(1.04997 8.88304 0.100538) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.796 :angle-vector #f(-0.918168 6.08031 -61.4779 126.39 -59.9122 -3.30413 0.0 -0.910546 5.49193 -61.8835 126.929 -60.081 -2.71736 0.0 4.79796 2.01968 2.54796 -2.93527 15.981 -10.2962 -3.50634 -21.2561 6.05034 1.20921 -6.94511 15.0 16.1534 10.1934 0.763774 -23.872 -3.64438 -1.55059 -8.9716 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.996284 -0.003552 -0.086054) (0.007773 0.99878 0.048768) (0.085776 -0.049256 0.995096)) pos #f(140.93 -13.4132 384.617)) :zmp #f(199.981 0.025841 0.0) :wrench-list ((#f(-39.8116 -0.656151 496.409) #f(-39.8328 -0.656151 496.633) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.06887 9.38603 0.101007) #f(1.06887 9.39281 0.101007) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.8 :angle-vector #f(-0.855203 5.68362 -61.6557 127.361 -60.4419 -3.11033 0.0 -0.854626 5.15883 -62.026 127.854 -60.598 -2.58811 0.0 4.76793 2.01907 2.60591 -2.75302 15.0223 -10.0933 -3.41867 -21.5528 6.37192 1.45446 -6.86026 15.0 15.223 10.1057 0.574488 -24.0345 -3.87172 -1.71333 -8.80088 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995859 -0.003374 -0.090848) (0.007507 0.99895 0.045192) (0.0906 -0.045687 0.994839)) pos #f(141.703 -12.4827 379.887)) :zmp #f(199.98 0.025843 0.0) :wrench-list ((#f(-39.6789 -0.663592 504.46) #f(-39.7002 -0.663592 504.687) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.08628 9.89868 0.101276) #f(1.08628 9.90552 0.101276) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.804 :angle-vector #f(-0.793931 5.2843 -61.8186 128.294 -60.9438 -2.91318 0.0 -0.800725 4.8256 -62.1554 128.743 -61.0879 -2.45811 0.0 4.72566 2.01854 2.64761 -2.56456 14.0668 -9.88712 -3.31614 -21.8473 6.64059 1.67844 -6.79545 15.0 14.2962 10.0263 0.398617 -24.1875 -4.06456 -1.85809 -8.64721 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.995404 -0.00324 -0.095715) (0.007255 0.999107 0.041626) (0.095494 -0.042129 0.994538)) pos #f(142.464 -11.5622 375.216)) :zmp #f(199.98 0.025831 0.0) :wrench-list ((#f(-39.4866 -0.669438 512.089) #f(-39.5079 -0.669438 512.32) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.10217 10.4132 0.101342) #f(1.10217 10.4201 0.101342) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.808 :angle-vector #f(-0.734415 4.88319 -61.9669 129.188 -61.4183 -2.71315 0.0 -0.748892 4.49291 -62.2718 129.596 -61.5512 -2.32762 0.0 4.67169 2.01807 2.67357 -2.37042 13.1158 -9.67811 -3.19944 -22.1392 6.85777 1.88153 -6.75011 15.0 13.3743 9.95516 0.235994 -24.3312 -4.2238 -1.98526 -8.51028 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.994918 -0.003151 -0.100644) (0.007017 0.99925 0.038078) (0.100448 -0.038591 0.994194)) pos #f(143.213 -10.6529 370.606)) :zmp #f(199.979 0.025804 0.0) :wrench-list ((#f(-39.2352 -0.67366 519.281) #f(-39.2564 -0.67366 519.515) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.1165 10.9284 0.101207) #f(1.1165 10.9353 0.101207) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.812 :angle-vector #f(-0.676708 4.48114 -62.1012 130.043 -61.866 -2.51073 0.0 -0.699162 4.16141 -62.3759 130.414 -61.9882 -2.19695 0.0 4.6066 2.01764 2.68439 -2.17117 12.1707 -9.46685 -3.06939 -22.4282 7.02514 2.06418 -6.72355 15.0 12.4587 9.89194 0.08639 -24.4659 -4.35049 -2.09533 -8.38971 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.994401 -0.003104 -0.105623) (0.00679 0.99938 0.034555) (0.10545 -0.035079 0.993806)) pos #f(143.951 -9.75566 366.059)) :zmp #f(199.978 0.025765 0.0) :wrench-list ((#f(-38.9255 -0.67624 526.023) #f(-38.9466 -0.67624 526.259) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.12925 11.4431 0.100872) #f(1.12925 11.4501 0.100872) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.816 :angle-vector #f(-0.620851 4.07905 -62.2219 130.862 -62.2874 -2.30642 0.0 -0.651562 3.83178 -62.468 131.195 -62.3996 -2.06638 0.0 4.53105 2.01724 2.68075 -1.96744 11.2329 -9.25389 -2.92686 -22.714 7.14464 2.22694 -6.71498 15.0 11.5505 9.8364 -0.05049 -24.5918 -4.44586 -2.18884 -8.28503 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993856 -0.003096 -0.110641) (0.006572 0.999496 0.031064) (0.110489 -0.0316 0.993375)) pos #f(144.676 -8.87167 361.58)) :zmp #f(199.978 0.025712 0.0) :wrench-list ((#f(-38.5584 -0.677165 532.299) #f(-38.5794 -0.677165 532.538) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.14039 11.9561 0.100339) #f(1.14039 11.9632 0.100339) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.82 :angle-vector #f(-0.566876 3.67782 -62.3296 131.643 -62.6831 -2.10077 0.0 -0.606104 3.50473 -62.5487 131.942 -62.7859 -1.93623 0.0 4.44574 2.01686 2.66339 -1.75988 10.3039 -9.03981 -2.77281 -22.9961 7.21846 2.37048 -6.72351 15.0 10.6513 9.78822 -0.175005 -24.7092 -4.51131 -2.26644 -8.19567 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.993281 -0.003126 -0.115683) (0.006362 0.999598 0.027612) (0.11555 -0.028162 0.992902)) pos #f(145.389 -8.00194 357.172)) :zmp #f(199.977 0.025648 0.0) :wrench-list ((#f(-38.1351 -0.676432 538.097) #f(-38.156 -0.676432 538.338) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.14992 12.4663 0.099611) #f(1.14992 12.4733 0.099611) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.824 :angle-vector #f(-0.514801 3.2784 -62.4248 132.387 -63.0539 -1.89432 0.0 -0.562789 3.18094 -62.6184 132.655 -63.1478 -1.80681 0.0 4.35141 2.01647 2.63315 -1.54917 9.38513 -8.82523 -2.60825 -23.2741 7.24905 2.49555 -6.74816 15.0 9.76236 9.74704 -0.287579 -24.8184 -4.5484 -2.32885 -8.12099 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.99268 -0.003191 -0.120736) (0.006158 0.999688 0.024206) (0.120621 -0.024772 0.992389)) pos #f(146.088 -7.14753 352.838)) :zmp #f(199.976 0.025571 0.0) :wrench-list ((#f(-37.6568 -0.674044 543.406) #f(-37.6775 -0.674044 543.648) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.15782 12.9723 0.098691) #f(1.15782 12.9794 0.098691) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.828 :angle-vector #f(-0.464638 2.88176 -62.508 133.095 -63.4004 -1.68765 0.0 -0.521606 2.86116 -62.6778 133.333 -63.4861 -1.67844 0.0 4.24885 2.01608 2.59094 -1.33605 8.47823 -8.61075 -2.43432 -23.5478 7.23912 2.603 -6.78783 15.0 8.88523 9.7125 -0.388701 -24.9197 -4.55885 -2.37688 -8.06027 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.992052 -0.003288 -0.125785) (0.005957 0.999765 0.020853) (0.125687 -0.021437 0.991838)) pos #f(146.774 -6.30951 348.583)) :zmp #f(199.975 0.025484 0.0) :wrench-list ((#f(-37.1251 -0.670013 548.214) #f(-37.1455 -0.670013 548.458) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.16409 13.473 0.097584) #f(1.16409 13.4802 0.097584) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.832 :angle-vector #f(-0.416384 2.48888 -62.58 133.768 -63.7238 -1.48136 0.0 -0.482534 2.5461 -62.7273 133.978 -63.8017 -1.55145 0.0 4.13894 2.01568 2.53774 -1.12128 7.58473 -8.39703 -2.25217 -23.8166 7.19163 2.6938 -6.84133 15.0 8.02138 9.68417 -0.478923 -25.0134 -4.54457 -2.41143 -8.01266 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.991401 -0.003413 -0.130815) (0.005759 0.999829 0.017562) (0.130733 -0.018165 0.991251)) pos #f(147.444 -5.48898 344.411)) :zmp #f(199.975 0.025387 0.0) :wrench-list ((#f(-36.5414 -0.664359 552.511) #f(-36.5616 -0.664359 552.756) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.16872 13.9671 0.096294) #f(1.16872 13.9744 0.096294) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.836 :angle-vector #f(-0.370028 2.10079 -62.6414 134.407 -64.0248 -1.27607 0.0 -0.445538 2.23653 -62.7677 134.591 -64.0956 -1.42618 0.0 4.02256 2.01527 2.47463 -0.905678 6.70629 -8.18473 -2.0631 -24.0801 7.10979 2.769 -6.90738 15.0 7.17234 9.66158 -0.558863 -25.1001 -4.50762 -2.43347 -7.97728 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990729 -0.003563 -0.13581) (0.005561 0.999882 0.01434) (0.135742 -0.014962 0.990631)) pos #f(148.1 -4.68705 340.327)) :zmp #f(199.974 0.025279 0.0) :wrench-list ((#f(-35.9075 -0.657111 556.289) #f(-35.9274 -0.657111 556.535) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.17174 14.4535 0.094827) #f(1.17174 14.4608 0.094827) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.84 :angle-vector #f(-0.325551 1.71851 -62.6929 135.012 -64.3046 -1.07239 0.0 -0.410574 1.93317 -62.7996 135.172 -64.3688 -1.30297 0.0 3.90066 2.01486 2.40272 -0.690057 5.84453 -7.97451 -1.86838 -24.338 6.99696 2.82972 -6.98462 15.0 6.33965 9.64427 -0.629177 -25.18 -4.45014 -2.44404 -7.95316 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.990038 -0.003734 -0.140752) (0.005362 0.999923 0.011193) (0.140699 -0.011836 0.989982)) pos #f(148.739 -3.90485 336.335)) :zmp #f(199.973 0.025162 0.0) :wrench-list ((#f(-35.2253 -0.648302 559.541) #f(-35.2449 -0.648302 559.787) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.17314 14.931 0.093189) #f(1.17314 14.9383 0.093189) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.844 :angle-vector #f(-0.282929 1.34302 -62.7351 135.585 -64.5642 -0.870927 0.0 -0.377599 1.63675 -62.8234 135.722 -64.6222 -1.18215 0.0 3.77413 2.01443 2.32308 -0.475214 5.001 -7.76701 -1.66929 -24.5898 6.85644 2.87706 -7.07174 15.0 5.52477 9.63176 -0.690514 -25.2536 -4.37426 -2.44415 -7.93936 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.989332 -0.003922 -0.145627) (0.005161 0.999954 0.008129) (0.145588 -0.008793 0.989306)) pos #f(149.361 -3.1435 332.441)) :zmp #f(199.973 0.025036 0.0) :wrench-list ((#f(-34.4968 -0.637978 562.26) #f(-34.516 -0.637978 562.506) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.17294 15.3983 0.091387) #f(1.17294 15.4057 0.091387) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.848 :angle-vector #f(-0.242139 0.975232 -62.7688 136.125 -64.8046 -0.672251 0.0 -0.346567 1.34792 -62.84 136.242 -64.8569 -1.06402 0.0 3.64383 2.014 2.23676 -0.261902 4.17717 -7.56284 -1.46703 -24.8351 6.69136 2.91207 -7.16747 15.0 4.72906 9.62359 -0.743498 -25.3213 -4.28199 -2.43475 -7.93497 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.988614 -0.004124 -0.150419) (0.004956 0.999974 0.005154) (0.150393 -0.005841 0.988609)) pos #f(149.965 -2.40409 328.649)) :zmp #f(199.972 0.024902 0.0) :wrench-list ((#f(-33.7241 -0.626189 564.44) #f(-33.7429 -0.626189 564.685) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.17117 15.8543 0.089427) #f(1.17117 15.8618 0.089427) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.852 :angle-vector #f(-0.203158 0.616014 -62.7944 136.635 -65.0267 -0.476894 0.0 -0.317434 1.06731 -62.8498 136.733 -65.0737 -0.948868 0.0 3.5106 2.01356 2.14475 -0.050836 3.37439 -7.36257 -1.26276 -25.0736 6.50478 2.93578 -7.27061 15.0 3.95381 9.61933 -0.788738 -25.3834 -4.17529 -2.4168 -7.93912 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987887 -0.004336 -0.155114) (0.004747 0.999986 0.002274) (0.155102 -0.002983 0.987894)) pos #f(150.55 -1.68767 324.964)) :zmp #f(199.971 0.024759 0.0) :wrench-list ((#f(-32.9097 -0.612995 566.077) #f(-32.928 -0.612995 566.322) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.16785 16.2978 0.087319) #f(1.16785 16.3053 0.087319) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.856 :angle-vector #f(-0.165958 0.266175 -62.8128 137.115 -65.2316 -0.28536 0.0 -0.290153 0.795498 -62.8533 137.195 -65.2737 -0.83696 0.0 3.37522 2.01312 2.04801 0.157311 2.59393 -7.16674 -1.05756 -25.3051 6.29958 2.94917 -7.37999 15.0 3.20018 9.61858 -0.826817 -25.4403 -4.05602 -2.39119 -7.95097 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.987155 -0.004556 -0.1597) (0.004534 0.99999 -0.000505) (0.1597 -0.000226 0.987165)) pos #f(151.116 -0.995281 321.39)) :zmp #f(199.971 0.024608 0.0) :wrench-list ((#f(-32.0558 -0.598462 567.168) #f(-32.0736 -0.598462 567.412) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.16301 16.7276 0.08507) #f(1.16301 16.7351 0.08507) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.86 :angle-vector #f(-0.130514 -0.073532 -62.8243 137.565 -65.42 -0.098119 0.0 -0.264681 0.533024 -62.8511 137.629 -65.4576 -0.728546 0.0 3.23845 2.01268 1.94744 0.361904 1.83694 -6.97584 -0.852483 -25.5291 6.07855 2.95319 -7.49451 15.0 2.46928 9.62091 -0.858302 -25.4923 -3.92597 -2.35877 -7.96971 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.986421 -0.00478 -0.164164) (0.004317 0.999986 -0.003178) (0.164177 0.002426 0.986428)) pos #f(151.662 -0.327915 317.933)) :zmp #f(199.97 0.024451 0.0) :wrench-list ((#f(-31.1651 -0.582667 567.71) #f(-31.1825 -0.582667 567.953) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.15669 17.1426 0.08269) #f(1.15669 17.1501 0.08269) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.864 :angle-vector #f(-0.096796 -0.40241 -62.8297 137.987 -65.593 0.084388 0.0 -0.24097 0.280379 -62.8438 138.036 -65.6265 -0.623856 0.0 3.10099 2.01224 1.84391 0.562346 1.10448 -6.79035 -0.648498 -25.7454 5.84435 2.94875 -7.61311 15.0 1.76208 9.62595 -0.883736 -25.5399 -3.78685 -2.32038 -7.99456 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.98569 -0.005006 -0.168495) (0.004097 0.999975 -0.005742) (0.168519 0.004969 0.985686)) pos #f(152.187 0.313466 314.595)) :zmp #f(199.969 0.024287 0.0) :wrench-list ((#f(-30.2404 -0.565691 567.703) #f(-30.2573 -0.565691 567.944) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.14893 17.5415 0.080189) #f(1.14893 17.5491 0.080189) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.868 :angle-vector #f(-0.064776 -0.719819 -62.8294 138.382 -65.7514 0.261755 0.0 -0.218974 0.038016 -62.8317 138.417 -65.7811 -0.523104 0.0 2.96351 2.01179 1.73825 0.758084 0.397538 -6.6107 -0.446534 -25.9539 5.59949 2.93673 -7.73479 15.0 1.07951 9.63334 -0.903643 -25.5832 -3.64028 -2.2768 -8.02478 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984964 -0.00523 -0.172682) (0.003874 0.999959 -0.008191) (0.172718 0.007399 0.984943)) pos #f(152.69 0.927945 311.381)) :zmp #f(199.968 0.024116 0.0) :wrench-list ((#f(-29.2846 -0.547627 567.147) #f(-29.3009 -0.547627 567.386) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.13978 17.9233 0.077576) #f(1.13978 17.9308 0.077576) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.872 :angle-vector #f(-0.034423 -1.02517 -62.824 138.75 -65.896 0.433606 0.0 -0.198647 -0.193659 -62.8155 138.772 -65.9223 -0.426481 0.0 2.82666 2.01135 1.63122 0.948601 -0.283035 -6.43729 -0.247461 -26.1542 5.34637 2.91797 -7.85859 15.0 0.422359 9.64271 -0.918526 -25.6227 -3.48781 -2.2288 -8.05967 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.984247 -0.005451 -0.176717) (0.003648 0.999938 -0.010523) (0.176763 0.009713 0.984205)) pos #f(153.17 1.51465 308.294)) :zmp #f(199.968 0.023941 0.0) :wrench-list ((#f(-28.3007 -0.528572 566.041) #f(-28.3164 -0.528572 566.278) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.12928 18.2866 0.074864) #f(1.12928 18.2942 0.074864) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.876 :angle-vector #f(-0.005705 -1.31794 -62.8139 139.092 -66.0276 0.599598 0.0 -0.179942 -0.414279 -62.7955 139.102 -66.0508 -0.334162 0.0 2.69102 2.01091 1.52357 1.13342 -0.936464 -6.27047 -0.05209 -26.3462 5.08728 2.89326 -7.98363 15.0 -0.208648 9.65374 -0.928867 -25.6586 -3.3309 -2.17708 -8.09855 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.983542 -0.005665 -0.18059) (0.003421 0.999913 -0.012735) (0.180646 0.011908 0.983476)) pos #f(153.628 2.07278 305.337)) :zmp #f(199.967 0.02376 0.0) :wrench-list ((#f(-27.2918 -0.508633 564.39) #f(-27.3069 -0.508633 564.624) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.11749 18.6305 0.072063) #f(1.11749 18.6381 0.072063) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.88 :angle-vector #f(0.021411 -1.59766 -62.7997 139.41 -66.1472 0.759419 0.0 -0.162813 -0.623523 -62.7721 139.409 -66.1675 -0.246303 0.0 2.55716 2.01047 1.416 1.31211 -1.56208 -6.11058 0.13882 -26.5298 4.82435 2.86336 -8.10905 15.0 -0.812889 9.66612 -0.935128 -25.6912 -3.17094 -2.12232 -8.14078 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982854 -0.005871 -0.184294) (0.003193 0.999885 -0.014824) (0.18436 0.013981 0.982759)) pos #f(154.062 2.60157 302.514)) :zmp #f(199.966 0.023574 0.0) :wrench-list ((#f(-26.2613 -0.487924 562.195) #f(-26.2759 -0.487924 562.426) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.10448 18.9538 0.069186) #f(1.10448 18.9614 0.069186) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.884 :angle-vector #f(0.046959 -1.8639 -62.7818 139.703 -66.2553 0.91279 0.0 -0.147213 -0.821112 -62.7458 139.692 -66.273 -0.16304 0.0 2.42559 2.01004 1.30914 1.48427 -2.1593 -5.95792 0.324572 -26.7048 4.5596 2.829 -8.23406 15.0 -1.38983 9.67954 -0.937749 -25.7208 -3.00923 -2.06517 -8.18575 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.982185 -0.006067 -0.187821) (0.002966 0.999855 -0.016787) (0.187896 0.015931 0.98206)) pos #f(154.473 3.10035 299.826)) :zmp #f(199.966 0.023385 0.0) :wrench-list ((#f(-25.2126 -0.466561 559.46) #f(-25.2265 -0.466561 559.689) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.09031 19.2553 0.066246) #f(1.09031 19.2629 0.066246) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.888 :angle-vector #f(0.070974 -2.1163 -62.7607 139.973 -66.3528 1.05946 0.0 -0.133092 -1.00681 -62.7169 139.953 -66.3682 -0.084491 0.0 2.2968 2.0096 1.2036 1.64953 -2.72766 -5.81274 0.50452 -26.8711 4.29493 2.79088 -8.35791 15.0 -1.93904 9.69372 -0.937152 -25.7477 -2.847 -2.00624 -8.23289 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.981538 -0.006251 -0.191166) (0.00274 0.999823 -0.018624) (0.191249 0.017756 0.981381)) pos #f(154.859 3.5685 297.277)) :zmp #f(199.965 0.023192 0.0) :wrench-list ((#f(-24.149 -0.444658 556.191) #f(-24.1623 -0.444658 556.417) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.07504 19.534 0.063254) #f(1.07504 19.5416 0.063254) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.892 :angle-vector #f(0.093492 -2.35456 -62.7367 140.22 -66.4405 1.19922 0.0 -0.120405 -1.18042 -62.6859 140.192 -66.4538 -0.010757 0.0 2.17122 2.00918 1.09994 1.8076 -3.26678 -5.67527 0.678077 -27.0287 4.03211 2.74963 -8.47992 15.0 -2.46018 9.7084 -0.933737 -25.7721 -2.68539 -1.94609 -8.28166 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980916 -0.006421 -0.194324) (0.002516 0.99979 -0.020333) (0.194414 0.019456 0.980727)) pos #f(155.22 4.00551 294.866)) :zmp #f(199.964 0.022997 0.0) :wrench-list ((#f(-23.0737 -0.422327 552.395) #f(-23.0863 -0.422327 552.616) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.05873 19.7891 0.060223) #f(1.05873 19.7966 0.060223) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.896 :angle-vector #f(0.114552 -2.57843 -62.7102 140.446 -66.5189 1.33188 0.0 -0.109103 -1.3418 -62.6531 140.41 -66.5303 0.058083 0.0 2.04927 2.00876 0.998696 1.95818 -3.77637 -5.54571 0.844712 -27.1774 3.77277 2.70587 -8.59945 15.0 -2.95298 9.72332 -0.927882 -25.7943 -2.52547 -1.88527 -8.33154 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.980323 -0.006575 -0.19729) (0.002296 0.999757 -0.021912) (0.197386 0.021028 0.9801)) pos #f(155.555 4.41092 292.597)) :zmp #f(199.963 0.022799 0.0) :wrench-list ((#f(-21.99 -0.399679 548.076) #f(-22.002 -0.399679 548.294) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.04145 20.0194 0.057164) #f(1.04145 20.0269 0.057164) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.9 :angle-vector #f(0.134192 -2.78772 -62.6817 140.65 -66.5887 1.45729 0.0 -0.099138 -1.49083 -62.6188 140.608 -66.5985 0.121966 0.0 1.9313 2.00835 0.900325 2.10104 -4.25627 -5.4242 1.00395 -27.3173 3.51843 2.66019 -8.71591 15.0 -3.41729 9.73826 -0.919945 -25.8145 -2.36821 -1.82427 -8.38207 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979761 -0.006713 -0.20006) (0.002079 0.999725 -0.023363) (0.200162 0.022474 0.979505)) pos #f(155.866 4.78442 290.469)) :zmp #f(199.963 0.0226 0.0) :wrench-list ((#f(-20.9011 -0.376826 543.244) #f(-20.9124 -0.376826 543.459) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.02327 20.2243 0.05409) #f(1.02327 20.2318 0.05409) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.904 :angle-vector #f(0.152453 -2.98229 -62.6514 140.835 -66.6507 1.57533 0.0 -0.09046 -1.62746 -62.5833 140.786 -66.659 0.180848 0.0 1.81764 2.00794 0.805264 2.23599 -4.70637 -5.31088 1.15537 -27.4484 3.27047 2.61311 -8.82877 15.0 -3.85305 9.75301 -0.910266 -25.8329 -2.21452 -1.76355 -8.4328 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.979231 -0.006833 -0.202633) (0.001868 0.999694 -0.024685) (0.202739 0.023794 0.978944)) pos #f(156.151 5.12575 288.483)) :zmp #f(199.962 0.0224 0.0) :wrench-list ((#f(-19.8102 -0.353875 537.907) #f(-19.821 -0.353875 538.118) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(1.00425 20.403 0.051012) #f(1.00425 20.4104 0.051012) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.908 :angle-vector #f(0.169375 -3.16205 -62.6198 141.001 -66.7054 1.68591 0.0 -0.083023 -1.75165 -62.5469 140.946 -66.7124 0.234707 0.0 1.70858 2.00754 0.713902 2.36285 -5.12671 -5.20582 1.29862 -27.5707 3.03016 2.56514 -8.93755 15.0 -4.26028 9.76737 -0.89916 -25.8498 -2.06522 -1.70353 -8.48332 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978736 -0.006934 -0.205005) (0.001662 0.999664 -0.025878) (0.205116 0.024987 0.978419)) pos #f(156.41 5.43478 286.639)) :zmp #f(199.961 0.022199 0.0) :wrench-list ((#f(-18.7206 -0.330934 532.075) #f(-18.7307 -0.330934 532.281) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.984453 20.5547 0.047941) #f(0.984453 20.562 0.047941) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.912 :angle-vector #f(0.185001 -3.32698 -62.587 141.148 -66.7534 1.78898 0.0 -0.076776 -1.86344 -62.5099 141.087 -66.7592 0.283535 0.0 1.60438 2.00716 0.626583 2.48152 -5.51738 -5.10908 1.43338 -27.6842 2.79864 2.51675 -9.04182 15.0 -4.63911 9.78115 -0.886926 -25.8653 -1.92105 -1.64462 -8.53326 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.978278 -0.007015 -0.207177) (0.001462 0.999636 -0.026943) (0.207291 0.026055 0.977932)) pos #f(156.644 5.7115 284.936)) :zmp #f(199.961 0.021997 0.0) :wrench-list ((#f(-17.6353 -0.308109 525.758) #f(-17.6447 -0.308109 525.96) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.963953 20.6788 0.04489) #f(0.963953 20.6861 0.04489) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.916 :angle-vector #f(0.199375 -3.47711 -62.5535 141.277 -66.7952 1.88451 0.0 -0.071669 -1.96289 -62.4725 141.212 -66.8001 0.327346 0.0 1.50524 2.00678 0.543609 2.59191 -5.87861 -5.02069 1.5594 -27.7891 2.57691 2.46836 -9.1412 15.0 -4.98974 9.79419 -0.873838 -25.8797 -1.78267 -1.58715 -8.58228 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977858 -0.007075 -0.209148) (0.001269 0.99961 -0.027881) (0.209264 0.026999 0.977486)) pos #f(156.852 5.95601 283.372)) :zmp #f(199.96 0.021796 0.0) :wrench-list ((#f(-16.5575 -0.285505 518.967) #f(-16.5663 -0.285505 519.164) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.942815 20.7748 0.041869) #f(0.942815 20.7819 0.041869) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.92 :angle-vector #f(0.212541 -3.61253 -62.5194 141.39 -66.8315 1.97251 0.0 -0.067655 -2.0501 -62.435 141.32 -66.8355 0.366171 0.0 1.41133 2.00641 0.465238 2.69398 -6.2107 -4.94062 1.6765 -27.8854 2.36585 2.42036 -9.23536 15.0 -5.31248 9.80636 -0.860152 -25.893 -1.65067 -1.53145 -8.63007 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977478 -0.007114 -0.210918) (0.001083 0.999588 -0.028695) (0.211035 0.02782 0.977082)) pos #f(157.034 6.16852 281.947)) :zmp #f(199.959 0.021595 0.0) :wrench-list ((#f(-15.4902 -0.263224 511.715) #f(-15.4984 -0.263224 511.908) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.921108 20.8421 0.038889) #f(0.921108 20.8491 0.038889) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.924 :angle-vector #f(0.224546 -3.73338 -62.485 141.486 -66.8628 2.05301 0.0 -0.064682 -2.12523 -62.3975 141.412 -66.8661 0.400061 0.0 1.3228 2.00605 0.391685 2.78774 -6.51406 -4.86883 1.78453 -27.9733 2.16622 2.37312 -9.32404 15.0 -5.60774 9.81752 -0.846103 -25.9055 -1.52555 -1.47779 -8.67636 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977137 -0.007131 -0.212489) (0.000904 0.999568 -0.029386) (0.212607 0.028522 0.976721)) pos #f(157.192 6.34937 280.657)) :zmp #f(199.959 0.021396 0.0) :wrench-list ((#f(-14.4365 -0.241368 504.015) #f(-14.4441 -0.241368 504.204) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.898899 20.8803 0.035962) #f(0.898899 20.8872 0.035962) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.928 :angle-vector #f(0.235436 -3.83985 -62.4505 141.568 -66.8895 2.1261 0.0 -0.062701 -2.18846 -62.3603 141.489 -66.8921 0.429084 0.0 1.23973 2.0057 0.32312 2.87322 -6.78919 -4.80522 1.88342 -28.053 1.97864 2.32693 -9.407 15.0 -5.87599 9.82755 -0.831905 -25.9174 -1.40771 -1.42642 -8.7209 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976837 -0.007126 -0.213864) (0.000733 0.999551 -0.029956) (0.213981 0.029105 0.976404)) pos #f(157.325 6.49903 279.5)) :zmp #f(199.958 0.021199 0.0) :wrench-list ((#f(-13.3995 -0.220038 495.882) #f(-13.4064 -0.220038 496.066) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.876259 20.889 0.033099) #f(0.876259 20.8957 0.033099) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.932 :angle-vector #f(0.245261 -3.9322 -62.4161 141.634 -66.9121 2.19187 0.0 -0.061661 -2.24004 -62.3235 141.552 -66.9142 0.453329 0.0 1.16219 2.00536 0.259673 2.9505 -7.0367 -4.74969 1.97313 -28.1247 1.80363 2.28208 -9.4841 15.0 -6.11784 9.83638 -0.817751 -25.9287 -1.29752 -1.37754 -8.76349 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976578 -0.007098 -0.215045) (0.000569 0.999537 -0.030408) (0.215161 0.029574 0.976131)) pos #f(157.433 6.61809 278.472)) :zmp #f(199.957 0.021005 0.0) :wrench-list ((#f(-12.382 -0.199333 487.33) #f(-12.3884 -0.199333 487.509) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.853257 20.8678 0.030309) #f(0.853257 20.8745 0.030309) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.936 :angle-vector #f(0.254069 -4.01074 -62.382 141.687 -66.931 2.25046 0.0 -0.061512 -2.28024 -62.2873 141.601 -66.9326 0.472902 0.0 1.0902 2.00503 0.201426 3.0197 -7.25729 -4.70208 2.05371 -28.1885 1.64155 2.23882 -9.5552 15.0 -6.33395 9.84391 -0.803815 -25.9396 -1.19521 -1.33134 -8.80395 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97636 -0.007049 -0.216036) (0.000413 0.999527 -0.030746) (0.216151 0.02993 0.975901)) pos #f(157.518 6.70727 277.57)) :zmp #f(199.956 0.020814 0.0) :wrench-list ((#f(-11.3872 -0.179351 478.375) #f(-11.393 -0.179351 478.549) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.829963 20.8167 0.027604) #f(0.829963 20.8232 0.027604) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.94 :angle-vector #f(0.261912 -4.07583 -62.3484 141.727 -66.9467 2.30204 0.0 -0.062202 -2.30938 -62.2518 141.638 -66.948 0.487928 0.0 1.02373 2.00472 0.148422 3.08097 -7.45176 -4.6622 2.12524 -28.2447 1.49266 2.19735 -9.62024 15.0 -6.5251 9.85008 -0.790249 -25.9501 -1.10098 -1.28793 -8.84214 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976182 -0.006977 -0.216842) (0.000263 0.99952 -0.030973) (0.216954 0.030179 0.975715)) pos #f(157.58 6.76741 276.79)) :zmp #f(199.956 0.020626 0.0) :wrench-list ((#f(-10.4179 -0.160188 469.035) #f(-10.4231 -0.160188 469.204) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.806449 20.7352 0.024994) #f(0.806449 20.7416 0.024994) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.944 :angle-vector #f(0.268841 -4.12791 -62.3153 141.755 -66.9596 2.3468 0.0 -0.063682 -2.32784 -62.2171 141.662 -66.9605 0.498552 0.0 0.962731 2.00441 0.100657 3.13453 -7.62101 -4.62982 2.18785 -28.2936 1.35708 2.15782 -9.67921 15.0 -6.69215 9.85486 -0.777183 -25.9605 -1.01491 -1.24742 -8.87796 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976043 -0.006883 -0.217469) (0.000121 0.999516 -0.031093) (0.217578 0.030322 0.975572)) pos #f(157.62 6.79949 276.126)) :zmp #f(199.955 0.020444 0.0) :wrench-list ((#f(-9.47692 -0.141935 459.327) #f(-9.48165 -0.141935 459.491) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.782784 20.6235 0.022489) #f(0.782784 20.6297 0.022489) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.948 :angle-vector #f(0.27491 -4.16743 -62.283 141.771 -66.9699 2.38498 0.0 -0.065898 -2.33602 -62.1833 141.675 -66.9706 0.504936 0.0 0.907106 2.00412 0.058087 3.1806 -7.76603 -4.6047 2.24176 -28.3355 1.23481 2.12039 -9.73215 15.0 -6.83606 9.85822 -0.76473 -25.9709 -0.937037 -1.20987 -8.91132 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.975943 -0.006768 -0.217922) (-1.564782e-05 0.999516 -0.03111) (0.218027 0.030365 0.97547)) pos #f(157.638 6.8046 275.572)) :zmp #f(199.954 0.020267 0.0) :wrench-list ((#f(-8.56682 -0.12467 449.269) #f(-8.57104 -0.12467 449.428) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.759034 20.4814 0.020097) #f(0.759034 20.4875 0.020097) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.952 :angle-vector #f(0.280173 -4.19494 -62.2515 141.776 -66.9782 2.41684 0.0 -0.068801 -2.33436 -62.1505 141.677 -66.9787 0.507261 0.0 0.856721 2.00384 0.020621 3.21946 -7.88791 -4.58653 2.28722 -28.3707 1.12571 2.08513 -9.77916 15.0 -6.95788 9.86015 -0.752979 -25.9811 -0.867286 -1.17531 -8.94218 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.97588 -0.006631 -0.218209) (-0.000146 0.999518 -0.03103) (0.21831 0.030313 0.975409)) pos #f(157.636 6.78396 275.124)) :zmp #f(199.954 0.020097 0.0) :wrench-list ((#f(-7.68972 -0.108458 438.883) #f(-7.69347 -0.108458 439.037) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.735258 20.3092 0.017825) #f(0.735258 20.3151 0.017825) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.956 :angle-vector #f(0.284685 -4.21102 -62.2208 141.772 -66.9846 2.44267 0.0 -0.072336 -2.32337 -62.1187 141.67 -66.985 0.505729 0.0 0.811403 2.00357 -0.011872 3.25143 -7.98786 -4.575 2.32454 -28.3996 1.02954 2.0521 -9.82037 15.0 -7.05875 9.86065 -0.742 -25.9915 -0.805517 -1.14372 -8.97055 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.975852 -0.006475 -0.218338) (-0.000272 0.999524 -0.030856) (0.218434 0.03017 0.975385)) pos #f(157.615 6.73889 274.775)) :zmp #f(199.953 0.019933 0.0) :wrench-list ((#f(-6.84744 -0.093348 428.189) #f(-6.85073 -0.093348 428.338) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.711511 20.107 0.015679) #f(0.711511 20.1128 0.015679) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.96 :angle-vector #f(0.288503 -4.21633 -62.191 141.758 -66.9895 2.4628 0.0 -0.076454 -2.30358 -62.0879 141.653 -66.9897 0.500556 0.0 0.770941 2.00332 -0.039568 3.27686 -8.06715 -4.56973 2.3541 -28.4226 0.945901 2.02133 -9.85598 15.0 -7.1399 9.85976 -0.731843 -26.002 -0.751506 -1.11505 -8.99644 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.975858 -0.006299 -0.218317) (-0.000393 0.999532 -0.030595) (0.218408 0.029942 0.975398)) pos #f(157.575 6.67085 274.517)) :zmp #f(199.952 0.019777 0.0) :wrench-list ((#f(-6.04141 -0.079373 417.21) #f(-6.04428 -0.079373 417.354) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.687841 19.8755 0.01366) #f(0.687841 19.8811 0.01366) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.964 :angle-vector #f(0.291686 -4.21156 -62.1621 141.735 -66.9931 2.47759 0.0 -0.0811 -2.27557 -62.0582 141.628 -66.9933 0.491982 0.0 0.735085 2.00307 -0.062688 3.29616 -8.12718 -4.57035 2.37631 -28.44 0.874296 1.99279 -9.88625 15.0 -7.20267 9.85751 -0.722535 -26.0126 -0.704951 -1.08923 -9.01991 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.975895 -0.006105 -0.218156) (-0.00051 0.999542 -0.030252) (0.218241 0.029634 0.975445)) pos #f(157.518 6.58141 274.344)) :zmp #f(199.952 0.019628 0.0) :wrench-list ((#f(-5.27273 -0.066554 405.968) #f(-5.2752 -0.066554 406.107) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.664291 19.615 0.011771) #f(0.664291 19.6205 0.011771) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.968 :angle-vector #f(0.294291 -4.19746 -62.1342 141.705 -66.9957 2.48744 0.0 -0.086223 -2.23996 -62.0294 141.595 -66.9958 0.480262 0.0 0.703548 2.00284 -0.081493 3.30975 -8.16943 -4.57641 2.39166 -28.4523 0.814087 1.96642 -9.91146 15.0 -7.24847 9.85396 -0.714084 -26.0234 -0.665466 -1.06613 -9.04106 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.975961 -0.005894 -0.217866) (-0.000624 0.999555 -0.029834) (0.217945 0.029252 0.975523)) pos #f(157.446 6.47222 274.247)) :zmp #f(199.951 0.019487 0.0) :wrench-list ((#f(-4.54212 -0.054895 394.488) #f(-4.54422 -0.054895 394.622) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.640899 19.3262 0.010012) #f(0.640899 19.3316 0.010012) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.972 :angle-vector #f(0.29638 -4.17486 -62.1072 141.668 -66.9975 2.49276 0.0 -0.091769 -2.19742 -62.0017 141.555 -66.9975 0.465672 0.0 0.676003 2.00262 -0.09629 3.31812 -8.1955 -4.58746 2.40068 -28.4599 0.764512 1.94214 -9.93199 15.0 -7.27882 9.84919 -0.706478 -26.0345 -0.632588 -1.04559 -9.06 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976053 -0.005666 -0.217458) (-0.000736 0.999569 -0.029347) (0.217531 0.028804 0.975628)) pos #f(157.359 6.34505 274.219)) :zmp #f(199.95 0.019355 0.0) :wrench-list ((#f(-3.84994 -0.044385 382.796) #f(-3.8517 -0.044385 382.925) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.617697 19.0101 0.00838) #f(0.617697 19.0153 0.00838) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.976 :angle-vector #f(0.298014 -4.14462 -62.0811 141.624 -66.9986 2.494 0.0 -0.097685 -2.14866 -61.975 141.508 -66.9987 0.448506 0.0 0.652087 2.00242 -0.107428 3.32177 -8.20705 -4.60299 2.40398 -28.4634 0.724684 1.91981 -9.94822 15.0 -7.29534 9.84329 -0.699683 -26.0458 -0.60577 -1.02743 -9.07691 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976169 -0.005425 -0.216943) (-0.000846 0.999585 -0.028799) (0.21701 0.028296 0.975759)) pos #f(157.26 6.20178 274.25)) :zmp #f(199.95 0.019231 0.0) :wrench-list ((#f(-3.19623 -0.035001 370.918) #f(-3.19768 -0.035001 371.042) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.594711 18.6675 0.006872) #f(0.594711 18.6726 0.006872) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.98 :angle-vector #f(0.299256 -4.10766 -62.0558 141.575 -66.9993 2.49167 0.0 -0.103917 -2.09443 -61.9491 141.456 -66.9994 0.429075 0.0 0.631394 2.00222 -0.115301 3.32127 -8.20587 -4.62247 2.4022 -28.4632 0.693586 1.89927 -9.96062 15.0 -7.29971 9.83638 -0.693645 -26.0573 -0.584388 -1.0114 -9.09196 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976305 -0.00517 -0.216335) (-0.000955 0.999602 -0.028197) (0.216395 0.027735 0.975912)) pos #f(157.149 6.04436 274.332)) :zmp #f(199.949 0.019115 0.0) :wrench-list ((#f(-2.58064 -0.026703 358.881) #f(-2.58179 -0.026703 359.001) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.571963 18.2995 0.005482) #f(0.571963 18.3045 0.005482) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.984 :angle-vector #f(0.300168 -4.06497 -62.0313 141.521 -66.9997 2.48626 0.0 -0.110413 -2.03552 -61.924 141.399 -66.9997 0.407711 0.0 0.613485 2.00204 -0.120345 3.3172 -8.19384 -4.64534 2.39605 -28.46 0.67008 1.88031 -9.96969 15.0 -7.29373 9.82857 -0.68829 -26.0691 -0.567735 -0.997251 -9.10539 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976459 -0.004904 -0.215648) (-0.001063 0.99962 -0.027549) (0.215701 0.027129 0.976083)) pos #f(157.029 5.87485 274.455)) :zmp #f(199.948 0.019007 0.0) :wrench-list ((#f(-2.00247 -0.019436 346.716) #f(-2.00335 -0.019436 346.831) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.549468 17.9073 0.004203) #f(0.549468 17.9122 0.004203) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.988 :angle-vector #f(0.300818 -4.01758 -62.0074 141.462 -66.9999 2.47834 0.0 -0.117117 -1.97277 -61.8996 141.338 -66.9999 0.384765 0.0 0.59788 2.00187 -0.123039 3.31021 -8.17294 -4.67098 2.38629 -28.4542 0.652897 1.86269 -9.976 15.0 -7.2793 9.82002 -0.683521 -26.081 -0.555026 -0.984674 -9.11745 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976626 -0.00463 -0.214895) (-0.001172 0.999638 -0.026863) (0.214942 0.026487 0.976268)) pos #f(156.901 5.69539 274.609)) :zmp #f(199.948 0.018906 0.0) :wrench-list ((#f(-1.46067 -0.013132 334.451) #f(-1.4613 -0.013132 334.561) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.527235 17.4923 0.003027) #f(0.527235 17.497 0.003027) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.992 :angle-vector #f(0.30127 -3.96658 -61.984 141.4 -67.0 2.46848 0.0 -0.123976 -1.90707 -61.8756 141.273 -67.0 0.360604 0.0 0.584058 2.0017 -0.123907 3.30096 -8.14525 -4.69878 2.37374 -28.4464 0.640645 1.84613 -9.98016 15.0 -7.25838 9.81088 -0.679223 -26.0932 -0.545394 -0.97333 -9.12844 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976804 -0.004348 -0.214093) (-0.001281 0.999657 -0.026149) (0.214134 0.025816 0.976463)) pos #f(156.766 5.50819 274.784)) :zmp #f(199.947 0.018811 0.0) :wrench-list ((#f(-0.95382 -0.007706 322.117) #f(-0.954228 -0.007706 322.223) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.505269 17.0559 0.001942) #f(0.505269 17.0605 0.001942) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 0.996 :angle-vector #f(0.301592 -3.91312 -61.9609 141.336 -67.0 2.4573 0.0 -0.130935 -1.83932 -61.8521 141.205 -67.0 0.335616 0.0 0.571465 2.00155 -0.123515 3.29017 -8.11292 -4.72805 2.35928 -28.4374 0.631802 1.83031 -9.98284 15.0 -7.23305 9.80134 -0.675259 -26.1054 -0.537891 -0.962845 -9.13868 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.976988 -0.004062 -0.213258) (-0.001391 0.999676 -0.025415) (0.213292 0.025127 0.976665)) pos #f(156.628 5.31556 274.97)) :zmp #f(199.946 0.018721 0.0) :wrench-list ((#f(-0.480166 -0.00306 309.747) #f(-0.480363 -0.00306 309.848) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.48357 16.5998 0.000937) #f(0.48357 16.6043 0.000937) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 1.0 :angle-vector #f(0.301853 -3.85841 -61.9381 141.269 -67.0 2.44545 0.0 -0.137939 -1.77052 -61.8288 141.136 -67.0 0.310208 0.0 0.559505 2.00141 -0.122474 3.2786 -8.07825 -4.75808 2.34383 -28.4276 0.624723 1.81488 -9.98476 15.0 -7.20547 9.79158 -0.671473 -26.1178 -0.53149 -0.952807 -9.14852 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977174 -0.003773 -0.212406) (-0.001503 0.999694 -0.024671) (0.212434 0.024427 0.97687)) pos #f(156.486 5.11988 275.155)) :zmp #f(199.946 0.018635 0.0) :wrench-list ((#f(-0.03758 0.000918 297.373) #f(-0.03758 0.000918 297.47) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.462129 16.1256 -3.205097e-06) #f(0.462129 16.13 -3.205156e-06) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing)) (:time 1.0 :angle-vector #f(0.301853 -3.85841 -61.9381 141.269 -67.0 2.44545 0.0 -0.137939 -1.77052 -61.8288 141.136 -67.0 0.310208 0.0 0.559505 2.00141 -0.122474 3.2786 -8.07825 -4.75808 2.34383 -28.4276 0.624723 1.81488 -9.98476 15.0 -7.20547 9.79158 -0.671473 -26.1178 -0.53149 -0.952807 -9.14852 -15.0) :root-coords #s(coordinates plist nil rot #2f((0.977174 -0.003773 -0.212406) (-0.001503 0.999694 -0.024671) (0.212434 0.024427 0.97687)) pos #f(156.486 5.11988 275.155)) :zmp #f(199.946 0.018635 0.0) :wrench-list ((#f(-0.03758 0.000918 297.373) #f(-0.03758 0.000918 297.47) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0)) (#f(0.462129 16.1256 -3.205097e-06) #f(0.462129 16.13 -3.205156e-06) #f(0.0 0.0 0.0) #f(0.0 0.0 0.0))) :contact-state (:support :support :swing :swing))))
